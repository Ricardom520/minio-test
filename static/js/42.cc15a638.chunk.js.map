{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","../node_modules/_@mui_system@5.8.6@@mui/system/esm/createBox.js","../node_modules/_@mui_material@5.8.6@@mui/material/Box/Box.js","screens/shared/ErrorBlock.tsx","screens/Console/Common/FormComponents/FileSelector/FileSelector.tsx","screens/Console/Common/FormComponents/FileSelector/utils.ts","../node_modules/_@mui_icons-material@5.8.4@@mui/icons-material/Cancel.js","../node_modules/_@mui_icons-material@5.8.4@@mui/icons-material/AttachFile.js","screens/Console/Configurations/TiersConfiguration/utils.tsx","screens/Console/Configurations/TiersConfiguration/AddTierConfiguration.tsx"],"names":["connector","connect","state","sidebarOpen","system","operatorMode","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","textBoxWithIcon","paddingRight","errorState","top","right","overlayAction","maxWidth","maxHeight","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","_excluded","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","React","inProps","ref","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator","generate","errorBlock","errorMessage","withBreak","flexWrap","errorText","margin","fontFamily","lineHeight","valueString","whiteSpace","overflow","textOverflow","fileReselect","fieldBottom","borderBottom","fileInputField","accept","useState","showFileSelector","setShowSelector","Grid","fieldContainer","InputLabel","fieldLabelError","Tooltip","HelpIcon","e","fileName","get","evt","callback","file","target","files","reader","FileReader","readAsDataURL","onload","fileBase64","result","fileArray","toString","split","length","fileProcess","data","IconButton","ErrorBlock","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","minioServiceName","gcsServiceName","s3ServiceName","azureServiceName","tierTypes","serviceName","targetTitle","mapDispatchToProps","setErrorSnackMessage","modalBasic","settingsCommon","strongText","keyName","buttonContainer","customTitle","settingsFormContainer","lambdaNotif","background","border","borderRadius","marginBottom","marginRight","cursor","padding","lambdaNotifIcon","lambdaNotifTitle","paddingLeft","mainCont","backTo","match","history","saving","setSaving","setName","endpoint","setEndpoint","bucket","setBucket","prefix","setPrefix","region","setRegion","storageClass","setStorageClass","accessKey","setAccessKey","secretKey","setSecretKey","creds","setCreds","encodedCreds","setEncodedCreds","accountName","setAccountName","accountKey","setAccountKey","titleSelection","setTitleSelection","isFormValid","setIsFormValid","nameInputError","setNameInputError","validName","useCallback","test","useEffect","request","fields","tierType","s3","accesskey","secretkey","storageclass","gcs","azure","accountname","accountkey","payload","api","invoke","then","push","catch","err","valid","targetElement","find","backButton","src","logoButton","alt","noValidate","onSubmit","event","preventDefault","toUpperCase","encodedValue","settingsButtonContainer"],"mappings":"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","file":"static/js/42.cc15a638.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n}\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {actions && (\n        <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n          {actions}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport { Theme } from \"@mui/material/styles\";\n\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    errorBlock: {\n      color: theme.palette?.error.main || \"#C83B51\",\n    },\n  });\n\ninterface IErrorBlockProps {\n  classes: any;\n  errorMessage: string;\n  withBreak?: boolean;\n}\n\nconst ErrorBlock = ({\n  classes,\n  errorMessage,\n  withBreak = true,\n}: IErrorBlockProps) => {\n  return (\n    <React.Fragment>\n      {withBreak && <br />}\n      <Typography component=\"p\" variant=\"body1\" className={classes.errorBlock}>\n        {errorMessage}\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(ErrorBlock);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport get from \"lodash/get\";\nimport { Grid, InputLabel, Tooltip } from \"@mui/material\";\nimport IconButton from \"@mui/material/IconButton\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport CancelIcon from \"@mui/icons-material/Cancel\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport { fileProcess } from \"./utils\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport ErrorBlock from \"../../../../shared/ErrorBlock\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: string, i: string) => void;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  required?: boolean;\n  error?: string;\n  accept?: string;\n  value?: string;\n}\n\nconst componentHeight = 48;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n      height: componentHeight,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    errorText: {\n      margin: \"0\",\n      fontSize: \"0.75rem\",\n      marginTop: 3,\n      textAlign: \"left\",\n      fontFamily: \"Lato,sans-serif\",\n      fontWeight: 400,\n      lineHeight: \"1.66\",\n      color: \"#dc1f2e\",\n    },\n    valueString: {\n      maxWidth: 350,\n      whiteSpace: \"nowrap\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      marginTop: 2,\n    },\n    fileReselect: {\n      display: \"flex\",\n      alignItems: \"center\",\n      height: componentHeight,\n    },\n    fieldBottom: {\n      borderBottom: \"#9c9c9c 1px solid\",\n    },\n    fileInputField: {\n      margin: \"13px 0\",\n    },\n  });\n\nconst FileSelector = ({\n  label,\n  classes,\n  onChange,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  required,\n  error = \"\",\n  accept = \"\",\n  value = \"\",\n}: InputBoxProps) => {\n  const [showFileSelector, setShowSelector] = useState(false);\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldBottom} ${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={`${error !== \"\" ? classes.fieldLabelError : \"\"} ${\n              classes.inputLabel\n            }`}\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        {showFileSelector || value === \"\" ? (\n          <div className={classes.textBoxContainer}>\n            <input\n              type=\"file\"\n              name={name}\n              onChange={(e) => {\n                const fileName = get(e, \"target.files[0].name\", \"\");\n                fileProcess(e, (data: any) => {\n                  onChange(data, fileName);\n                });\n              }}\n              accept={accept}\n              required={required}\n              disabled={disabled}\n              className={classes.fileInputField}\n            />\n\n            {value !== \"\" && (\n              <IconButton\n                color=\"primary\"\n                aria-label=\"upload picture\"\n                component=\"span\"\n                onClick={() => {\n                  setShowSelector(false);\n                }}\n                disableRipple={false}\n                disableFocusRipple={false}\n                size=\"large\"\n              >\n                <CancelIcon />\n              </IconButton>\n            )}\n\n            {error !== \"\" && <ErrorBlock errorMessage={error} />}\n          </div>\n        ) : (\n          <div className={classes.fileReselect}>\n            <div className={classes.valueString}>{value}</div>\n            <IconButton\n              color=\"primary\"\n              aria-label=\"upload picture\"\n              component=\"span\"\n              onClick={() => {\n                setShowSelector(true);\n              }}\n              disableRipple={false}\n              disableFocusRipple={false}\n              size=\"large\"\n            >\n              <AttachFileIcon />\n            </IconButton>\n          </div>\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(FileSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const fileProcess = (evt: any, callback: any) => {\n  const file = evt.target.files[0];\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => {\n    // reader.readAsDataURL(file) output will be something like: data:application/x-x509-ca-cert;base64,LS0tLS1CRUdJTiBDRVJUSU\n    // we care only about the actual base64 part (everything after \"data:application/x-x509-ca-cert;base64,\")\n    const fileBase64 = reader.result;\n    if (fileBase64) {\n      const fileArray = fileBase64.toString().split(\"base64,\");\n\n      if (fileArray.length === 2) {\n        callback(fileArray[1]);\n      }\n    }\n  };\n};\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5c0-1.38 1.12-2.5 2.5-2.5s2.5 1.12 2.5 2.5v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5c0 1.38 1.12 2.5 2.5 2.5s2.5-1.12 2.5-2.5V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z\"\n}), 'AttachFile');\n\nexports.default = _default;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: \"/minio-logo.svg\",\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: \"/gcs-logo.svg\",\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: \"/aws-logo.svg\",\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: \"/azure-logo.svg\",\n  },\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState, useCallback } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button } from \"@mui/material\";\nimport { setErrorSnackMessage } from \"../../../../actions\";\nimport {\n  modalBasic,\n  settingsCommon,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport api from \"../../../../common/api\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport FileSelector from \"../../Common/FormComponents/FileSelector/FileSelector\";\nimport BackSettingsIcon from \"../../../../icons/BackSettingsIcon\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport {\n  azureServiceName,\n  gcsServiceName,\n  minioServiceName,\n  s3ServiceName,\n  tierTypes,\n} from \"./utils\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    strongText: {\n      fontWeight: 700,\n    },\n    keyName: {\n      marginLeft: 5,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    customTitle: {\n      ...settingsCommon.customTitle,\n      marginTop: 0,\n    },\n    settingsFormContainer: {\n      ...settingsCommon.settingsFormContainer,\n      height: \"calc(100vh - 422px)\",\n    },\n    lambdaNotif: {\n      background:\n        \"linear-gradient(90deg, rgba(249,249,250,1) 0%, rgba(250,250,251,1) 68%, rgba(254,254,254,1) 100%)\",\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 5,\n      height: 80,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      marginBottom: 16,\n      marginRight: 8,\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: \"hidden\",\n    },\n    lambdaNotifIcon: {\n      backgroundColor: \"#FEFEFE\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 80,\n      height: 80,\n\n      \"& img\": {\n        maxWidth: 46,\n        maxHeight: 46,\n      },\n    },\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Lato,sans-serif\",\n      paddingLeft: 18,\n    },\n    mainCont: {\n      maxWidth: 1180,\n      paddingLeft: 38,\n      paddingRight: 38,\n    },\n    backTo: {\n      margin: \"20px 0px 0\",\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n  match: any;\n  history: any;\n}\n\nconst AddTierConfiguration = ({\n  classes,\n  setErrorSnackMessage,\n  match,\n  history,\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [saving, setSaving] = useState<boolean>(false);\n\n  // Form Items\n  const [name, setName] = useState<string>(\"\");\n  const [endpoint, setEndpoint] = useState<string>(\"\");\n  const [bucket, setBucket] = useState<string>(\"\");\n  const [prefix, setPrefix] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState<string>(\"\");\n\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n\n  const [creds, setCreds] = useState<string>(\"\");\n  const [encodedCreds, setEncodedCreds] = useState<string>(\"\");\n\n  const [accountName, setAccountName] = useState<string>(\"\");\n  const [accountKey, setAccountKey] = useState<string>(\"\");\n\n  const [titleSelection, setTitleSelection] = useState<string>(\"\");\n\n  const type = get(match, \"params.service\", \"s3\");\n\n  // Validations\n  const [isFormValid, setIsFormValid] = useState<boolean>(true);\n  const [nameInputError, setNameInputError] = useState<string>(\"\");\n\n  // Extra validation functions\n\n  const validName = useCallback(() => {\n    const patternAgainst = /^[A-Z0-9-_]+$/; // Only allow uppercase, numbers, dashes and underscores\n    if (patternAgainst.test(name)) {\n      setNameInputError(\"\");\n      return true;\n    }\n\n    setNameInputError(\n      \"Please verify that string is uppercase only and contains valid characters (numbers, dashes & underscores).\"\n    );\n    return false;\n  }, [name]);\n\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      let request = {};\n      let fields = {\n        name,\n        endpoint,\n        bucket,\n        prefix,\n        region,\n      };\n\n      let tierType = type;\n\n      if (type === \"minio\") {\n        tierType = \"s3\";\n      }\n\n      switch (type) {\n        case \"minio\":\n        case \"s3\":\n          request = {\n            s3: {\n              ...fields,\n              accesskey: accessKey,\n              secretkey: secretKey,\n              storageclass: storageClass,\n            },\n          };\n          break;\n        case \"gcs\":\n          request = {\n            gcs: {\n              ...fields,\n              creds: encodedCreds,\n            },\n          };\n          break;\n        case \"azure\":\n          request = {\n            azure: {\n              ...fields,\n              accountname: accountName,\n              accountkey: accountKey,\n            },\n          };\n      }\n\n      let payload = {\n        type: tierType,\n        ...request,\n      };\n\n      api\n        .invoke(\"POST\", `/api/v1/admin/tiers`, payload)\n        .then(() => {\n          setSaving(false);\n\n          history.push(\"/tiers\");\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    history,\n    name,\n    prefix,\n    region,\n    saving,\n    secretKey,\n    setErrorSnackMessage,\n    storageClass,\n    type,\n  ]);\n\n  useEffect(() => {\n    let valid = true;\n    if (type === \"\") {\n      valid = false;\n    }\n    if (name === \"\" || !validName()) {\n      valid = false;\n    }\n    if (endpoint === \"\") {\n      valid = false;\n    }\n    if (bucket === \"\") {\n      valid = false;\n    }\n    if (prefix === \"\") {\n      valid = false;\n    }\n    if (region === \"\") {\n      valid = false;\n    }\n\n    if (type === \"s3\" || type === \"minio\") {\n      if (accessKey === \"\") {\n        valid = false;\n      }\n      if (secretKey === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"gcs\") {\n      if (encodedCreds === \"\") {\n        valid = false;\n      }\n    }\n\n    if (type === \"azure\") {\n      if (accountName === \"\") {\n        valid = false;\n      }\n      if (accountKey === \"\") {\n        valid = false;\n      }\n    }\n\n    setIsFormValid(valid);\n  }, [\n    accessKey,\n    accountKey,\n    accountName,\n    bucket,\n    encodedCreds,\n    endpoint,\n    isFormValid,\n    name,\n    prefix,\n    region,\n    secretKey,\n    storageClass,\n    type,\n    validName,\n  ]);\n\n  useEffect(() => {\n    switch (type) {\n      case \"gcs\":\n        setEndpoint(\"https://storage.googleapis.com/\");\n        setTitleSelection(\"Google Cloud\");\n        break;\n      case \"s3\":\n        setEndpoint(\"https://s3.amazonaws.com\");\n        setTitleSelection(\"Amazon S3\");\n        break;\n      case \"azure\":\n        setEndpoint(\"http://blob.core.windows.net\");\n        setTitleSelection(\"Azure\");\n        break;\n      case \"minio\":\n        setEndpoint(\"\");\n        setTitleSelection(\"MinIO\");\n    }\n  }, [type]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  // Input actions\n  const updateTierName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value.toUpperCase());\n  };\n\n  const backClick = () => {\n    history.push(\"/tiers/add\");\n  };\n\n  const targetElement = tierTypes.find((item) => item.serviceName === type);\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Tiers\" />\n      <Grid container className={classes.mainCont}>\n        <Grid item xs={12} className={classes.backTo}>\n          <button onClick={backClick} className={classes.backButton}>\n            <BackSettingsIcon />\n            Back To Tier Type Selection\n          </button>\n        </Grid>\n        {type !== \"\" && (\n          <Fragment>\n            <Grid item xs={12}>\n              {targetElement && (\n                <div\n                  key={`icon-${targetElement.targetTitle}`}\n                  className={classes.lambdaNotif}\n                >\n                  <div className={classes.lambdaNotifIcon}>\n                    <img\n                      src={targetElement.logo}\n                      className={classes.logoButton}\n                      alt={targetElement.targetTitle}\n                    />\n                  </div>\n\n                  <div className={classes.lambdaNotifTitle}>\n                    <b>\n                      {titleSelection ? titleSelection : \"\"} Tier Configuration\n                    </b>\n                  </div>\n                </div>\n              )}\n            </Grid>\n          </Fragment>\n        )}\n        <Grid item xs={12}>\n          <form noValidate onSubmit={submitForm}>\n            <Grid item xs={12}>\n              <Grid container>\n                {type !== \"\" && (\n                  <Fragment>\n                    <InputBoxWrapper\n                      id=\"name\"\n                      name=\"name\"\n                      label=\"Name\"\n                      placeholder=\"Enter Name (Eg. REMOTE-TIER)\"\n                      value={name}\n                      onChange={updateTierName}\n                      error={nameInputError}\n                    />\n                    <InputBoxWrapper\n                      id=\"endpoint\"\n                      name=\"endpoint\"\n                      label=\"Endpoint\"\n                      placeholder=\"Enter Endpoint\"\n                      value={endpoint}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setEndpoint(e.target.value);\n                      }}\n                    />\n                    {(type === s3ServiceName || type === minioServiceName) && (\n                      <Fragment>\n                        <InputBoxWrapper\n                          id=\"accessKey\"\n                          name=\"accessKey\"\n                          label=\"Access Key\"\n                          placeholder=\"Enter Access Key\"\n                          value={accessKey}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setAccessKey(e.target.value);\n                          }}\n                        />\n                        <InputBoxWrapper\n                          id=\"secretKey\"\n                          name=\"secretKey\"\n                          label=\"Secret Key\"\n                          placeholder=\"Enter Secret Key\"\n                          value={secretKey}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setSecretKey(e.target.value);\n                          }}\n                        />\n                      </Fragment>\n                    )}\n                    {type === gcsServiceName && (\n                      <Fragment>\n                        <FileSelector\n                          accept=\".json\"\n                          id=\"creds\"\n                          label=\"Credentials\"\n                          name=\"creds\"\n                          onChange={(encodedValue, fileName) => {\n                            setEncodedCreds(encodedValue);\n                            setCreds(fileName);\n                          }}\n                          value={creds}\n                        />\n                      </Fragment>\n                    )}\n                    {type === azureServiceName && (\n                      <Fragment>\n                        <InputBoxWrapper\n                          id=\"accountName\"\n                          name=\"accountName\"\n                          label=\"Account Name\"\n                          placeholder=\"Enter Account Name\"\n                          value={accountName}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setAccountName(e.target.value);\n                          }}\n                        />\n                        <InputBoxWrapper\n                          id=\"accountKey\"\n                          name=\"accountKey\"\n                          label=\"Account Key\"\n                          placeholder=\"Enter Account Key\"\n                          value={accountKey}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setAccountKey(e.target.value);\n                          }}\n                        />\n                      </Fragment>\n                    )}\n                    <InputBoxWrapper\n                      id=\"bucket\"\n                      name=\"bucket\"\n                      label=\"Bucket\"\n                      placeholder=\"Enter Bucket\"\n                      value={bucket}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setBucket(e.target.value);\n                      }}\n                    />\n                    <InputBoxWrapper\n                      id=\"prefix\"\n                      name=\"prefix\"\n                      label=\"Prefix\"\n                      placeholder=\"Enter Prefix\"\n                      value={prefix}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setPrefix(e.target.value);\n                      }}\n                    />\n                    <InputBoxWrapper\n                      id=\"region\"\n                      name=\"region\"\n                      label=\"Region\"\n                      placeholder=\"Enter Region\"\n                      value={region}\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setRegion(e.target.value);\n                      }}\n                    />\n                    {type === s3ServiceName ||\n                      (type === minioServiceName && (\n                        <InputBoxWrapper\n                          id=\"storageClass\"\n                          name=\"storageClass\"\n                          label=\"Storage Class\"\n                          placeholder=\"Enter Storage Class\"\n                          value={storageClass}\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>\n                          ) => {\n                            setStorageClass(e.target.value);\n                          }}\n                        />\n                      ))}\n                  </Fragment>\n                )}\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.settingsButtonContainer}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={saving || !isFormValid}\n              >\n                Save\n              </Button>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default withStyles(styles)(connector(AddTierConfiguration));\n"],"sourceRoot":""}