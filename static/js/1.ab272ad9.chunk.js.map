{"version":3,"sources":["../node_modules/_lodash@4.17.21@lodash/isString.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/classCallCheck.js","../node_modules/_@mui_material@5.8.6@@mui/material/internal/switchBaseClasses.js","../node_modules/_@mui_material@5.8.6@@mui/material/internal/SwitchBase.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/createClass.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/defineProperty.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/assertThisInitialized.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/getPrototypeOf.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/inherits.js","../node_modules/_@mui_icons-material@5.8.4@@mui/icons-material/ArrowDropDown.js","../node_modules/_react-lifecycles-compat@3.0.4@react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/_@mui_icons-material@5.8.4@@mui/icons-material/ArrowDropUp.js","../node_modules/_@mui_icons-material@5.8.4@@mui/icons-material/ViewColumn.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/utils/calculateSizeAndPositionDataAndUpdateScrollOffset.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/utils/CellSizeAndPositionManager.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/utils/maxElementSize.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/utils/ScalingCellSizeAndPositionManager.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/utils/createCallbackMemoizer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/utils/updateScrollIndexHelper.js","../node_modules/_dom-helpers@5.2.1@dom-helpers/esm/canUseDOM.js","../node_modules/_dom-helpers@5.2.1@dom-helpers/esm/scrollbarSize.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/utils/animationFrame.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/Grid.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/utils/requestAnimationTimeout.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/defaultOverscanIndicesGetter.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/defaultCellRangeRenderer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Grid/accessibilityOverscanIndicesGetter.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/ArrowKeyStepper/types.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/ArrowKeyStepper/ArrowKeyStepper.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/AutoSizer/AutoSizer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/CellMeasurer/CellMeasurer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Collection/CollectionView.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Collection/Section.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Collection/SectionManager.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/utils/getUpdatedOffsetForIndex.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Collection/Collection.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Collection/utils/calculateSizeAndPositionData.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Collection/index.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/ColumnSizer/ColumnSizer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/ColumnSizer/index.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/InfiniteLoader/InfiniteLoader.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/InfiniteLoader/index.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/List/List.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/vendor/binarySearchBounds.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/vendor/intervalTree.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Masonry/PositionCache.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Masonry/Masonry.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Masonry/index.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/MultiGrid/CellMeasurerCacheDecorator.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/MultiGrid/MultiGrid.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/ScrollSync/ScrollSync.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/defaultHeaderRowRenderer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/SortDirection.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/SortIndicator.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/defaultHeaderRenderer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/defaultRowRenderer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/Column.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/Table.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/defaultCellDataGetter.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/defaultCellRenderer.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/Table/index.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/WindowScroller/utils/onScroll.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/WindowScroller/utils/dimensions.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/WindowScroller/WindowScroller.js","../node_modules/_@mui_material@5.8.6@@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/_@mui_material@5.8.6@@mui/material/CircularProgress/CircularProgress.js","../node_modules/_@mui_material@5.8.6@@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/_@mui_material@5.8.6@@mui/material/internal/svg-icons/CheckBox.js","../node_modules/_@mui_material@5.8.6@@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/_@mui_material@5.8.6@@mui/material/Checkbox/checkboxClasses.js","../node_modules/_@mui_material@5.8.6@@mui/material/Checkbox/Checkbox.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/objectWithoutProperties.js","../node_modules/_react-virtualized@9.22.3@react-virtualized/dist/es/vendor/detectElementResize.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/typeof.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/setPrototypeOf.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/objectWithoutPropertiesLoose.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/toConsumableArray.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/iterableToArray.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/nonIterableSpread.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/slicedToArray.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/arrayWithHoles.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/nonIterableRest.js"],"names":["baseGetTag","require","isArray","isObjectLike","module","exports","value","instance","Constructor","TypeError","__esModule","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","SwitchBaseRoot","styled","ButtonBase","ownerState","_extends","padding","borderRadius","edge","marginLeft","size","marginRight","SwitchBaseInput","cursor","position","opacity","width","height","top","left","margin","zIndex","SwitchBase","React","props","ref","autoFocus","checkedProp","checked","checkedIcon","className","defaultChecked","disabledProp","disabled","disableFocusRipple","icon","id","inputProps","inputRef","name","onBlur","onChange","onFocus","readOnly","required","tabIndex","type","other","_objectWithoutPropertiesLoose","useControlled","controlled","default","Boolean","state","setCheckedState","muiFormControl","useFormControl","hasLabelFor","classes","slots","root","capitalize","input","composeClasses","useUtilityClasses","_jsxs","component","clsx","centerRipple","focusRipple","role","undefined","event","children","_jsx","nativeEvent","defaultPrevented","newChecked","target","_defineProperties","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","_typeof","assertThisInitialized","self","call","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","bind","__proto__","subClass","superClass","create","constructor","_interopRequireDefault","_createSvgIcon","_jsxRuntime","_default","jsx","d","componentWillMount","this","getDerivedStateFromProps","setState","componentWillReceiveProps","nextProps","prevState","componentWillUpdate","nextState","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","Component","isReactComponent","Error","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","componentName","displayName","newApiName","componentDidUpdate","maybeSnapshot","snapshot","__suppressDeprecationWarning","calculateSizeAndPositionDataAndUpdateScrollOffset","_ref","cellCount","cellSize","computeMetadataCallback","computeMetadataCallbackProps","nextCellsCount","nextCellSize","nextScrollToIndex","scrollToIndex","updateScrollOffsetForScrollToIndex","CellSizeAndPositionManager","cellSizeGetter","estimatedCellSize","_classCallCheck","_defineProperty","_cellSizeGetter","_cellCount","_estimatedCellSize","_createClass","_ref2","_lastMeasuredIndex","index","concat","lastMeasuredCellSizeAndPosition","getSizeAndPositionOfLastMeasuredCell","offset","isNaN","_cellSizeAndPositionData","_lastBatchedIndex","_ref3","_ref3$align","align","containerSize","currentOffset","targetIndex","idealOffset","datum","getSizeAndPositionOfCell","maxOffset","minOffset","Math","max","min","totalSize","getTotalSize","params","start","_findNearestCell","stop","high","low","middle","floor","interval","_binarySearch","lastMeasuredIndex","_exponentialSearch","getMaxElementSize","window","chrome","ScalingCellSizeAndPositionManager","_ref$maxScrollSize","maxScrollSize","_objectWithoutProperties","_cellSizeAndPositionManager","_maxScrollSize","configure","getCellCount","getEstimatedCellSize","getLastMeasuredIndex","safeTotalSize","offsetPercentage","_getOffsetPercentage","round","_safeOffsetToOffset","getUpdatedOffsetForIndex","_offsetToSafeOffset","_ref4","getVisibleCellRange","resetCell","_ref5","_ref6","_ref7","createCallbackMemoizer","requireAllKeys","arguments","cachedIndices","callback","indices","keys","allInitialized","every","Array","indexChanged","some","cachedValue","join","updateScrollIndexHelper","cellSizeAndPositionManager","previousCellsCount","previousCellSize","previousScrollToAlignment","previousScrollToIndex","previousSize","scrollOffset","scrollToAlignment","sizeJustIncreasedFromZero","updateScrollIndexCallback","hasScrollToIndex","win","document","createElement","scrollbarSize","recalc","canUseDOM","scrollDiv","style","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","_class","_temp","request","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancel","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","raf","caf","cancelAnimationTimeout","frame","requestAnimationTimeout","delay","Promise","resolve","then","Date","now","timeout","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","source","forEach","getOwnPropertyDescriptors","defineProperties","SCROLL_POSITION_CHANGE_REASONS","Grid","_React$PureComponent","_this","_possibleConstructorReturn","_assertThisInitialized","_disablePointerEventsTimeoutId","isScrolling","needToResetStyleCache","onSectionRendered","_onGridRenderedMemoizer","columnOverscanStartIndex","_columnStartIndex","columnOverscanStopIndex","_columnStopIndex","columnStartIndex","_renderedColumnStartIndex","columnStopIndex","_renderedColumnStopIndex","rowOverscanStartIndex","_rowStartIndex","rowOverscanStopIndex","_rowStopIndex","rowStartIndex","_renderedRowStartIndex","rowStopIndex","_renderedRowStopIndex","_scrollingContainer","handleScrollEvent","columnSizeAndPositionManager","columnCount","_wrapSizeGetter","columnWidth","_getEstimatedColumnSize","rowSizeAndPositionManager","rowCount","rowHeight","_getEstimatedRowSize","instanceProps","prevColumnWidth","prevRowHeight","prevColumnCount","prevRowCount","prevIsScrolling","prevScrollToColumn","scrollToColumn","prevScrollToRow","scrollToRow","scrollbarSizeMeasured","scrollDirectionHorizontal","scrollDirectionVertical","scrollLeft","scrollTop","scrollPositionChangeReason","_initialScrollTop","_getCalculatedScrollTop","_initialScrollLeft","_getCalculatedScrollLeft","_inherits","_ref$alignment","alignment","_ref$columnIndex","columnIndex","_ref$rowIndex","rowIndex","offsetProps","_ref2$scrollLeft","scrollLeftParam","_ref2$scrollTop","scrollTopParam","_debounceScrollEnded","_this$props","autoHeight","autoWidth","totalRowsHeight","totalColumnsWidth","newState","_invokeOnScrollMemoizer","_deferredInvalidateColumnIndex","_deferredInvalidateRowIndex","_this$props2","_ref4$columnIndex","_ref4$rowIndex","_this$props3","_recomputeScrollLeftFlag","_recomputeScrollTopFlag","_styleCache","_cellCache","forceUpdate","_updateScrollLeftForScrollToColumn","_updateScrollTopForScrollToRow","_this$props4","getScrollbarSize","_handleInvalidatedGridSize","stateUpdate","_getScrollToPositionStateUpdate","sizeIsBiggerThanZero","_invokeOnGridRenderedHelper","_maybeCallOnScrollbarPresenceChange","_this2","_this$props5","_this$state","columnOrRowCountJustIncreasedFromZero","_this$props6","autoContainerWidth","containerProps","containerRole","containerStyle","noContentRenderer","_this$state2","_isScrolling","gridStyle","boxSizing","direction","WebkitOverflowScrolling","willChange","_resetStyleCache","_calculateChildrenToRender","verticalScrollBarSize","horizontalScrollBarSize","_horizontalScrollBarSize","_verticalScrollBarSize","_scrollbarPresenceChanged","overflowX","overflowY","childrenToDisplay","_childrenToDisplay","showNoContentRenderer","_setScrollingContainerRef","onScroll","_onScroll","maxWidth","maxHeight","pointerEvents","cellRenderer","cellRangeRenderer","deferredMeasurementCache","overscanColumnCount","overscanIndicesGetter","overscanRowCount","isScrollingOptOut","visibleColumnIndices","visibleRowIndices","horizontalOffsetAdjustment","getOffsetAdjustment","verticalOffsetAdjustment","overscanColumnIndices","overscanCellsCount","scrollDirection","startIndex","stopIndex","overscanRowIndices","overscanStartIndex","overscanStopIndex","hasFixedHeight","has","hasFixedWidth","cellCache","parent","styleCache","scrollingResetTimeInterval","_debounceScrollEndedCallback","recomputeGridSize","_this3","_onScrollMemoizer","_this3$props","clientHeight","scrollHeight","scrollWidth","hasOwnProperty","onScrollbarPresenceChange","horizontal","vertical","_ref8","_getScrollLeftForScrollToColumnStateUpdate","_getScrollTopForScrollToRowStateUpdate","assign","maybeStateA","maybeStateB","estimatedColumnSize","estimatedRowSize","_ref9","finalColumn","scrollBarSize","calculatedScrollLeft","finalRow","calculatedScrollTop","renderedCells","areOffsetsAdjusted","canCacheStyle","rowDatum","columnDatum","isVisible","cellRendererParams","renderedCell","defaultOverscanIndicesGetter","ArrowKeyStepper","_getPrototypeOf2","_len","args","_key","mode","_this$_getScrollState","_getScrollState","scrollToColumnPrevious","scrollToRowPrevious","_this$_getScrollState2","preventDefault","_updateScrollState","_this$_getScrollState3","onKeyDown","_onKeyDown","_onSectionRendered","isControlled","onScrollToChange","AutoSizer","_React$Component","defaultHeight","defaultWidth","disableHeight","disableWidth","onResize","_parentNode","offsetHeight","_window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","newHeight","newWidth","autoSizer","_autoSizer","nonce","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","createDetectElementResize","addResizeListener","_onResize","removeResizeListener","outerStyle","childParams","_setRef","CellMeasurer","cache","_this$props$columnInd","_this$props$rowIndex","_this$_getCellMeasure","_getCellMeasurements","getHeight","getWidth","set","element","Element","console","warn","_child","_maybeMeasureCell","measure","_measure","registerChild","_registerChild","node","findDOMNode","styleWidth","styleHeight","ceil","_this$props2$columnIn","_this$props2$rowIndex","_this$_getCellMeasure2","invalidateCellSizeAfterRender","CollectionView","cellLayoutManager","_onSectionRenderedMemoizer","getLastRenderedIndices","scrollToCell","scrollPosition","getScrollPositionForCell","cellIndex","_setScrollPosition","_enablePointerEventsAfterDelay","isScrollingChange","_scrollbarSize","_cellLayoutManager$ge","totalHeight","totalWidth","cancelable","_scrollbarSizeMeasured","_calculateSizeAndPositionDataOnNextUpdate","_updateScrollPositionForScrollToCell","_invokeOnSectionRenderedHelper","_cellLayoutManager$ge2","horizontalOverscanSize","verticalOverscanSize","_this$state3","_lastRenderedCellCount","_lastRenderedCellLayoutManager","calculateSizeAndPositionData","_cellLayoutManager$ge3","right","bottom","cellRenderers","x","y","collectionStyle","propTypes","Section","_indexMap","_indices","SectionManager","sectionSize","_sectionSize","_cellMetadata","_sections","getSections","section","getCellIndices","map","sectionXStart","sectionXStop","sectionYStart","sectionYStop","sections","sectionX","sectionY","toString","cellMetadatum","addCellIndex","_ref$align","cellOffset","Collection","context","_lastRenderedCellIndices","_isScrollingChange","_setCollectionViewRef","_collectionView","recomputeCellSizesAndPositions","data","cellSizeAndPositionGetter","cellMetadata","sectionManager","registerCell","_calculateSizeAndPositionData","_sectionManager","_height","_width","cellGroupRenderer","getCellMetadata","cellRendererProps","ColumnSizer","columnMaxWidth","columnMinWidth","_registeredChild","safeColumnMinWidth","safeColumnMaxWidth","adjustedWidth","getColumnWidth","child","InfiniteLoader","_loadMoreRowsMemoizer","_onRowsRendered","autoReload","_doStuff","_lastRenderedStartIndex","_lastRenderedStopIndex","onRowsRendered","unloadedRanges","loadMoreRows","unloadedRange","promise","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","currentIndex","recomputeSize","recomputeRowHeights","forceUpdateReactVirtualizedComponent","isRowLoaded","minimumBatchSize","threshold","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index","firstUnloadedRange","_index2","scanForUnloadedRanges","squashedUnloadedRanges","_toConsumableArray","_loadUnloadedRanges","registeredChild","List","rowRenderer","widthDescriptor","getOffsetForCell","measureAllCells","_ref6$columnIndex","_ref6$rowIndex","scrollToPosition","noRowsRenderer","classNames","_cellRenderer","accessibilityOverscanIndicesGetter","ge","a","c","l","h","m","_GEP","_GEA","gt","_GTP","_GTA","lt","_LTP","_LTA","le","_LEP","_LEA","eq","p","_EQP","_EQA","IntervalTreeNode","mid","leftPoints","rightPoints","count","proto","copy","b","rebuild","intervals","ntree","createIntervalTree","rebuildWithInterval","rebuildWithoutInterval","idx","indexOf","splice","reportLeftRange","arr","hi","cb","r","reportRightRange","lo","reportRange","compareNumbers","compareBegin","compareEnd","pts","sort","leftIntervals","rightIntervals","centerIntervals","s","slice","IntervalTree","result","insert","weight","bounds","remove","n","queryPoint","queryInterval","tproto","get","PositionCache","defaultCellHeight","unmeasuredCellCount","tallestColumnSize","renderCallback","_intervalTree","_slicedToArray","_leftMap","columnSizeMap","_columnSizeMap","columnHeight","Masonry","eventScrollTop","currentTarget","_getEstimatedTotalHeight","_debounceResetIsScrolling","_positionCache","_invalidateOnUpdateStartIndex","_invalidateOnUpdateStopIndex","_populatePositionCache","_checkInvalidateOnUpdate","_invokeOnScrollCallback","_invokeOnCellsRenderedCallback","_debounceResetIsScrollingId","cellMeasurerCache","keyMapper","overscanByPixels","rowDirection","estimateTotalHeight","shortestColumnSize","measuredCellCount","range","_style","batchSize","_startIndex","_stopIndex","_debounceResetIsScrollingCallback","estimatedColumnCount","_onScrollMemoized","_startIndexMemoized","_stopIndexMemoized","onCellsRendered","cellPositioner","_cellPositioner","setPosition","noop","CellMeasurerCacheDecorator","_cellMeasurerCache","_columnIndexOffset","_rowIndexOffset","_params$columnIndexOf","columnIndexOffset","_params$rowIndexOffse","rowIndexOffset","clear","clearAll","MultiGrid","showHorizontalScrollbar","showVerticalScrollbar","_bottomLeftGrid","_bottomRightGrid","rest","fixedRowCount","fixedColumnCount","scrollInfo","_topLeftGrid","_topRightGrid","_fixedColumnCount","_fixedRowCount","_maybeCalculateCachedStyles","_deferredMeasurementCacheBottomLeftGrid","_deferredMeasurementCacheBottomRightGrid","_deferredMeasurementCacheTopRightGrid","_ref7$columnIndex","_ref7$rowIndex","_ref8$columnIndex","_ref8$rowIndex","adjustedColumnIndex","adjustedRowIndex","_leftGridWidth","_topGridHeight","_this$props7","_this$props8","_prepareForRender","_this$state4","_containerOuterStyle","_containerTopStyle","_renderTopLeftGrid","_renderTopRightGrid","_containerBottomStyle","_renderBottomLeftGrid","_renderBottomRightGrid","_getTopGridHeight","leftGridWidth","_getLeftGridWidth","topGridHeight","resetAll","_this$props9","enableFixedColumnScroll","enableFixedRowScroll","styleBottomLeftGrid","styleBottomRightGrid","styleTopLeftGrid","styleTopRightGrid","sizeChange","_lastRenderedHeight","_lastRenderedWidth","leftSizeChange","_lastRenderedColumnWidth","_lastRenderedFixedColumnCount","topSizeChange","_lastRenderedFixedRowCount","_lastRenderedRowHeight","_lastRenderedStyle","_lastRenderedStyleBottomLeftGrid","_bottomLeftGridStyle","_lastRenderedStyleBottomRightGrid","_bottomRightGridStyle","_lastRenderedStyleTopLeftGrid","_topLeftGridStyle","_lastRenderedStyleTopRightGrid","_topRightGridStyle","hideBottomLeftGridScrollbar","additionalRowCount","_getBottomGridHeight","gridWidth","bottomLeftGrid","_cellRendererBottomLeftGrid","classNameBottomLeftGrid","_onScrollTop","_bottomLeftGridRef","_rowHeightBottomGrid","_cellRendererBottomRightGrid","classNameBottomRightGrid","_columnWidthRightGrid","_onScrollbarPresenceChange","_bottomRightGridRef","_getRightGridWidth","classNameTopLeftGrid","_topLeftGridRef","hideTopRightGridScrollbar","_this$state5","additionalColumnCount","additionalHeight","gridHeight","topRightGrid","_cellRendererTopRightGrid","classNameTopRightGrid","_onScrollLeft","_topRightGridRef","ScrollSync","defaultHeaderRowRenderer","columns","SortDirection","ASC","DESC","SortIndicator","sortDirection","viewBox","fill","defaultHeaderRenderer","dataKey","label","sortBy","showSortIndicator","title","defaultRowRenderer","onRowClick","onRowDoubleClick","onRowMouseOut","onRowMouseOver","onRowRightClick","rowData","a11yProps","onClick","onDoubleClick","onMouseOut","onMouseOver","onContextMenu","Column","cellDataGetter","cellData","String","defaultSortDirection","flexGrow","flexShrink","headerRenderer","Table","scrollbarWidth","_createColumn","_createRow","_ref3$columnIndex","_ref3$rowIndex","_Grid","_setScrollbarWidth","disableHeader","gridClassName","headerHeight","headerRowRenderer","rowClassName","rowStyle","availableRowsHeight","rowClass","rowStyleObject","_cachedColumnStyles","toArray","column","flexStyles","_getFlexStyleForColumn","_getHeaderColumns","onColumnClick","_column$props","columnData","headerOnClick","headerOnKeyDown","headerTabIndex","headerAriaSort","headerAriaLabel","headerClassName","headerStyle","onHeaderClick","_column$props2","disableSort","sortEnabled","ReactVirtualized__Table__sortableHeaderColumn","renderedHeader","newSortDirection","rowGetter","flattenedStyle","_getRowHeight","customStyle","flexValue","flex","msFlex","WebkitFlex","minWidth","_this4","_createHeader","getScrollbarWidth","mountedInstances","originalBodyPointerEvents","disablePointerEventsTimeoutId","enablePointerEventsIfDisabled","enablePointerEventsAfterDelayCallback","__resetIsScrolling","onScrollWindow","maximumTimeout","enablePointerEventsAfterDelay","scrollElement","__handleWindowScrollEvent","registerScrollListener","addEventListener","unregisterScrollListener","removeEventListener","isWindow","getBoundingBox","getBoundingClientRect","getDimensions","innerHeight","innerWidth","serverHeight","serverWidth","getPositionOffset","container","documentElement","containerElement","elementRect","containerRect","getScrollOffset","_elementRect","_containerRect","scrollY","scrollX","getWindow","WindowScroller","updatePosition","scrollTo","_positionFromTop","_isMounted","_positionFromLeft","thisNode","ReactDOM","dimensions","_registerResizeListener","prevScrollElement","_unregisterResizeListener","onChildScroll","_onChildScroll","getCircularProgressUtilityClass","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","overridesResolver","styles","variant","color","theme","display","transition","transitions","vars","palette","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","inProps","useThemeProps","thickness","circleStyle","rootStyle","rootProps","circumference","PI","toFixed","transform","cx","cy","strokeWidth","createSvgIcon","getCheckboxUtilityClass","checkboxClasses","CheckboxRoot","shouldForwardProp","prop","rootShouldForwardProp","indeterminate","text","secondary","disableRipple","backgroundColor","action","activeChannel","primary","mainChannel","hoverOpacity","alpha","active","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_icon$props$fontSize","_indeterminateIcon$pr","iconProp","indeterminateIcon","indeterminateIconProp","composedClasses","fontSize","objectWithoutPropertiesLoose","excluded","sourceSymbolKeys","propertyIsEnumerable","hostWindow","attachEvent","global","requestFrame","fn","cancelFrame","resetTriggers","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollListener","e","__resizeRAF__","__resizeLast__","checkTriggers","__resizeListeners__","animation","keyframeprefix","animationstartevent","domPrefixes","split","startEvents","elm","animationName","toLowerCase","animationKeyframes","animationStyle","doc","elementStyle","getElementById","head","getElementsByTagName","setAttribute","styleSheet","cssText","createTextNode","createStyles","resizeTriggersHtml","trustedTypes","staticPolicy","createPolicy","createHTML","innerHTML","__animationListener__","detachEvent","len","arr2","arrayLikeToArray","minLen","from","test","Symbol","iterator","_setPrototypeOf","sourceKeys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","iter","arrayWithHoles","iterableToArrayLimit","nonIterableRest","_i","_s","_e","_arr","_n","_d","next","done","err"],"mappings":"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","file":"static/js/1.ab272ad9.chunk.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 10 5 5 5-5z\"\n}), 'ArrowDropDown');\n\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  }\n  // Binding \"this\" is important for shallow renderer support.\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(\n      prevProps,\n      prevState\n    );\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n}\n\n// React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (\n    typeof Component.getDerivedStateFromProps !== 'function' &&\n    typeof prototype.getSnapshotBeforeUpdate !== 'function'\n  ) {\n    return Component;\n  }\n\n  // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n  if (\n    foundWillMountName !== null ||\n    foundWillReceivePropsName !== null ||\n    foundWillUpdateName !== null\n  ) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName =\n      typeof Component.getDerivedStateFromProps === 'function'\n        ? 'getDerivedStateFromProps()'\n        : 'getSnapshotBeforeUpdate()';\n\n    throw Error(\n      'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n        componentName +\n        ' uses ' +\n        newApiName +\n        ' but also contains the following legacy lifecycles:' +\n        (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') +\n        (foundWillReceivePropsName !== null\n          ? '\\n  ' + foundWillReceivePropsName\n          : '') +\n        (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') +\n        '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' +\n        'https://fb.me/react-async-component-lifecycle-hooks'\n    );\n  }\n\n  // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  }\n\n  // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error(\n        'Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype'\n      );\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(\n      prevProps,\n      prevState,\n      maybeSnapshot\n    ) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag\n        ? this.__reactInternalSnapshot\n        : maybeSnapshot;\n\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m7 14 5-5 5 5z\"\n}), 'ArrowDropUp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.67 5v14H9.33V5h5.34zm1 14H21V5h-5.33v14zm-7.34 0V5H3v14h5.33z\"\n}), 'ViewColumn');\n\nexports.default = _default;","/**\n * Helper method that determines when to recalculate row or column metadata.\n */\nexport default function calculateSizeAndPositionDataAndUpdateScrollOffset(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSize = _ref.cellSize,\n      computeMetadataCallback = _ref.computeMetadataCallback,\n      computeMetadataCallbackProps = _ref.computeMetadataCallbackProps,\n      nextCellsCount = _ref.nextCellsCount,\n      nextCellSize = _ref.nextCellSize,\n      nextScrollToIndex = _ref.nextScrollToIndex,\n      scrollToIndex = _ref.scrollToIndex,\n      updateScrollOffsetForScrollToIndex = _ref.updateScrollOffsetForScrollToIndex;\n\n  // Don't compare cell sizes if they are functions because inline functions would cause infinite loops.\n  // In that event users should use the manual recompute methods to inform of changes.\n  if (cellCount !== nextCellsCount || (typeof cellSize === 'number' || typeof nextCellSize === 'number') && cellSize !== nextCellSize) {\n    computeMetadataCallback(computeMetadataCallbackProps); // Updated cell metadata may have hidden the previous scrolled-to item.\n    // In this case we should also update the scrollTop to ensure it stays visible.\n\n    if (scrollToIndex >= 0 && scrollToIndex === nextScrollToIndex) {\n      updateScrollOffsetForScrollToIndex();\n    }\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\n/**\n * Just-in-time calculates and caches size and position information for a collection of cells.\n */\nvar CellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  // Cache of size and position data for cells, mapped by cell index.\n  // Note that invalid values may exist in this map so only rely on cells up to this._lastMeasuredIndex\n  // Measurements for cells up to this index can be trusted; cells afterward should be estimated.\n  // Used in deferred mode to track which cells have been queued for measurement.\n  function CellSizeAndPositionManager(_ref) {\n    var cellCount = _ref.cellCount,\n        cellSizeGetter = _ref.cellSizeGetter,\n        estimatedCellSize = _ref.estimatedCellSize;\n\n    _classCallCheck(this, CellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionData\", {});\n\n    _defineProperty(this, \"_lastMeasuredIndex\", -1);\n\n    _defineProperty(this, \"_lastBatchedIndex\", -1);\n\n    _defineProperty(this, \"_cellCount\", void 0);\n\n    _defineProperty(this, \"_cellSizeGetter\", void 0);\n\n    _defineProperty(this, \"_estimatedCellSize\", void 0);\n\n    this._cellSizeGetter = cellSizeGetter;\n    this._cellCount = cellCount;\n    this._estimatedCellSize = estimatedCellSize;\n  }\n\n  _createClass(CellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return false;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(_ref2) {\n      var cellCount = _ref2.cellCount,\n          estimatedCellSize = _ref2.estimatedCellSize,\n          cellSizeGetter = _ref2.cellSizeGetter;\n      this._cellCount = cellCount;\n      this._estimatedCellSize = estimatedCellSize;\n      this._cellSizeGetter = cellSizeGetter;\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellCount;\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._estimatedCellSize;\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._lastMeasuredIndex;\n    }\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment() {\n      return 0;\n    }\n    /**\n     * This method returns the size and position for the cell at the specified index.\n     * It just-in-time calculates (or used cached values) for cells leading up to the index.\n     */\n\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      if (index < 0 || index >= this._cellCount) {\n        throw Error(\"Requested index \".concat(index, \" is outside of range 0..\").concat(this._cellCount));\n      }\n\n      if (index > this._lastMeasuredIndex) {\n        var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n        var offset = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n\n        for (var i = this._lastMeasuredIndex + 1; i <= index; i++) {\n          var size = this._cellSizeGetter({\n            index: i\n          }); // undefined or NaN probably means a logic error in the size getter.\n          // null means we're using CellMeasurer and haven't yet measured a given index.\n\n\n          if (size === undefined || isNaN(size)) {\n            throw Error(\"Invalid size returned for cell \".concat(i, \" of value \").concat(size));\n          } else if (size === null) {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: 0\n            };\n            this._lastBatchedIndex = index;\n          } else {\n            this._cellSizeAndPositionData[i] = {\n              offset: offset,\n              size: size\n            };\n            offset += size;\n            this._lastMeasuredIndex = index;\n          }\n        }\n      }\n\n      return this._cellSizeAndPositionData[index];\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._lastMeasuredIndex >= 0 ? this._cellSizeAndPositionData[this._lastMeasuredIndex] : {\n        offset: 0,\n        size: 0\n      };\n    }\n    /**\n     * Total size of all cells being measured.\n     * This value will be completely estimated initially.\n     * As cells are measured, the estimate will be updated.\n     */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var totalSizeOfMeasuredCells = lastMeasuredCellSizeAndPosition.offset + lastMeasuredCellSizeAndPosition.size;\n      var numUnmeasuredCells = this._cellCount - this._lastMeasuredIndex - 1;\n      var totalSizeOfUnmeasuredCells = numUnmeasuredCells * this._estimatedCellSize;\n      return totalSizeOfMeasuredCells + totalSizeOfUnmeasuredCells;\n    }\n    /**\n     * Determines a new offset that ensures a certain cell is visible, given the current offset.\n     * If the cell is already visible then the current offset will be returned.\n     * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n     *\n     * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n     * @param containerSize Size (width or height) of the container viewport\n     * @param currentOffset Container's current (x or y) offset\n     * @param totalSize Total size (width or height) of all cells\n     * @return Offset to use to ensure the specified cell is visible\n     */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n\n      if (containerSize <= 0) {\n        return 0;\n      }\n\n      var datum = this.getSizeAndPositionOfCell(targetIndex);\n      var maxOffset = datum.offset;\n      var minOffset = maxOffset - containerSize + datum.size;\n      var idealOffset;\n\n      switch (align) {\n        case 'start':\n          idealOffset = maxOffset;\n          break;\n\n        case 'end':\n          idealOffset = minOffset;\n          break;\n\n        case 'center':\n          idealOffset = maxOffset - (containerSize - datum.size) / 2;\n          break;\n\n        default:\n          idealOffset = Math.max(minOffset, Math.min(maxOffset, currentOffset));\n          break;\n      }\n\n      var totalSize = this.getTotalSize();\n      return Math.max(0, Math.min(totalSize - containerSize, idealOffset));\n    }\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(params) {\n      var containerSize = params.containerSize,\n          offset = params.offset;\n      var totalSize = this.getTotalSize();\n\n      if (totalSize === 0) {\n        return {};\n      }\n\n      var maxOffset = offset + containerSize;\n\n      var start = this._findNearestCell(offset);\n\n      var datum = this.getSizeAndPositionOfCell(start);\n      offset = datum.offset + datum.size;\n      var stop = start;\n\n      while (offset < maxOffset && stop < this._cellCount - 1) {\n        stop++;\n        offset += this.getSizeAndPositionOfCell(stop).size;\n      }\n\n      return {\n        start: start,\n        stop: stop\n      };\n    }\n    /**\n     * Clear all cached values for cells after the specified index.\n     * This method should be called for any cell that has changed its size.\n     * It will not immediately perform any calculations; they'll be performed the next time getSizeAndPositionOfCell() is called.\n     */\n\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._lastMeasuredIndex = Math.min(this._lastMeasuredIndex, index - 1);\n    }\n  }, {\n    key: \"_binarySearch\",\n    value: function _binarySearch(high, low, offset) {\n      while (low <= high) {\n        var middle = low + Math.floor((high - low) / 2);\n        var currentOffset = this.getSizeAndPositionOfCell(middle).offset;\n\n        if (currentOffset === offset) {\n          return middle;\n        } else if (currentOffset < offset) {\n          low = middle + 1;\n        } else if (currentOffset > offset) {\n          high = middle - 1;\n        }\n      }\n\n      if (low > 0) {\n        return low - 1;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_exponentialSearch\",\n    value: function _exponentialSearch(index, offset) {\n      var interval = 1;\n\n      while (index < this._cellCount && this.getSizeAndPositionOfCell(index).offset < offset) {\n        index += interval;\n        interval *= 2;\n      }\n\n      return this._binarySearch(Math.min(index, this._cellCount - 1), Math.floor(index / 2), offset);\n    }\n    /**\n     * Searches for the cell (index) nearest the specified offset.\n     *\n     * If no exact match is found the next lowest cell index will be returned.\n     * This allows partially visible cells (with offsets just before/above the fold) to be visible.\n     */\n\n  }, {\n    key: \"_findNearestCell\",\n    value: function _findNearestCell(offset) {\n      if (isNaN(offset)) {\n        throw Error(\"Invalid offset \".concat(offset, \" specified\"));\n      } // Our search algorithms find the nearest match at or below the specified offset.\n      // So make sure the offset is at least 0 or no match will be found.\n\n\n      offset = Math.max(0, offset);\n      var lastMeasuredCellSizeAndPosition = this.getSizeAndPositionOfLastMeasuredCell();\n      var lastMeasuredIndex = Math.max(0, this._lastMeasuredIndex);\n\n      if (lastMeasuredCellSizeAndPosition.offset >= offset) {\n        // If we've already measured cells within this range just use a binary search as it's faster.\n        return this._binarySearch(lastMeasuredIndex, 0, offset);\n      } else {\n        // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n        // The exponential search avoids pre-computing sizes for the full set of cells as a binary search would.\n        // The overall complexity for this approach is O(log n).\n        return this._exponentialSearch(lastMeasuredIndex, offset);\n      }\n    }\n  }]);\n\n  return CellSizeAndPositionManager;\n}();\n\nexport { CellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","var DEFAULT_MAX_ELEMENT_SIZE = 1500000;\nvar CHROME_MAX_ELEMENT_SIZE = 1.67771e7;\n\nvar isBrowser = function isBrowser() {\n  return typeof window !== 'undefined';\n};\n\nvar isChrome = function isChrome() {\n  return !!window.chrome;\n};\n\nexport var getMaxElementSize = function getMaxElementSize() {\n  if (isBrowser()) {\n    if (isChrome()) {\n      return CHROME_MAX_ELEMENT_SIZE;\n    }\n  }\n\n  return DEFAULT_MAX_ELEMENT_SIZE;\n};","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport CellSizeAndPositionManager from './CellSizeAndPositionManager';\nimport { getMaxElementSize } from './maxElementSize.js';\n\n/**\n * Extends CellSizeAndPositionManager and adds scaling behavior for lists that are too large to fit within a browser's native limits.\n */\nvar ScalingCellSizeAndPositionManager =\n/*#__PURE__*/\nfunction () {\n  function ScalingCellSizeAndPositionManager(_ref) {\n    var _ref$maxScrollSize = _ref.maxScrollSize,\n        maxScrollSize = _ref$maxScrollSize === void 0 ? getMaxElementSize() : _ref$maxScrollSize,\n        params = _objectWithoutProperties(_ref, [\"maxScrollSize\"]);\n\n    _classCallCheck(this, ScalingCellSizeAndPositionManager);\n\n    _defineProperty(this, \"_cellSizeAndPositionManager\", void 0);\n\n    _defineProperty(this, \"_maxScrollSize\", void 0);\n\n    // Favor composition over inheritance to simplify IE10 support\n    this._cellSizeAndPositionManager = new CellSizeAndPositionManager(params);\n    this._maxScrollSize = maxScrollSize;\n  }\n\n  _createClass(ScalingCellSizeAndPositionManager, [{\n    key: \"areOffsetsAdjusted\",\n    value: function areOffsetsAdjusted() {\n      return this._cellSizeAndPositionManager.getTotalSize() > this._maxScrollSize;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure(params) {\n      this._cellSizeAndPositionManager.configure(params);\n    }\n  }, {\n    key: \"getCellCount\",\n    value: function getCellCount() {\n      return this._cellSizeAndPositionManager.getCellCount();\n    }\n  }, {\n    key: \"getEstimatedCellSize\",\n    value: function getEstimatedCellSize() {\n      return this._cellSizeAndPositionManager.getEstimatedCellSize();\n    }\n  }, {\n    key: \"getLastMeasuredIndex\",\n    value: function getLastMeasuredIndex() {\n      return this._cellSizeAndPositionManager.getLastMeasuredIndex();\n    }\n    /**\n     * Number of pixels a cell at the given position (offset) should be shifted in order to fit within the scaled container.\n     * The offset passed to this function is scaled (safe) as well.\n     */\n\n  }, {\n    key: \"getOffsetAdjustment\",\n    value: function getOffsetAdjustment(_ref2) {\n      var containerSize = _ref2.containerSize,\n          offset = _ref2.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      var offsetPercentage = this._getOffsetPercentage({\n        containerSize: containerSize,\n        offset: offset,\n        totalSize: safeTotalSize\n      });\n\n      return Math.round(offsetPercentage * (safeTotalSize - totalSize));\n    }\n  }, {\n    key: \"getSizeAndPositionOfCell\",\n    value: function getSizeAndPositionOfCell(index) {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfCell(index);\n    }\n  }, {\n    key: \"getSizeAndPositionOfLastMeasuredCell\",\n    value: function getSizeAndPositionOfLastMeasuredCell() {\n      return this._cellSizeAndPositionManager.getSizeAndPositionOfLastMeasuredCell();\n    }\n    /** See CellSizeAndPositionManager#getTotalSize */\n\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return Math.min(this._maxScrollSize, this._cellSizeAndPositionManager.getTotalSize());\n    }\n    /** See CellSizeAndPositionManager#getUpdatedOffsetForIndex */\n\n  }, {\n    key: \"getUpdatedOffsetForIndex\",\n    value: function getUpdatedOffsetForIndex(_ref3) {\n      var _ref3$align = _ref3.align,\n          align = _ref3$align === void 0 ? 'auto' : _ref3$align,\n          containerSize = _ref3.containerSize,\n          currentOffset = _ref3.currentOffset,\n          targetIndex = _ref3.targetIndex;\n      currentOffset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: currentOffset\n      });\n\n      var offset = this._cellSizeAndPositionManager.getUpdatedOffsetForIndex({\n        align: align,\n        containerSize: containerSize,\n        currentOffset: currentOffset,\n        targetIndex: targetIndex\n      });\n\n      return this._offsetToSafeOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n    /** See CellSizeAndPositionManager#getVisibleCellRange */\n\n  }, {\n    key: \"getVisibleCellRange\",\n    value: function getVisibleCellRange(_ref4) {\n      var containerSize = _ref4.containerSize,\n          offset = _ref4.offset;\n      offset = this._safeOffsetToOffset({\n        containerSize: containerSize,\n        offset: offset\n      });\n      return this._cellSizeAndPositionManager.getVisibleCellRange({\n        containerSize: containerSize,\n        offset: offset\n      });\n    }\n  }, {\n    key: \"resetCell\",\n    value: function resetCell(index) {\n      this._cellSizeAndPositionManager.resetCell(index);\n    }\n  }, {\n    key: \"_getOffsetPercentage\",\n    value: function _getOffsetPercentage(_ref5) {\n      var containerSize = _ref5.containerSize,\n          offset = _ref5.offset,\n          totalSize = _ref5.totalSize;\n      return totalSize <= containerSize ? 0 : offset / (totalSize - containerSize);\n    }\n  }, {\n    key: \"_offsetToSafeOffset\",\n    value: function _offsetToSafeOffset(_ref6) {\n      var containerSize = _ref6.containerSize,\n          offset = _ref6.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: totalSize\n        });\n\n        return Math.round(offsetPercentage * (safeTotalSize - containerSize));\n      }\n    }\n  }, {\n    key: \"_safeOffsetToOffset\",\n    value: function _safeOffsetToOffset(_ref7) {\n      var containerSize = _ref7.containerSize,\n          offset = _ref7.offset;\n\n      var totalSize = this._cellSizeAndPositionManager.getTotalSize();\n\n      var safeTotalSize = this.getTotalSize();\n\n      if (totalSize === safeTotalSize) {\n        return offset;\n      } else {\n        var offsetPercentage = this._getOffsetPercentage({\n          containerSize: containerSize,\n          offset: offset,\n          totalSize: safeTotalSize\n        });\n\n        return Math.round(offsetPercentage * (totalSize - containerSize));\n      }\n    }\n  }]);\n\n  return ScalingCellSizeAndPositionManager;\n}();\n\nexport { ScalingCellSizeAndPositionManager as default };\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"../types\";\nimport { bpfrpt_proptype_VisibleCellRange } from \"../types\";","/**\n * Helper utility that updates the specified callback whenever any of the specified indices have changed.\n */\nexport default function createCallbackMemoizer() {\n  var requireAllKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  var cachedIndices = {};\n  return function (_ref) {\n    var callback = _ref.callback,\n        indices = _ref.indices;\n    var keys = Object.keys(indices);\n    var allInitialized = !requireAllKeys || keys.every(function (key) {\n      var value = indices[key];\n      return Array.isArray(value) ? value.length > 0 : value >= 0;\n    });\n    var indexChanged = keys.length !== Object.keys(cachedIndices).length || keys.some(function (key) {\n      var cachedValue = cachedIndices[key];\n      var value = indices[key];\n      return Array.isArray(value) ? cachedValue.join(',') !== value.join(',') : cachedValue !== value;\n    });\n    cachedIndices = indices;\n\n    if (allInitialized && indexChanged) {\n      callback(indices);\n    }\n  };\n}","import ScalingCellSizeAndPositionManager from './ScalingCellSizeAndPositionManager.js';\n/**\n * Helper function that determines when to update scroll offsets to ensure that a scroll-to-index remains visible.\n * This function also ensures that the scroll ofset isn't past the last column/row of cells.\n */\n\nexport default function updateScrollIndexHelper(_ref) {\n  var cellSize = _ref.cellSize,\n      cellSizeAndPositionManager = _ref.cellSizeAndPositionManager,\n      previousCellsCount = _ref.previousCellsCount,\n      previousCellSize = _ref.previousCellSize,\n      previousScrollToAlignment = _ref.previousScrollToAlignment,\n      previousScrollToIndex = _ref.previousScrollToIndex,\n      previousSize = _ref.previousSize,\n      scrollOffset = _ref.scrollOffset,\n      scrollToAlignment = _ref.scrollToAlignment,\n      scrollToIndex = _ref.scrollToIndex,\n      size = _ref.size,\n      sizeJustIncreasedFromZero = _ref.sizeJustIncreasedFromZero,\n      updateScrollIndexCallback = _ref.updateScrollIndexCallback;\n  var cellCount = cellSizeAndPositionManager.getCellCount();\n  var hasScrollToIndex = scrollToIndex >= 0 && scrollToIndex < cellCount;\n  var sizeHasChanged = size !== previousSize || sizeJustIncreasedFromZero || !previousCellSize || typeof cellSize === 'number' && cellSize !== previousCellSize; // If we have a new scroll target OR if height/row-height has changed,\n  // We should ensure that the scroll target is visible.\n\n  if (hasScrollToIndex && (sizeHasChanged || scrollToAlignment !== previousScrollToAlignment || scrollToIndex !== previousScrollToIndex)) {\n    updateScrollIndexCallback(scrollToIndex); // If we don't have a selected item but list size or number of children have decreased,\n    // Make sure we aren't scrolled too far past the current content.\n  } else if (!hasScrollToIndex && cellCount > 0 && (size < previousSize || cellCount < previousCellsCount)) {\n    // We need to ensure that the current scroll offset is still within the collection's range.\n    // To do this, we don't need to measure everything; CellMeasurer would perform poorly.\n    // Just check to make sure we're still okay.\n    // Only adjust the scroll position if we've scrolled below the last set of rows.\n    if (scrollOffset > cellSizeAndPositionManager.getTotalSize() - size) {\n      updateScrollIndexCallback(cellCount - 1);\n    }\n  }\n}\nimport { bpfrpt_proptype_Alignment } from \"../types\";\nimport { bpfrpt_proptype_CellSize } from \"../types\";","export default !!(typeof window !== 'undefined' && window.document && window.document.createElement);","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","// Properly handle server-side rendering.\nvar win;\n\nif (typeof window !== 'undefined') {\n  win = window;\n} else if (typeof self !== 'undefined') {\n  win = self;\n} else {\n  win = {};\n} // requestAnimationFrame() shim by Paul Irish\n// http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\nvar request = win.requestAnimationFrame || win.webkitRequestAnimationFrame || win.mozRequestAnimationFrame || win.oRequestAnimationFrame || win.msRequestAnimationFrame || function (callback) {\n  return win.setTimeout(callback, 1000 / 60);\n};\n\nvar cancel = win.cancelAnimationFrame || win.webkitCancelAnimationFrame || win.mozCancelAnimationFrame || win.oCancelAnimationFrame || win.msCancelAnimationFrame || function (id) {\n  win.clearTimeout(id);\n};\n\nexport var raf = request;\nexport var caf = cancel;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport calculateSizeAndPositionDataAndUpdateScrollOffset from './utils/calculateSizeAndPositionDataAndUpdateScrollOffset';\nimport ScalingCellSizeAndPositionManager from './utils/ScalingCellSizeAndPositionManager';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport defaultOverscanIndicesGetter, { SCROLL_DIRECTION_BACKWARD, SCROLL_DIRECTION_FORWARD } from './defaultOverscanIndicesGetter';\nimport updateScrollIndexHelper from './utils/updateScrollIndexHelper';\nimport defaultCellRangeRenderer from './defaultCellRangeRenderer';\nimport scrollbarSize from 'dom-helpers/scrollbarSize';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n\nvar renderNull = function renderNull() {\n  return null;\n};\n\n/**\n * Renders tabular data with virtualization along the vertical and horizontal axes.\n * Row heights and column widths must be known ahead of time and specified as properties.\n */\nvar Grid = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Grid, _React$PureComponent);\n\n  // Invokes onSectionRendered callback only when start/stop row or column indices change\n  function Grid(props) {\n    var _this;\n\n    _classCallCheck(this, Grid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Grid).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGridRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollLeftFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_recomputeScrollTopFlag\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_horizontalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_verticalScrollBarSize\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollbarPresenceChanged\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_scrollingContainer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_childrenToDisplay\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedColumnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_renderedRowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollTop\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_initialScrollLeft\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_disablePointerEventsTimeoutId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_styleCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellCache\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceScrollEndedCallback\", function () {\n      _this._disablePointerEventsTimeoutId = null; // isScrolling is used to determine if we reset styleCache\n\n      _this.setState({\n        isScrolling: false,\n        needToResetStyleCache: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnGridRenderedHelper\", function () {\n      var onSectionRendered = _this.props.onSectionRendered;\n\n      _this._onGridRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          columnOverscanStartIndex: _this._columnStartIndex,\n          columnOverscanStopIndex: _this._columnStopIndex,\n          columnStartIndex: _this._renderedColumnStartIndex,\n          columnStopIndex: _this._renderedColumnStopIndex,\n          rowOverscanStartIndex: _this._rowStartIndex,\n          rowOverscanStopIndex: _this._rowStopIndex,\n          rowStartIndex: _this._renderedRowStartIndex,\n          rowStopIndex: _this._renderedRowStopIndex\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target === _this._scrollingContainer) {\n        _this.handleScrollEvent(event.target);\n      }\n    });\n\n    var columnSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.columnCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.columnWidth)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedColumnSize(props)\n    });\n    var rowSizeAndPositionManager = new ScalingCellSizeAndPositionManager({\n      cellCount: props.rowCount,\n      cellSizeGetter: function cellSizeGetter(params) {\n        return Grid._wrapSizeGetter(props.rowHeight)(params);\n      },\n      estimatedCellSize: Grid._getEstimatedRowSize(props)\n    });\n    _this.state = {\n      instanceProps: {\n        columnSizeAndPositionManager: columnSizeAndPositionManager,\n        rowSizeAndPositionManager: rowSizeAndPositionManager,\n        prevColumnWidth: props.columnWidth,\n        prevRowHeight: props.rowHeight,\n        prevColumnCount: props.columnCount,\n        prevRowCount: props.rowCount,\n        prevIsScrolling: props.isScrolling === true,\n        prevScrollToColumn: props.scrollToColumn,\n        prevScrollToRow: props.scrollToRow,\n        scrollbarSize: 0,\n        scrollbarSizeMeasured: false\n      },\n      isScrolling: false,\n      scrollDirectionHorizontal: SCROLL_DIRECTION_FORWARD,\n      scrollDirectionVertical: SCROLL_DIRECTION_FORWARD,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollPositionChangeReason: null,\n      needToResetStyleCache: false\n    };\n\n    if (props.scrollToRow > 0) {\n      _this._initialScrollTop = _this._getCalculatedScrollTop(props, _this.state);\n    }\n\n    if (props.scrollToColumn > 0) {\n      _this._initialScrollLeft = _this._getCalculatedScrollLeft(props, _this.state);\n    }\n\n    return _this;\n  }\n  /**\n   * Gets offsets for a given cell and alignment.\n   */\n\n\n  _createClass(Grid, [{\n    key: \"getOffsetForCell\",\n    value: function getOffsetForCell() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref$alignment = _ref.alignment,\n          alignment = _ref$alignment === void 0 ? this.props.scrollToAlignment : _ref$alignment,\n          _ref$columnIndex = _ref.columnIndex,\n          columnIndex = _ref$columnIndex === void 0 ? this.props.scrollToColumn : _ref$columnIndex,\n          _ref$rowIndex = _ref.rowIndex,\n          rowIndex = _ref$rowIndex === void 0 ? this.props.scrollToRow : _ref$rowIndex;\n\n      var offsetProps = _objectSpread({}, this.props, {\n        scrollToAlignment: alignment,\n        scrollToColumn: columnIndex,\n        scrollToRow: rowIndex\n      });\n\n      return {\n        scrollLeft: this._getCalculatedScrollLeft(offsetProps),\n        scrollTop: this._getCalculatedScrollTop(offsetProps)\n      };\n    }\n    /**\n     * Gets estimated total rows' height.\n     */\n\n  }, {\n    key: \"getTotalRowsHeight\",\n    value: function getTotalRowsHeight() {\n      return this.state.instanceProps.rowSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * Gets estimated total columns' width.\n     */\n\n  }, {\n    key: \"getTotalColumnsWidth\",\n    value: function getTotalColumnsWidth() {\n      return this.state.instanceProps.columnSizeAndPositionManager.getTotalSize();\n    }\n    /**\n     * This method handles a scroll event originating from an external scroll control.\n     * It's an advanced method and should probably not be used unless you're implementing a custom scroll-bar solution.\n     */\n\n  }, {\n    key: \"handleScrollEvent\",\n    value: function handleScrollEvent(_ref2) {\n      var _ref2$scrollLeft = _ref2.scrollLeft,\n          scrollLeftParam = _ref2$scrollLeft === void 0 ? 0 : _ref2$scrollLeft,\n          _ref2$scrollTop = _ref2.scrollTop,\n          scrollTopParam = _ref2$scrollTop === void 0 ? 0 : _ref2$scrollTop;\n\n      // On iOS, we can arrive at negative offsets by swiping past the start.\n      // To prevent flicker here, we make playing in the negative offset zone cause nothing to happen.\n      if (scrollTopParam < 0) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      this._debounceScrollEnded();\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          autoWidth = _this$props.autoWidth,\n          height = _this$props.height,\n          width = _this$props.width;\n      var instanceProps = this.state.instanceProps; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollbarSize = instanceProps.scrollbarSize;\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var scrollLeft = Math.min(Math.max(0, totalColumnsWidth - width + scrollbarSize), scrollLeftParam);\n      var scrollTop = Math.min(Math.max(0, totalRowsHeight - height + scrollbarSize), scrollTopParam); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (this.state.scrollLeft !== scrollLeft || this.state.scrollTop !== scrollTop) {\n        // Track scrolling direction so we can more efficiently overscan rows to reduce empty space around the edges while scrolling.\n        // Don't change direction for an axis unless scroll offset has changed.\n        var scrollDirectionHorizontal = scrollLeft !== this.state.scrollLeft ? scrollLeft > this.state.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionHorizontal;\n        var scrollDirectionVertical = scrollTop !== this.state.scrollTop ? scrollTop > this.state.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD : this.state.scrollDirectionVertical;\n        var newState = {\n          isScrolling: true,\n          scrollDirectionHorizontal: scrollDirectionHorizontal,\n          scrollDirectionVertical: scrollDirectionVertical,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.OBSERVED\n        };\n\n        if (!autoHeight) {\n          newState.scrollTop = scrollTop;\n        }\n\n        if (!autoWidth) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        newState.needToResetStyleCache = false;\n        this.setState(newState);\n      }\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalColumnsWidth: totalColumnsWidth,\n        totalRowsHeight: totalRowsHeight\n      });\n    }\n    /**\n     * Invalidate Grid size and recompute visible cells.\n     * This is a deferred wrapper for recomputeGridSize().\n     * It sets a flag to be evaluated on cDM/cDU to avoid unnecessary renders.\n     * This method is intended for advanced use-cases like CellMeasurer.\n     */\n    // @TODO (bvaughn) Add automated test coverage for this.\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rowIndex = _ref3.rowIndex;\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /**\n     * Pre-measure all columns and rows in a Grid.\n     * Typically cells are only measured as needed and estimated sizes are used for cells that have not yet been measured.\n     * This method ensures that the next call to getTotalSize() returns an exact size (as opposed to just an estimated one).\n     */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      var _this$props2 = this.props,\n          columnCount = _this$props2.columnCount,\n          rowCount = _this$props2.rowCount;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.getSizeAndPositionOfCell(columnCount - 1);\n      instanceProps.rowSizeAndPositionManager.getSizeAndPositionOfCell(rowCount - 1);\n    }\n    /**\n     * Forced recompute of row heights and column widths.\n     * This function should be called if dynamic column or row sizes have changed but nothing else has.\n     * Since Grid only receives :columnCount and :rowCount it has no way of detecting when the underlying data changes.\n     */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref4$columnIndex = _ref4.columnIndex,\n          columnIndex = _ref4$columnIndex === void 0 ? 0 : _ref4$columnIndex,\n          _ref4$rowIndex = _ref4.rowIndex,\n          rowIndex = _ref4$rowIndex === void 0 ? 0 : _ref4$rowIndex;\n\n      var _this$props3 = this.props,\n          scrollToColumn = _this$props3.scrollToColumn,\n          scrollToRow = _this$props3.scrollToRow;\n      var instanceProps = this.state.instanceProps;\n      instanceProps.columnSizeAndPositionManager.resetCell(columnIndex);\n      instanceProps.rowSizeAndPositionManager.resetCell(rowIndex); // Cell sizes may be determined by a function property.\n      // In this case the cDU handler can't know if they changed.\n      // Store this flag to let the next cDU pass know it needs to recompute the scroll offset.\n\n      this._recomputeScrollLeftFlag = scrollToColumn >= 0 && (this.state.scrollDirectionHorizontal === SCROLL_DIRECTION_FORWARD ? columnIndex <= scrollToColumn : columnIndex >= scrollToColumn);\n      this._recomputeScrollTopFlag = scrollToRow >= 0 && (this.state.scrollDirectionVertical === SCROLL_DIRECTION_FORWARD ? rowIndex <= scrollToRow : rowIndex >= scrollToRow); // Clear cell cache in case we are scrolling;\n      // Invalid row heights likely mean invalid cached content as well.\n\n      this._styleCache = {};\n      this._cellCache = {};\n      this.forceUpdate();\n    }\n    /**\n     * Ensure column and row are visible.\n     */\n\n  }, {\n    key: \"scrollToCell\",\n    value: function scrollToCell(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n      var columnCount = this.props.columnCount;\n      var props = this.props; // Don't adjust scroll offset for single-column grids (eg List, Table).\n      // This can cause a funky scroll offset because of the vertical scrollbar width.\n\n      if (columnCount > 1 && columnIndex !== undefined) {\n        this._updateScrollLeftForScrollToColumn(_objectSpread({}, props, {\n          scrollToColumn: columnIndex\n        }));\n      }\n\n      if (rowIndex !== undefined) {\n        this._updateScrollTopForScrollToRow(_objectSpread({}, props, {\n          scrollToRow: rowIndex\n        }));\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          getScrollbarSize = _this$props4.getScrollbarSize,\n          height = _this$props4.height,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToColumn = _this$props4.scrollToColumn,\n          scrollTop = _this$props4.scrollTop,\n          scrollToRow = _this$props4.scrollToRow,\n          width = _this$props4.width;\n      var instanceProps = this.state.instanceProps; // Reset initial offsets to be ignored in browser\n\n      this._initialScrollTop = 0;\n      this._initialScrollLeft = 0; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n\n      if (!instanceProps.scrollbarSizeMeasured) {\n        this.setState(function (prevState) {\n          var stateUpdate = _objectSpread({}, prevState, {\n            needToResetStyleCache: false\n          });\n\n          stateUpdate.instanceProps.scrollbarSize = getScrollbarSize();\n          stateUpdate.instanceProps.scrollbarSizeMeasured = true;\n          return stateUpdate;\n        });\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 || typeof scrollTop === 'number' && scrollTop >= 0) {\n        var stateUpdate = Grid._getScrollToPositionStateUpdate({\n          prevState: this.state,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        if (stateUpdate) {\n          stateUpdate.needToResetStyleCache = false;\n          this.setState(stateUpdate);\n        }\n      } // refs don't work in `react-test-renderer`\n\n\n      if (this._scrollingContainer) {\n        // setting the ref's scrollLeft and scrollTop.\n        // Somehow in MultiGrid the main grid doesn't trigger a update on mount.\n        if (this._scrollingContainer.scrollLeft !== this.state.scrollLeft) {\n          this._scrollingContainer.scrollLeft = this.state.scrollLeft;\n        }\n\n        if (this._scrollingContainer.scrollTop !== this.state.scrollTop) {\n          this._scrollingContainer.scrollTop = this.state.scrollTop;\n        }\n      } // Don't update scroll offset if the size is 0; we don't render any cells in this case.\n      // Setting a state may cause us to later thing we've updated the offce when we haven't.\n\n\n      var sizeIsBiggerThanZero = height > 0 && width > 0;\n\n      if (scrollToColumn >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollLeftForScrollToColumn();\n      }\n\n      if (scrollToRow >= 0 && sizeIsBiggerThanZero) {\n        this._updateScrollTopForScrollToRow();\n      } // Update onRowsRendered callback\n\n\n      this._invokeOnGridRenderedHelper(); // Initialize onScroll callback\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalColumnsWidth: instanceProps.columnSizeAndPositionManager.getTotalSize(),\n        totalRowsHeight: instanceProps.rowSizeAndPositionManager.getTotalSize()\n      });\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) New scroll-to-cell props have been set\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          autoHeight = _this$props5.autoHeight,\n          autoWidth = _this$props5.autoWidth,\n          columnCount = _this$props5.columnCount,\n          height = _this$props5.height,\n          rowCount = _this$props5.rowCount,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToColumn = _this$props5.scrollToColumn,\n          scrollToRow = _this$props5.scrollToRow,\n          width = _this$props5.width;\n      var _this$state = this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollPositionChangeReason = _this$state.scrollPositionChangeReason,\n          scrollTop = _this$state.scrollTop,\n          instanceProps = _this$state.instanceProps; // If cell sizes have been invalidated (eg we are using CellMeasurer) then reset cached positions.\n      // We must do this at the start of the method as we may calculate and update scroll position below.\n\n      this._handleInvalidatedGridSize(); // Handle edge case where column or row count has only just increased over 0.\n      // In this case we may have to restore a previously-specified scroll offset.\n      // For more info see bvaughn/react-virtualized/issues/218\n\n\n      var columnOrRowCountJustIncreasedFromZero = columnCount > 0 && prevProps.columnCount === 0 || rowCount > 0 && prevProps.rowCount === 0; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        // @TRICKY :autoHeight and :autoWidth properties instructs Grid to leave :scrollTop and :scrollLeft management to an external HOC (eg WindowScroller).\n        // In this case we should avoid checking scrollingContainer.scrollTop and scrollingContainer.scrollLeft since it forces layout/flow.\n        if (!autoWidth && scrollLeft >= 0 && (scrollLeft !== this._scrollingContainer.scrollLeft || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (!autoHeight && scrollTop >= 0 && (scrollTop !== this._scrollingContainer.scrollTop || columnOrRowCountJustIncreasedFromZero)) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Special case where the previous size was 0:\n      // In this case we don't show any windowed cells at all.\n      // So we should always recalculate offset afterwards.\n\n\n      var sizeJustIncreasedFromZero = (prevProps.width === 0 || prevProps.height === 0) && height > 0 && width > 0; // Update scroll offsets if the current :scrollToColumn or :scrollToRow values requires it\n      // @TODO Do we also need this check or can the one in componentWillUpdate() suffice?\n\n      if (this._recomputeScrollLeftFlag) {\n        this._recomputeScrollLeftFlag = false;\n\n        this._updateScrollLeftForScrollToColumn(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          previousCellsCount: prevProps.columnCount,\n          previousCellSize: prevProps.columnWidth,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToColumn,\n          previousSize: prevProps.width,\n          scrollOffset: scrollLeft,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToColumn,\n          size: width,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollLeftForScrollToColumn(_this2.props);\n          }\n        });\n      }\n\n      if (this._recomputeScrollTopFlag) {\n        this._recomputeScrollTopFlag = false;\n\n        this._updateScrollTopForScrollToRow(this.props);\n      } else {\n        updateScrollIndexHelper({\n          cellSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          previousCellsCount: prevProps.rowCount,\n          previousCellSize: prevProps.rowHeight,\n          previousScrollToAlignment: prevProps.scrollToAlignment,\n          previousScrollToIndex: prevProps.scrollToRow,\n          previousSize: prevProps.height,\n          scrollOffset: scrollTop,\n          scrollToAlignment: scrollToAlignment,\n          scrollToIndex: scrollToRow,\n          size: height,\n          sizeJustIncreasedFromZero: sizeJustIncreasedFromZero,\n          updateScrollIndexCallback: function updateScrollIndexCallback() {\n            return _this2._updateScrollTopForScrollToRow(_this2.props);\n          }\n        });\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnGridRenderedHelper(); // Changes to :scrollLeft or :scrollTop should also notify :onScroll listeners\n\n\n      if (scrollLeft !== prevState.scrollLeft || scrollTop !== prevState.scrollTop) {\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n\n        this._invokeOnScrollMemoizer({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          totalColumnsWidth: totalColumnsWidth,\n          totalRowsHeight: totalRowsHeight\n        });\n      }\n\n      this._maybeCallOnScrollbarPresenceChange();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n    /**\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoContainerWidth = _this$props6.autoContainerWidth,\n          autoHeight = _this$props6.autoHeight,\n          autoWidth = _this$props6.autoWidth,\n          className = _this$props6.className,\n          containerProps = _this$props6.containerProps,\n          containerRole = _this$props6.containerRole,\n          containerStyle = _this$props6.containerStyle,\n          height = _this$props6.height,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          role = _this$props6.role,\n          style = _this$props6.style,\n          tabIndex = _this$props6.tabIndex,\n          width = _this$props6.width;\n      var _this$state2 = this.state,\n          instanceProps = _this$state2.instanceProps,\n          needToResetStyleCache = _this$state2.needToResetStyleCache;\n\n      var isScrolling = this._isScrolling();\n\n      var gridStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        width: autoWidth ? 'auto' : width,\n        WebkitOverflowScrolling: 'touch',\n        willChange: 'transform'\n      };\n\n      if (needToResetStyleCache) {\n        this._styleCache = {};\n      } // calculate _styleCache here\n      // if state.isScrolling (not from _isScrolling) then reset\n\n\n      if (!this.state.isScrolling) {\n        this._resetStyleCache();\n      } // calculate children to render here\n\n\n      this._calculateChildrenToRender(this.props, this.state);\n\n      var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n      var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize(); // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n      var horizontalScrollBarSize = totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n\n      if (horizontalScrollBarSize !== this._horizontalScrollBarSize || verticalScrollBarSize !== this._verticalScrollBarSize) {\n        this._horizontalScrollBarSize = horizontalScrollBarSize;\n        this._verticalScrollBarSize = verticalScrollBarSize;\n        this._scrollbarPresenceChanged = true;\n      } // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n\n      gridStyle.overflowX = totalColumnsWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      gridStyle.overflowY = totalRowsHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      var childrenToDisplay = this._childrenToDisplay;\n      var showNoContentRenderer = childrenToDisplay.length === 0 && height > 0 && width > 0;\n      return React.createElement(\"div\", _extends({\n        ref: this._setScrollingContainerRef\n      }, containerProps, {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-readonly\": this.props['aria-readonly'],\n        className: clsx('ReactVirtualized__Grid', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({}, gridStyle, {}, style),\n        tabIndex: tabIndex\n      }), childrenToDisplay.length > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Grid__innerScrollContainer\",\n        role: containerRole,\n        style: _objectSpread({\n          width: autoContainerWidth ? 'auto' : totalColumnsWidth,\n          height: totalRowsHeight,\n          maxWidth: totalColumnsWidth,\n          maxHeight: totalRowsHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }, containerStyle)\n      }, childrenToDisplay), showNoContentRenderer && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n  }, {\n    key: \"_calculateChildrenToRender\",\n    value: function _calculateChildrenToRender() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      var cellRenderer = props.cellRenderer,\n          cellRangeRenderer = props.cellRangeRenderer,\n          columnCount = props.columnCount,\n          deferredMeasurementCache = props.deferredMeasurementCache,\n          height = props.height,\n          overscanColumnCount = props.overscanColumnCount,\n          overscanIndicesGetter = props.overscanIndicesGetter,\n          overscanRowCount = props.overscanRowCount,\n          rowCount = props.rowCount,\n          width = props.width,\n          isScrollingOptOut = props.isScrollingOptOut;\n      var scrollDirectionHorizontal = state.scrollDirectionHorizontal,\n          scrollDirectionVertical = state.scrollDirectionVertical,\n          instanceProps = state.instanceProps;\n      var scrollTop = this._initialScrollTop > 0 ? this._initialScrollTop : state.scrollTop;\n      var scrollLeft = this._initialScrollLeft > 0 ? this._initialScrollLeft : state.scrollLeft;\n\n      var isScrolling = this._isScrolling(props, state);\n\n      this._childrenToDisplay = []; // Render only enough columns and rows to cover the visible area of the grid.\n\n      if (height > 0 && width > 0) {\n        var visibleColumnIndices = instanceProps.columnSizeAndPositionManager.getVisibleCellRange({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var visibleRowIndices = instanceProps.rowSizeAndPositionManager.getVisibleCellRange({\n          containerSize: height,\n          offset: scrollTop\n        });\n        var horizontalOffsetAdjustment = instanceProps.columnSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: width,\n          offset: scrollLeft\n        });\n        var verticalOffsetAdjustment = instanceProps.rowSizeAndPositionManager.getOffsetAdjustment({\n          containerSize: height,\n          offset: scrollTop\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        this._renderedColumnStartIndex = visibleColumnIndices.start;\n        this._renderedColumnStopIndex = visibleColumnIndices.stop;\n        this._renderedRowStartIndex = visibleRowIndices.start;\n        this._renderedRowStopIndex = visibleRowIndices.stop;\n        var overscanColumnIndices = overscanIndicesGetter({\n          direction: 'horizontal',\n          cellCount: columnCount,\n          overscanCellsCount: overscanColumnCount,\n          scrollDirection: scrollDirectionHorizontal,\n          startIndex: typeof visibleColumnIndices.start === 'number' ? visibleColumnIndices.start : 0,\n          stopIndex: typeof visibleColumnIndices.stop === 'number' ? visibleColumnIndices.stop : -1\n        });\n        var overscanRowIndices = overscanIndicesGetter({\n          direction: 'vertical',\n          cellCount: rowCount,\n          overscanCellsCount: overscanRowCount,\n          scrollDirection: scrollDirectionVertical,\n          startIndex: typeof visibleRowIndices.start === 'number' ? visibleRowIndices.start : 0,\n          stopIndex: typeof visibleRowIndices.stop === 'number' ? visibleRowIndices.stop : -1\n        }); // Store for _invokeOnGridRenderedHelper()\n\n        var columnStartIndex = overscanColumnIndices.overscanStartIndex;\n        var columnStopIndex = overscanColumnIndices.overscanStopIndex;\n        var rowStartIndex = overscanRowIndices.overscanStartIndex;\n        var rowStopIndex = overscanRowIndices.overscanStopIndex; // Advanced use-cases (eg CellMeasurer) require batched measurements to determine accurate sizes.\n\n        if (deferredMeasurementCache) {\n          // If rows have a dynamic height, scan the rows we are about to render.\n          // If any have not yet been measured, then we need to render all columns initially,\n          // Because the height of the row is equal to the tallest cell within that row,\n          // (And so we can't know the height without measuring all column-cells first).\n          if (!deferredMeasurementCache.hasFixedHeight()) {\n            for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n              if (!deferredMeasurementCache.has(rowIndex, 0)) {\n                columnStartIndex = 0;\n                columnStopIndex = columnCount - 1;\n                break;\n              }\n            }\n          } // If columns have a dynamic width, scan the columns we are about to render.\n          // If any have not yet been measured, then we need to render all rows initially,\n          // Because the width of the column is equal to the widest cell within that column,\n          // (And so we can't know the width without measuring all row-cells first).\n\n\n          if (!deferredMeasurementCache.hasFixedWidth()) {\n            for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n              if (!deferredMeasurementCache.has(0, columnIndex)) {\n                rowStartIndex = 0;\n                rowStopIndex = rowCount - 1;\n                break;\n              }\n            }\n          }\n        }\n\n        this._childrenToDisplay = cellRangeRenderer({\n          cellCache: this._cellCache,\n          cellRenderer: cellRenderer,\n          columnSizeAndPositionManager: instanceProps.columnSizeAndPositionManager,\n          columnStartIndex: columnStartIndex,\n          columnStopIndex: columnStopIndex,\n          deferredMeasurementCache: deferredMeasurementCache,\n          horizontalOffsetAdjustment: horizontalOffsetAdjustment,\n          isScrolling: isScrolling,\n          isScrollingOptOut: isScrollingOptOut,\n          parent: this,\n          rowSizeAndPositionManager: instanceProps.rowSizeAndPositionManager,\n          rowStartIndex: rowStartIndex,\n          rowStopIndex: rowStopIndex,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          styleCache: this._styleCache,\n          verticalOffsetAdjustment: verticalOffsetAdjustment,\n          visibleColumnIndices: visibleColumnIndices,\n          visibleRowIndices: visibleRowIndices\n        }); // update the indices\n\n        this._columnStartIndex = columnStartIndex;\n        this._columnStopIndex = columnStopIndex;\n        this._rowStartIndex = rowStartIndex;\n        this._rowStopIndex = rowStopIndex;\n      }\n    }\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Grid.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_debounceScrollEnded\",\n    value: function _debounceScrollEnded() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._disablePointerEventsTimeoutId) {\n        cancelAnimationTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = requestAnimationTimeout(this._debounceScrollEndedCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n\n    /**\n     * Check for batched CellMeasurer size invalidations.\n     * This will occur the first time one or more previously unmeasured cells are rendered.\n     */\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number' && typeof this._deferredInvalidateRowIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n      }\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref6) {\n      var _this3 = this;\n\n      var scrollLeft = _ref6.scrollLeft,\n          scrollTop = _ref6.scrollTop,\n          totalColumnsWidth = _ref6.totalColumnsWidth,\n          totalRowsHeight = _ref6.totalRowsHeight;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref7) {\n          var scrollLeft = _ref7.scrollLeft,\n              scrollTop = _ref7.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalRowsHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalColumnsWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_isScrolling\",\n    value: function _isScrolling() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      // If isScrolling is defined in props, use it to override the value in state\n      // This is a performance optimization for WindowScroller + Grid\n      return Object.hasOwnProperty.call(props, 'isScrolling') ? Boolean(props.isScrolling) : Boolean(state.isScrolling);\n    }\n  }, {\n    key: \"_maybeCallOnScrollbarPresenceChange\",\n    value: function _maybeCallOnScrollbarPresenceChange() {\n      if (this._scrollbarPresenceChanged) {\n        var onScrollbarPresenceChange = this.props.onScrollbarPresenceChange;\n        this._scrollbarPresenceChanged = false;\n        onScrollbarPresenceChange({\n          horizontal: this._horizontalScrollBarSize > 0,\n          size: this.state.instanceProps.scrollbarSize,\n          vertical: this._verticalScrollBarSize > 0\n        });\n      }\n    }\n  }, {\n    key: \"scrollToPosition\",\n\n    /**\n     * Scroll to the specified offset(s).\n     * Useful for animating position changes.\n     */\n    value: function scrollToPosition(_ref8) {\n      var scrollLeft = _ref8.scrollLeft,\n          scrollTop = _ref8.scrollTop;\n\n      var stateUpdate = Grid._getScrollToPositionStateUpdate({\n        prevState: this.state,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollLeft(props, state);\n    }\n  }, {\n    key: \"_updateScrollLeftForScrollToColumn\",\n    value: function _updateScrollLeftForScrollToColumn() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollLeftForScrollToColumnStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n      return Grid._getCalculatedScrollTop(props, state);\n    }\n  }, {\n    key: \"_resetStyleCache\",\n    value: function _resetStyleCache() {\n      var styleCache = this._styleCache;\n      var cellCache = this._cellCache;\n      var isScrollingOptOut = this.props.isScrollingOptOut; // Reset cell and style caches once scrolling stops.\n      // This makes Grid simpler to use (since cells commonly change).\n      // And it keeps the caches from growing too large.\n      // Performance is most sensitive when a user is scrolling.\n      // Don't clear visible cells from cellCache if isScrollingOptOut is specified.\n      // This keeps the cellCache to a resonable size.\n\n      this._cellCache = {};\n      this._styleCache = {}; // Copy over the visible cell styles so avoid unnecessary re-render.\n\n      for (var rowIndex = this._rowStartIndex; rowIndex <= this._rowStopIndex; rowIndex++) {\n        for (var columnIndex = this._columnStartIndex; columnIndex <= this._columnStopIndex; columnIndex++) {\n          var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n          this._styleCache[key] = styleCache[key];\n\n          if (isScrollingOptOut) {\n            this._cellCache[key] = cellCache[key];\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_updateScrollTopForScrollToRow\",\n    value: function _updateScrollTopForScrollToRow() {\n      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state;\n\n      var stateUpdate = Grid._getScrollTopForScrollToRowStateUpdate(props, state);\n\n      if (stateUpdate) {\n        stateUpdate.needToResetStyleCache = false;\n        this.setState(stateUpdate);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var newState = {};\n\n      if (nextProps.columnCount === 0 && prevState.scrollLeft !== 0 || nextProps.rowCount === 0 && prevState.scrollTop !== 0) {\n        newState.scrollLeft = 0;\n        newState.scrollTop = 0; // only use scroll{Left,Top} from props if scrollTo{Column,Row} isn't specified\n        // scrollTo{Column,Row} should override scroll{Left,Top}\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft && nextProps.scrollToColumn < 0 || nextProps.scrollTop !== prevState.scrollTop && nextProps.scrollToRow < 0) {\n        Object.assign(newState, Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: nextProps.scrollLeft,\n          scrollTop: nextProps.scrollTop\n        }));\n      }\n\n      var instanceProps = prevState.instanceProps; // Initially we should not clearStyleCache\n\n      newState.needToResetStyleCache = false;\n\n      if (nextProps.columnWidth !== instanceProps.prevColumnWidth || nextProps.rowHeight !== instanceProps.prevRowHeight) {\n        // Reset cache. set it to {} in render\n        newState.needToResetStyleCache = true;\n      }\n\n      instanceProps.columnSizeAndPositionManager.configure({\n        cellCount: nextProps.columnCount,\n        estimatedCellSize: Grid._getEstimatedColumnSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.columnWidth)\n      });\n      instanceProps.rowSizeAndPositionManager.configure({\n        cellCount: nextProps.rowCount,\n        estimatedCellSize: Grid._getEstimatedRowSize(nextProps),\n        cellSizeGetter: Grid._wrapSizeGetter(nextProps.rowHeight)\n      });\n\n      if (instanceProps.prevColumnCount === 0 || instanceProps.prevRowCount === 0) {\n        instanceProps.prevColumnCount = 0;\n        instanceProps.prevRowCount = 0;\n      } // If scrolling is controlled outside this component, clear cache when scrolling stops\n\n\n      if (nextProps.autoHeight && nextProps.isScrolling === false && instanceProps.prevIsScrolling === true) {\n        Object.assign(newState, {\n          isScrolling: false\n        });\n      }\n\n      var maybeStateA;\n      var maybeStateB;\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevColumnCount,\n        cellSize: typeof instanceProps.prevColumnWidth === 'number' ? instanceProps.prevColumnWidth : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.columnSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.columnCount,\n        nextCellSize: typeof nextProps.columnWidth === 'number' ? nextProps.columnWidth : null,\n        nextScrollToIndex: nextProps.scrollToColumn,\n        scrollToIndex: instanceProps.prevScrollToColumn,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateA = Grid._getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState);\n        }\n      });\n      calculateSizeAndPositionDataAndUpdateScrollOffset({\n        cellCount: instanceProps.prevRowCount,\n        cellSize: typeof instanceProps.prevRowHeight === 'number' ? instanceProps.prevRowHeight : null,\n        computeMetadataCallback: function computeMetadataCallback() {\n          return instanceProps.rowSizeAndPositionManager.resetCell(0);\n        },\n        computeMetadataCallbackProps: nextProps,\n        nextCellsCount: nextProps.rowCount,\n        nextCellSize: typeof nextProps.rowHeight === 'number' ? nextProps.rowHeight : null,\n        nextScrollToIndex: nextProps.scrollToRow,\n        scrollToIndex: instanceProps.prevScrollToRow,\n        updateScrollOffsetForScrollToIndex: function updateScrollOffsetForScrollToIndex() {\n          maybeStateB = Grid._getScrollTopForScrollToRowStateUpdate(nextProps, prevState);\n        }\n      });\n      instanceProps.prevColumnCount = nextProps.columnCount;\n      instanceProps.prevColumnWidth = nextProps.columnWidth;\n      instanceProps.prevIsScrolling = nextProps.isScrolling === true;\n      instanceProps.prevRowCount = nextProps.rowCount;\n      instanceProps.prevRowHeight = nextProps.rowHeight;\n      instanceProps.prevScrollToColumn = nextProps.scrollToColumn;\n      instanceProps.prevScrollToRow = nextProps.scrollToRow; // getting scrollBarSize (moved from componentWillMount)\n\n      instanceProps.scrollbarSize = nextProps.getScrollbarSize();\n\n      if (instanceProps.scrollbarSize === undefined) {\n        instanceProps.scrollbarSizeMeasured = false;\n        instanceProps.scrollbarSize = 0;\n      } else {\n        instanceProps.scrollbarSizeMeasured = true;\n      }\n\n      newState.instanceProps = instanceProps;\n      return _objectSpread({}, newState, {}, maybeStateA, {}, maybeStateB);\n    }\n  }, {\n    key: \"_getEstimatedColumnSize\",\n    value: function _getEstimatedColumnSize(props) {\n      return typeof props.columnWidth === 'number' ? props.columnWidth : props.estimatedColumnSize;\n    }\n  }, {\n    key: \"_getEstimatedRowSize\",\n    value: function _getEstimatedRowSize(props) {\n      return typeof props.rowHeight === 'number' ? props.rowHeight : props.estimatedRowSize;\n    }\n  }, {\n    key: \"_getScrollToPositionStateUpdate\",\n\n    /**\n     * Get the updated state after scrolling to\n     * scrollLeft and scrollTop\n     */\n    value: function _getScrollToPositionStateUpdate(_ref9) {\n      var prevState = _ref9.prevState,\n          scrollLeft = _ref9.scrollLeft,\n          scrollTop = _ref9.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0) {\n        newState.scrollDirectionHorizontal = scrollLeft > prevState.scrollLeft ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (typeof scrollTop === 'number' && scrollTop >= 0) {\n        newState.scrollDirectionVertical = scrollTop > prevState.scrollTop ? SCROLL_DIRECTION_FORWARD : SCROLL_DIRECTION_BACKWARD;\n        newState.scrollTop = scrollTop;\n      }\n\n      if (typeof scrollLeft === 'number' && scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft || typeof scrollTop === 'number' && scrollTop >= 0 && scrollTop !== prevState.scrollTop) {\n        return newState;\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_wrapSizeGetter\",\n    value: function _wrapSizeGetter(value) {\n      return typeof value === 'function' ? value : function () {\n        return value;\n      };\n    }\n  }, {\n    key: \"_getCalculatedScrollLeft\",\n    value: function _getCalculatedScrollLeft(nextProps, prevState) {\n      var columnCount = nextProps.columnCount,\n          height = nextProps.height,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToColumn = nextProps.scrollToColumn,\n          width = nextProps.width;\n      var scrollLeft = prevState.scrollLeft,\n          instanceProps = prevState.instanceProps;\n\n      if (columnCount > 0) {\n        var finalColumn = columnCount - 1;\n        var targetIndex = scrollToColumn < 0 ? finalColumn : Math.min(finalColumn, scrollToColumn);\n        var totalRowsHeight = instanceProps.rowSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalRowsHeight > height ? instanceProps.scrollbarSize : 0;\n        return instanceProps.columnSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: width - scrollBarSize,\n          currentOffset: scrollLeft,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollLeftForScrollToColumnStateUpdate\",\n    value: function _getScrollLeftForScrollToColumnStateUpdate(nextProps, prevState) {\n      var scrollLeft = prevState.scrollLeft;\n\n      var calculatedScrollLeft = Grid._getCalculatedScrollLeft(nextProps, prevState);\n\n      if (typeof calculatedScrollLeft === 'number' && calculatedScrollLeft >= 0 && scrollLeft !== calculatedScrollLeft) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: -1\n        });\n      }\n\n      return {};\n    }\n  }, {\n    key: \"_getCalculatedScrollTop\",\n    value: function _getCalculatedScrollTop(nextProps, prevState) {\n      var height = nextProps.height,\n          rowCount = nextProps.rowCount,\n          scrollToAlignment = nextProps.scrollToAlignment,\n          scrollToRow = nextProps.scrollToRow,\n          width = nextProps.width;\n      var scrollTop = prevState.scrollTop,\n          instanceProps = prevState.instanceProps;\n\n      if (rowCount > 0) {\n        var finalRow = rowCount - 1;\n        var targetIndex = scrollToRow < 0 ? finalRow : Math.min(finalRow, scrollToRow);\n        var totalColumnsWidth = instanceProps.columnSizeAndPositionManager.getTotalSize();\n        var scrollBarSize = instanceProps.scrollbarSizeMeasured && totalColumnsWidth > width ? instanceProps.scrollbarSize : 0;\n        return instanceProps.rowSizeAndPositionManager.getUpdatedOffsetForIndex({\n          align: scrollToAlignment,\n          containerSize: height - scrollBarSize,\n          currentOffset: scrollTop,\n          targetIndex: targetIndex\n        });\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"_getScrollTopForScrollToRowStateUpdate\",\n    value: function _getScrollTopForScrollToRowStateUpdate(nextProps, prevState) {\n      var scrollTop = prevState.scrollTop;\n\n      var calculatedScrollTop = Grid._getCalculatedScrollTop(nextProps, prevState);\n\n      if (typeof calculatedScrollTop === 'number' && calculatedScrollTop >= 0 && scrollTop !== calculatedScrollTop) {\n        return Grid._getScrollToPositionStateUpdate({\n          prevState: prevState,\n          scrollLeft: -1,\n          scrollTop: calculatedScrollTop\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return Grid;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string.isRequired,\n  \"aria-readonly\": PropTypes.bool,\n\n  /**\n   * Set the width of the inner scrollable container to 'auto'.\n   * This is useful for single-column Grids to ensure that the column doesn't extend below a vertical scrollbar.\n   */\n  \"autoContainerWidth\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /**\n   * Removes fixed width from the scrollingContainer so that the total width of rows can stretch the window.\n   * Intended for use with WindowScroller\n   */\n  \"autoWidth\": PropTypes.bool.isRequired,\n\n  /** Responsible for rendering a cell given an row and column index.  */\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof bpfrpt_proptype_CellRenderer === \"function\" ? bpfrpt_proptype_CellRenderer.isRequired ? bpfrpt_proptype_CellRenderer.isRequired : bpfrpt_proptype_CellRenderer : PropTypes.shape(bpfrpt_proptype_CellRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a group of cells given their index ranges.  */\n  \"cellRangeRenderer\": function cellRangeRenderer() {\n    return (typeof bpfrpt_proptype_CellRangeRenderer === \"function\" ? bpfrpt_proptype_CellRangeRenderer.isRequired ? bpfrpt_proptype_CellRangeRenderer.isRequired : bpfrpt_proptype_CellRangeRenderer : PropTypes.shape(bpfrpt_proptype_CellRangeRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Optional custom CSS class name to attach to root Grid element.  */\n  \"className\": PropTypes.string,\n\n  /** Number of columns in grid.  */\n  \"columnCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed column width (number) or a function that returns the width of a column given its index.  */\n  \"columnWidth\": function columnWidth() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Unfiltered props for the Grid container. */\n  \"containerProps\": PropTypes.object,\n\n  /** ARIA role for the cell-container.  */\n  \"containerRole\": PropTypes.string.isRequired,\n\n  /** Optional inline style applied to inner cell-container */\n  \"containerStyle\": PropTypes.object.isRequired,\n\n  /**\n   * If CellMeasurer is used to measure this Grid's children, this should be a pointer to its CellMeasurerCache.\n   * A shared CellMeasurerCache reference enables Grid and CellMeasurer to share measurement data.\n   */\n  \"deferredMeasurementCache\": PropTypes.object,\n\n  /**\n   * Used to estimate the total width of a Grid before all of its columns have actually been measured.\n   * The estimated total width is adjusted as columns are rendered.\n   */\n  \"estimatedColumnSize\": PropTypes.number.isRequired,\n\n  /**\n   * Used to estimate the total height of a Grid before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Exposed for testing purposes only.  */\n  \"getScrollbarSize\": PropTypes.func.isRequired,\n\n  /** Height of Grid; this property determines the number of visible (vs virtualized) rows.  */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional custom id to attach to root Grid element.  */\n  \"id\": PropTypes.string,\n\n  /**\n   * Override internal is-scrolling state tracking.\n   * This property is primarily intended for use with the WindowScroller component.\n   */\n  \"isScrolling\": PropTypes.bool,\n\n  /**\n   * Opt-out of isScrolling param passed to cellRangeRenderer.\n   * To avoid the extra render when scroll stops.\n   */\n  \"isScrollingOptOut\": PropTypes.bool.isRequired,\n\n  /** Optional renderer to be used in place of rows when either :rowCount or :columnCount is 0.  */\n  \"noContentRenderer\": function noContentRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /**\n   * Called whenever a horizontal or vertical scrollbar is added or removed.\n   * This prop is not intended for end-user use;\n   * It is used by MultiGrid to support fixed-row/fixed-column scroll syncing.\n   */\n  \"onScrollbarPresenceChange\": PropTypes.func.isRequired,\n\n  /** Callback invoked with information about the section of the Grid that was just rendered.  */\n  \"onSectionRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Number of columns to render before/after the visible section of the grid.\n   * These columns can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanColumnCount\": PropTypes.number.isRequired,\n\n  /**\n   * Calculates the number of cells to overscan before and after a specified range.\n   * This function ensures that overscanning doesn't exceed the available cells.\n   */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible section of the grid.\n   * These rows can help for smoother scrolling on touch devices or browsers that send scroll events infrequently.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** ARIA role for the grid element.  */\n  \"role\": PropTypes.string.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * Should implement the following interface: ({ index: number }): number\n   */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in grid.  */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** Wait this amount of time after the last scroll event before resetting Grid `pointer-events`. */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Horizontal offset. */\n  \"scrollLeft\": PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Column index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToColumn\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToRow\": PropTypes.number.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of Grid; this property determines the number of visible (vs virtualized) columns.  */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(Grid, \"defaultProps\", {\n  'aria-label': 'grid',\n  'aria-readonly': true,\n  autoContainerWidth: false,\n  autoHeight: false,\n  autoWidth: false,\n  cellRangeRenderer: defaultCellRangeRenderer,\n  containerRole: 'rowgroup',\n  containerStyle: {},\n  estimatedColumnSize: 100,\n  estimatedRowSize: 30,\n  getScrollbarSize: scrollbarSize,\n  noContentRenderer: renderNull,\n  onScroll: function onScroll() {},\n  onScrollbarPresenceChange: function onScrollbarPresenceChange() {},\n  onSectionRendered: function onSectionRendered() {},\n  overscanColumnCount: 0,\n  overscanIndicesGetter: defaultOverscanIndicesGetter,\n  overscanRowCount: 10,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  scrollToAlignment: 'auto',\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  tabIndex: 0,\n  isScrollingOptOut: false\n});\n\npolyfill(Grid);\nexport default Grid;\nimport { bpfrpt_proptype_CellRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellRangeRenderer } from \"./types\";\nimport { bpfrpt_proptype_CellPosition } from \"./types\";\nimport { bpfrpt_proptype_CellSize } from \"./types\";\nimport { bpfrpt_proptype_CellSizeGetter } from \"./types\";\nimport { bpfrpt_proptype_NoContentRenderer } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport { bpfrpt_proptype_ScrollbarPresenceChange } from \"./types\";\nimport { bpfrpt_proptype_RenderedSection } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"./types\";\nimport { bpfrpt_proptype_Alignment } from \"./types\";\nimport { bpfrpt_proptype_CellCache } from \"./types\";\nimport { bpfrpt_proptype_StyleCache } from \"./types\";\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";","import { caf, raf } from './animationFrame';\nvar bpfrpt_proptype_AnimationTimeoutId = process.env.NODE_ENV === 'production' ? null : {\n  \"id\": PropTypes.number.isRequired\n};\nexport var cancelAnimationTimeout = function cancelAnimationTimeout(frame) {\n  return caf(frame.id);\n};\n/**\n * Recursively calls requestAnimationFrame until a specified delay has been met or exceeded.\n * When the delay time has been reached the function you're timing out will be called.\n *\n * Credit: Joe Lambert (https://gist.github.com/joelambert/1002116#file-requesttimeout-js)\n */\n\nexport var requestAnimationTimeout = function requestAnimationTimeout(callback, delay) {\n  var start; // wait for end of processing current event handler, because event handler may be long\n\n  Promise.resolve().then(function () {\n    start = Date.now();\n  });\n\n  var timeout = function timeout() {\n    if (Date.now() - start >= delay) {\n      callback.call();\n    } else {\n      frame.id = raf(timeout);\n    }\n  };\n\n  var frame = {\n    id: raf(timeout)\n  };\n  return frame;\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_AnimationTimeoutId };","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","/**\n * Default implementation of cellRangeRenderer used by Grid.\n * This renderer supports cell-caching while the user is scrolling.\n */\nexport default function defaultCellRangeRenderer(_ref) {\n  var cellCache = _ref.cellCache,\n      cellRenderer = _ref.cellRenderer,\n      columnSizeAndPositionManager = _ref.columnSizeAndPositionManager,\n      columnStartIndex = _ref.columnStartIndex,\n      columnStopIndex = _ref.columnStopIndex,\n      deferredMeasurementCache = _ref.deferredMeasurementCache,\n      horizontalOffsetAdjustment = _ref.horizontalOffsetAdjustment,\n      isScrolling = _ref.isScrolling,\n      isScrollingOptOut = _ref.isScrollingOptOut,\n      parent = _ref.parent,\n      rowSizeAndPositionManager = _ref.rowSizeAndPositionManager,\n      rowStartIndex = _ref.rowStartIndex,\n      rowStopIndex = _ref.rowStopIndex,\n      styleCache = _ref.styleCache,\n      verticalOffsetAdjustment = _ref.verticalOffsetAdjustment,\n      visibleColumnIndices = _ref.visibleColumnIndices,\n      visibleRowIndices = _ref.visibleRowIndices;\n  var renderedCells = []; // Browsers have native size limits for elements (eg Chrome 33M pixels, IE 1.5M pixes).\n  // User cannot scroll beyond these size limitations.\n  // In order to work around this, ScalingCellSizeAndPositionManager compresses offsets.\n  // We should never cache styles for compressed offsets though as this can lead to bugs.\n  // See issue #576 for more.\n\n  var areOffsetsAdjusted = columnSizeAndPositionManager.areOffsetsAdjusted() || rowSizeAndPositionManager.areOffsetsAdjusted();\n  var canCacheStyle = !isScrolling && !areOffsetsAdjusted;\n\n  for (var rowIndex = rowStartIndex; rowIndex <= rowStopIndex; rowIndex++) {\n    var rowDatum = rowSizeAndPositionManager.getSizeAndPositionOfCell(rowIndex);\n\n    for (var columnIndex = columnStartIndex; columnIndex <= columnStopIndex; columnIndex++) {\n      var columnDatum = columnSizeAndPositionManager.getSizeAndPositionOfCell(columnIndex);\n      var isVisible = columnIndex >= visibleColumnIndices.start && columnIndex <= visibleColumnIndices.stop && rowIndex >= visibleRowIndices.start && rowIndex <= visibleRowIndices.stop;\n      var key = \"\".concat(rowIndex, \"-\").concat(columnIndex);\n      var style = void 0; // Cache style objects so shallow-compare doesn't re-render unnecessarily.\n\n      if (canCacheStyle && styleCache[key]) {\n        style = styleCache[key];\n      } else {\n        // In deferred mode, cells will be initially rendered before we know their size.\n        // Don't interfere with CellMeasurer's measurements by setting an invalid size.\n        if (deferredMeasurementCache && !deferredMeasurementCache.has(rowIndex, columnIndex)) {\n          // Position not-yet-measured cells at top/left 0,0,\n          // And give them width/height of 'auto' so they can grow larger than the parent Grid if necessary.\n          // Positioning them further to the right/bottom influences their measured size.\n          style = {\n            height: 'auto',\n            left: 0,\n            position: 'absolute',\n            top: 0,\n            width: 'auto'\n          };\n        } else {\n          style = {\n            height: rowDatum.size,\n            left: columnDatum.offset + horizontalOffsetAdjustment,\n            position: 'absolute',\n            top: rowDatum.offset + verticalOffsetAdjustment,\n            width: columnDatum.size\n          };\n          styleCache[key] = style;\n        }\n      }\n\n      var cellRendererParams = {\n        columnIndex: columnIndex,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent,\n        rowIndex: rowIndex,\n        style: style\n      };\n      var renderedCell = void 0; // Avoid re-creating cells while scrolling.\n      // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n      // If a scroll is in progress- cache and reuse cells.\n      // This cache will be thrown away once scrolling completes.\n      // However if we are scaling scroll positions and sizes, we should also avoid caching.\n      // This is because the offset changes slightly as scroll position changes and caching leads to stale values.\n      // For more info refer to issue #395\n      //\n      // If isScrollingOptOut is specified, we always cache cells.\n      // For more info refer to issue #1028\n\n      if ((isScrollingOptOut || isScrolling) && !horizontalOffsetAdjustment && !verticalOffsetAdjustment) {\n        if (!cellCache[key]) {\n          cellCache[key] = cellRenderer(cellRendererParams);\n        }\n\n        renderedCell = cellCache[key]; // If the user is no longer scrolling, don't cache cells.\n        // This makes dynamic cell content difficult for users and would also lead to a heavier memory footprint.\n      } else {\n        renderedCell = cellRenderer(cellRendererParams);\n      }\n\n      if (renderedCell == null || renderedCell === false) {\n        continue;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        warnAboutMissingStyle(parent, renderedCell);\n      }\n\n      renderedCells.push(renderedCell);\n    }\n  }\n\n  return renderedCells;\n}\n\nfunction warnAboutMissingStyle(parent, renderedCell) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (renderedCell) {\n      // If the direct child is a CellMeasurer, then we should check its child\n      // See issue #611\n      if (renderedCell.type && renderedCell.type.__internalCellMeasurerFlag) {\n        renderedCell = renderedCell.props.children;\n      }\n\n      if (renderedCell && renderedCell.props && renderedCell.props.style === undefined && parent.__warnedAboutMissingStyle !== true) {\n        parent.__warnedAboutMissingStyle = true;\n        console.warn('Rendered cell should include style property for positioning.');\n      }\n    }\n  }\n}\n\nimport { bpfrpt_proptype_CellRangeRendererParams } from \"./types\";","export var SCROLL_DIRECTION_BACKWARD = -1;\nexport var SCROLL_DIRECTION_FORWARD = 1;\nexport var SCROLL_DIRECTION_HORIZONTAL = 'horizontal';\nexport var SCROLL_DIRECTION_VERTICAL = 'vertical';\n/**\n * Calculates the number of cells to overscan before and after a specified range.\n * This function ensures that overscanning doesn't exceed the available cells.\n */\n\nexport default function defaultOverscanIndicesGetter(_ref) {\n  var cellCount = _ref.cellCount,\n      overscanCellsCount = _ref.overscanCellsCount,\n      scrollDirection = _ref.scrollDirection,\n      startIndex = _ref.startIndex,\n      stopIndex = _ref.stopIndex;\n  // Make sure we render at least 1 cell extra before and after (except near boundaries)\n  // This is necessary in order to support keyboard navigation (TAB/SHIFT+TAB) in some cases\n  // For more info see issues #625\n  overscanCellsCount = Math.max(1, overscanCellsCount);\n\n  if (scrollDirection === SCROLL_DIRECTION_FORWARD) {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - 1),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + overscanCellsCount)\n    };\n  } else {\n    return {\n      overscanStartIndex: Math.max(0, startIndex - overscanCellsCount),\n      overscanStopIndex: Math.min(cellCount - 1, stopIndex + 1)\n    };\n  }\n}\nimport { bpfrpt_proptype_OverscanIndicesGetterParams } from \"./types\";\nimport { bpfrpt_proptype_OverscanIndices } from \"./types\";","var bpfrpt_proptype_ScrollIndices = process.env.NODE_ENV === 'production' ? null : {\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n};\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_ScrollIndices };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\n/**\n * This HOC decorates a virtualized component and responds to arrow-key events by scrolling one row or column at a time.\n */\n\nvar ArrowKeyStepper = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ArrowKeyStepper, _React$PureComponent);\n\n  function ArrowKeyStepper() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ArrowKeyStepper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ArrowKeyStepper)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollToColumn: 0,\n      scrollToRow: 0,\n      instanceProps: {\n        prevScrollToColumn: 0,\n        prevScrollToRow: 0\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStartIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowStopIndex\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onKeyDown\", function (event) {\n      var _this$props = _this.props,\n          columnCount = _this$props.columnCount,\n          disabled = _this$props.disabled,\n          mode = _this$props.mode,\n          rowCount = _this$props.rowCount;\n\n      if (disabled) {\n        return;\n      }\n\n      var _this$_getScrollState = _this._getScrollState(),\n          scrollToColumnPrevious = _this$_getScrollState.scrollToColumn,\n          scrollToRowPrevious = _this$_getScrollState.scrollToRow;\n\n      var _this$_getScrollState2 = _this._getScrollState(),\n          scrollToColumn = _this$_getScrollState2.scrollToColumn,\n          scrollToRow = _this$_getScrollState2.scrollToRow; // The above cases all prevent default event event behavior.\n      // This is to keep the grid from scrolling after the snap-to update.\n\n\n      switch (event.key) {\n        case 'ArrowDown':\n          scrollToRow = mode === 'cells' ? Math.min(scrollToRow + 1, rowCount - 1) : Math.min(_this._rowStopIndex + 1, rowCount - 1);\n          break;\n\n        case 'ArrowLeft':\n          scrollToColumn = mode === 'cells' ? Math.max(scrollToColumn - 1, 0) : Math.max(_this._columnStartIndex - 1, 0);\n          break;\n\n        case 'ArrowRight':\n          scrollToColumn = mode === 'cells' ? Math.min(scrollToColumn + 1, columnCount - 1) : Math.min(_this._columnStopIndex + 1, columnCount - 1);\n          break;\n\n        case 'ArrowUp':\n          scrollToRow = mode === 'cells' ? Math.max(scrollToRow - 1, 0) : Math.max(_this._rowStartIndex - 1, 0);\n          break;\n      }\n\n      if (scrollToColumn !== scrollToColumnPrevious || scrollToRow !== scrollToRowPrevious) {\n        event.preventDefault();\n\n        _this._updateScrollState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref) {\n      var columnStartIndex = _ref.columnStartIndex,\n          columnStopIndex = _ref.columnStopIndex,\n          rowStartIndex = _ref.rowStartIndex,\n          rowStopIndex = _ref.rowStopIndex;\n      _this._columnStartIndex = columnStartIndex;\n      _this._columnStopIndex = columnStopIndex;\n      _this._rowStartIndex = rowStartIndex;\n      _this._rowStopIndex = rowStopIndex;\n    });\n\n    return _this;\n  }\n\n  _createClass(ArrowKeyStepper, [{\n    key: \"setScrollIndexes\",\n    value: function setScrollIndexes(_ref2) {\n      var scrollToColumn = _ref2.scrollToColumn,\n          scrollToRow = _ref2.scrollToRow;\n      this.setState({\n        scrollToRow: scrollToRow,\n        scrollToColumn: scrollToColumn\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          children = _this$props2.children;\n\n      var _this$_getScrollState3 = this._getScrollState(),\n          scrollToColumn = _this$_getScrollState3.scrollToColumn,\n          scrollToRow = _this$_getScrollState3.scrollToRow;\n\n      return React.createElement(\"div\", {\n        className: className,\n        onKeyDown: this._onKeyDown\n      }, children({\n        onSectionRendered: this._onSectionRendered,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow\n      }));\n    }\n  }, {\n    key: \"_getScrollState\",\n    value: function _getScrollState() {\n      return this.props.isControlled ? this.props : this.state;\n    }\n  }, {\n    key: \"_updateScrollState\",\n    value: function _updateScrollState(_ref3) {\n      var scrollToColumn = _ref3.scrollToColumn,\n          scrollToRow = _ref3.scrollToRow;\n      var _this$props3 = this.props,\n          isControlled = _this$props3.isControlled,\n          onScrollToChange = _this$props3.onScrollToChange;\n\n      if (typeof onScrollToChange === 'function') {\n        onScrollToChange({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n\n      if (!isControlled) {\n        this.setState({\n          scrollToColumn: scrollToColumn,\n          scrollToRow: scrollToRow\n        });\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isControlled) {\n        return {};\n      }\n\n      if (nextProps.scrollToColumn !== prevState.instanceProps.prevScrollToColumn || nextProps.scrollToRow !== prevState.instanceProps.prevScrollToRow) {\n        return _objectSpread({}, prevState, {\n          scrollToColumn: nextProps.scrollToColumn,\n          scrollToRow: nextProps.scrollToRow,\n          instanceProps: {\n            prevScrollToColumn: nextProps.scrollToColumn,\n            prevScrollToRow: nextProps.scrollToRow\n          }\n        });\n      }\n\n      return {};\n    }\n  }]);\n\n  return ArrowKeyStepper;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"children\": PropTypes.func.isRequired,\n  \"className\": PropTypes.string,\n  \"columnCount\": PropTypes.number.isRequired,\n  \"disabled\": PropTypes.bool.isRequired,\n  \"isControlled\": PropTypes.bool.isRequired,\n  \"mode\": PropTypes.oneOf([\"cells\", \"edges\"]).isRequired,\n  \"onScrollToChange\": PropTypes.func,\n  \"rowCount\": PropTypes.number.isRequired,\n  \"scrollToColumn\": PropTypes.number.isRequired,\n  \"scrollToRow\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(ArrowKeyStepper, \"defaultProps\", {\n  disabled: false,\n  isControlled: false,\n  mode: 'edges',\n  scrollToColumn: 0,\n  scrollToRow: 0\n});\n\npolyfill(ArrowKeyStepper);\nexport default ArrowKeyStepper;\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_ScrollIndices } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport createDetectElementResize from '../vendor/detectElementResize';\nvar AutoSizer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AutoSizer, _React$Component);\n\n  function AutoSizer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutoSizer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutoSizer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      height: _this.props.defaultHeight || 0,\n      width: _this.props.defaultWidth || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_parentNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_autoSizer\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      var _this$props = _this.props,\n          disableHeight = _this$props.disableHeight,\n          disableWidth = _this$props.disableWidth,\n          onResize = _this$props.onResize;\n\n      if (_this._parentNode) {\n        // Guard against AutoSizer component being removed from the DOM immediately after being added.\n        // This can result in invalid style values which can result in NaN values if we don't handle them.\n        // See issue #150 for more context.\n        var height = _this._parentNode.offsetHeight || 0;\n        var width = _this._parentNode.offsetWidth || 0;\n        var win = _this._window || window;\n        var style = win.getComputedStyle(_this._parentNode) || {};\n        var paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n        var paddingRight = parseInt(style.paddingRight, 10) || 0;\n        var paddingTop = parseInt(style.paddingTop, 10) || 0;\n        var paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n        var newHeight = height - paddingTop - paddingBottom;\n        var newWidth = width - paddingLeft - paddingRight;\n\n        if (!disableHeight && _this.state.height !== newHeight || !disableWidth && _this.state.width !== newWidth) {\n          _this.setState({\n            height: height - paddingTop - paddingBottom,\n            width: width - paddingLeft - paddingRight\n          });\n\n          onResize({\n            height: height,\n            width: width\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (autoSizer) {\n      _this._autoSizer = autoSizer;\n    });\n\n    return _this;\n  }\n\n  _createClass(AutoSizer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var nonce = this.props.nonce;\n\n      if (this._autoSizer && this._autoSizer.parentNode && this._autoSizer.parentNode.ownerDocument && this._autoSizer.parentNode.ownerDocument.defaultView && this._autoSizer.parentNode instanceof this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement) {\n        // Delay access of parentNode until mount.\n        // This handles edge-cases where the component has already been unmounted before its ref has been set,\n        // As well as libraries like react-lite which have a slightly different lifecycle.\n        this._parentNode = this._autoSizer.parentNode;\n        this._window = this._autoSizer.parentNode.ownerDocument.defaultView; // Defer requiring resize handler in order to support server-side rendering.\n        // See issue #41\n\n        this._detectElementResize = createDetectElementResize(nonce, this._window);\n\n        this._detectElementResize.addResizeListener(this._parentNode, this._onResize);\n\n        this._onResize();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._detectElementResize && this._parentNode) {\n        this._detectElementResize.removeResizeListener(this._parentNode, this._onResize);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          className = _this$props2.className,\n          disableHeight = _this$props2.disableHeight,\n          disableWidth = _this$props2.disableWidth,\n          style = _this$props2.style;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width; // Outer div should not force width/height since that may prevent containers from shrinking.\n      // Inner component should overflow and use calculated width/height.\n      // See issue #68 for more information.\n\n      var outerStyle = {\n        overflow: 'visible'\n      };\n      var childParams = {};\n\n      if (!disableHeight) {\n        outerStyle.height = 0;\n        childParams.height = height;\n      }\n\n      if (!disableWidth) {\n        outerStyle.width = 0;\n        childParams.width = width;\n      }\n      /**\n       * TODO: Avoid rendering children before the initial measurements have been collected.\n       * At best this would just be wasting cycles.\n       * Add this check into version 10 though as it could break too many ref callbacks in version 9.\n       * Note that if default width/height props were provided this would still work with SSR.\n      if (\n        height !== 0 &&\n        width !== 0\n      ) {\n        child = children({ height, width })\n      }\n      */\n\n\n      return React.createElement(\"div\", {\n        className: className,\n        ref: this._setRef,\n        style: _objectSpread({}, outerStyle, {}, style)\n      }, children(childParams));\n    }\n  }]);\n\n  return AutoSizer;\n}(React.Component), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /** Function responsible for rendering children.*/\n  \"children\": PropTypes.func.isRequired,\n\n  /** Optional custom CSS class name to attach to root AutoSizer element.  */\n  \"className\": PropTypes.string,\n\n  /** Default height to use for initial render; useful for SSR */\n  \"defaultHeight\": PropTypes.number,\n\n  /** Default width to use for initial render; useful for SSR */\n  \"defaultWidth\": PropTypes.number,\n\n  /** Disable dynamic :height property */\n  \"disableHeight\": PropTypes.bool.isRequired,\n\n  /** Disable dynamic :width property */\n  \"disableWidth\": PropTypes.bool.isRequired,\n\n  /** Nonce of the inlined stylesheet for Content Security Policy */\n  \"nonce\": PropTypes.string,\n\n  /** Callback to be invoked on-resize */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object\n}), _temp);\n\n_defineProperty(AutoSizer, \"defaultProps\", {\n  onResize: function onResize() {},\n  disableHeight: false,\n  disableWidth: false,\n  style: {}\n});\n\nexport { AutoSizer as default };\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\n\n/**\n * Wraps a cell and measures its rendered content.\n * Measurements are stored in a per-cell cache.\n * Cached-content is not be re-measured.\n */\nvar CellMeasurer = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CellMeasurer, _React$PureComponent);\n\n  function CellMeasurer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CellMeasurer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CellMeasurer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_measure\", function () {\n      var _this$props = _this.props,\n          cache = _this$props.cache,\n          _this$props$columnInd = _this$props.columnIndex,\n          columnIndex = _this$props$columnInd === void 0 ? 0 : _this$props$columnInd,\n          parent = _this$props.parent,\n          _this$props$rowIndex = _this$props.rowIndex,\n          rowIndex = _this$props$rowIndex === void 0 ? _this.props.index || 0 : _this$props$rowIndex;\n\n      var _this$_getCellMeasure = _this._getCellMeasurements(),\n          height = _this$_getCellMeasure.height,\n          width = _this$_getCellMeasure.width;\n\n      if (height !== cache.getHeight(rowIndex, columnIndex) || width !== cache.getWidth(rowIndex, columnIndex)) {\n        cache.set(rowIndex, columnIndex, width, height);\n\n        if (parent && typeof parent.recomputeGridSize === 'function') {\n          parent.recomputeGridSize({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('CellMeasurer registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      if (element) {\n        _this._maybeMeasureCell();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(CellMeasurer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._maybeMeasureCell();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return typeof children === 'function' ? children({\n        measure: this._measure,\n        registerChild: this._registerChild\n      }) : children;\n    }\n  }, {\n    key: \"_getCellMeasurements\",\n    value: function _getCellMeasurements() {\n      var cache = this.props.cache;\n      var node = this._child || findDOMNode(this); // TODO Check for a bad combination of fixedWidth and missing numeric width or vice versa with height\n\n      if (node && node.ownerDocument && node.ownerDocument.defaultView && node instanceof node.ownerDocument.defaultView.HTMLElement) {\n        var styleWidth = node.style.width;\n        var styleHeight = node.style.height; // If we are re-measuring a cell that has already been measured,\n        // It will have a hard-coded width/height from the previous measurement.\n        // The fact that we are measuring indicates this measurement is probably stale,\n        // So explicitly clear it out (eg set to \"auto\") so we can recalculate.\n        // See issue #593 for more info.\n        // Even if we are measuring initially- if we're inside of a MultiGrid component,\n        // Explicitly clear width/height before measuring to avoid being tainted by another Grid.\n        // eg top/left Grid renders before bottom/right Grid\n        // Since the CellMeasurerCache is shared between them this taints derived cell size values.\n\n        if (!cache.hasFixedWidth()) {\n          node.style.width = 'auto';\n        }\n\n        if (!cache.hasFixedHeight()) {\n          node.style.height = 'auto';\n        }\n\n        var height = Math.ceil(node.offsetHeight);\n        var width = Math.ceil(node.offsetWidth); // Reset after measuring to avoid breaking styles; see #660\n\n        if (styleWidth) {\n          node.style.width = styleWidth;\n        }\n\n        if (styleHeight) {\n          node.style.height = styleHeight;\n        }\n\n        return {\n          height: height,\n          width: width\n        };\n      } else {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n    }\n  }, {\n    key: \"_maybeMeasureCell\",\n    value: function _maybeMeasureCell() {\n      var _this$props2 = this.props,\n          cache = _this$props2.cache,\n          _this$props2$columnIn = _this$props2.columnIndex,\n          columnIndex = _this$props2$columnIn === void 0 ? 0 : _this$props2$columnIn,\n          parent = _this$props2.parent,\n          _this$props2$rowIndex = _this$props2.rowIndex,\n          rowIndex = _this$props2$rowIndex === void 0 ? this.props.index || 0 : _this$props2$rowIndex;\n\n      if (!cache.has(rowIndex, columnIndex)) {\n        var _this$_getCellMeasure2 = this._getCellMeasurements(),\n            height = _this$_getCellMeasure2.height,\n            width = _this$_getCellMeasure2.width;\n\n        cache.set(rowIndex, columnIndex, width, height); // If size has changed, let Grid know to re-render.\n\n        if (parent && typeof parent.invalidateCellSizeAfterRender === 'function') {\n          parent.invalidateCellSizeAfterRender({\n            columnIndex: columnIndex,\n            rowIndex: rowIndex\n          });\n        }\n      }\n    }\n  }]);\n\n  return CellMeasurer;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"cache\": function cache() {\n    return (typeof bpfrpt_proptype_CellMeasureCache === \"function\" ? bpfrpt_proptype_CellMeasureCache.isRequired ? bpfrpt_proptype_CellMeasureCache.isRequired : bpfrpt_proptype_CellMeasureCache : PropTypes.shape(bpfrpt_proptype_CellMeasureCache).isRequired).apply(this, arguments);\n  },\n  \"children\": PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  \"columnIndex\": PropTypes.number,\n  \"index\": PropTypes.number,\n  \"parent\": PropTypes.shape({\n    invalidateCellSizeAfterRender: PropTypes.func,\n    recomputeGridSize: PropTypes.func\n  }).isRequired,\n  \"rowIndex\": PropTypes.number\n}), _temp); // Used for DEV mode warning check\n\n_defineProperty(CellMeasurer, \"__internalCellMeasurerFlag\", false);\n\nexport { CellMeasurer as default };\n\nif (process.env.NODE_ENV !== 'production') {\n  CellMeasurer.__internalCellMeasurerFlag = true;\n}\n\nimport { bpfrpt_proptype_CellMeasureCache } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize'; // @TODO Merge Collection and CollectionView\n\n/**\n * Specifies the number of milliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nvar IS_SCROLLING_TIMEOUT = 150;\n/**\n * Controls whether the Grid updates the DOM element's scrollLeft/scrollTop based on the current state or just observes it.\n * This prevents Grid from interrupting mouse-wheel animations (see issue #2).\n */\n\nvar SCROLL_POSITION_CHANGE_REASONS = {\n  OBSERVED: 'observed',\n  REQUESTED: 'requested'\n};\n/**\n * Monitors changes in properties (eg. cellCount) and state (eg. scroll offsets) to determine when rendering needs to occur.\n * This component does not render any visible content itself; it defers to the specified :cellLayoutManager.\n */\n\nvar CollectionView =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(CollectionView, _React$PureComponent);\n\n  // Invokes callbacks only when their values have changed.\n  function CollectionView() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CollectionView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CollectionView)).call.apply(_getPrototypeOf2, [this].concat(args))); // If this component is being rendered server-side, getScrollbarSize() will return undefined.\n    // We handle this case in componentDidMount()\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_calculateSizeAndPositionDataOnNextUpdate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRenderedMemoizer\", createCallbackMemoizer());\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollMemoizer\", createCallbackMemoizer(false));\n\n    _defineProperty(_assertThisInitialized(_this), \"_invokeOnSectionRenderedHelper\", function () {\n      var _this$props = _this.props,\n          cellLayoutManager = _this$props.cellLayoutManager,\n          onSectionRendered = _this$props.onSectionRendered;\n\n      _this._onSectionRenderedMemoizer({\n        callback: onSectionRendered,\n        indices: {\n          indices: cellLayoutManager.getLastRenderedIndices()\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_updateScrollPositionForScrollToCell\", function () {\n      var _this$props2 = _this.props,\n          cellLayoutManager = _this$props2.cellLayoutManager,\n          height = _this$props2.height,\n          scrollToAlignment = _this$props2.scrollToAlignment,\n          scrollToCell = _this$props2.scrollToCell,\n          width = _this$props2.width;\n      var _this$state = _this.state,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop;\n\n      if (scrollToCell >= 0) {\n        var scrollPosition = cellLayoutManager.getScrollPositionForCell({\n          align: scrollToAlignment,\n          cellIndex: scrollToCell,\n          height: height,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          width: width\n        });\n\n        if (scrollPosition.scrollLeft !== scrollLeft || scrollPosition.scrollTop !== scrollTop) {\n          _this._setScrollPosition(scrollPosition);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      // In certain edge-cases React dispatches an onScroll event with an invalid target.scrollLeft / target.scrollTop.\n      // This invalid event can be detected by comparing event.target to this component's scrollable DOM element.\n      // See issue #404 for more information.\n      if (event.target !== _this._scrollingContainer) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._enablePointerEventsAfterDelay(); // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scrollTop never exceeds the total height.\n\n\n      var _this$props3 = _this.props,\n          cellLayoutManager = _this$props3.cellLayoutManager,\n          height = _this$props3.height,\n          isScrollingChange = _this$props3.isScrollingChange,\n          width = _this$props3.width;\n      var scrollbarSize = _this._scrollbarSize;\n\n      var _cellLayoutManager$ge = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge.height,\n          totalWidth = _cellLayoutManager$ge.width;\n\n      var scrollLeft = Math.max(0, Math.min(totalWidth - width + scrollbarSize, event.target.scrollLeft));\n      var scrollTop = Math.max(0, Math.min(totalHeight - height + scrollbarSize, event.target.scrollTop)); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n      if (_this.state.scrollLeft !== scrollLeft || _this.state.scrollTop !== scrollTop) {\n        // Browsers with cancelable scroll events (eg. Firefox) interrupt scrolling animations if scrollTop/scrollLeft is set.\n        // Other browsers (eg. Safari) don't scroll as well without the help under certain conditions (DOM or style changes during scrolling).\n        // All things considered, this seems to be the best current work around that I'm aware of.\n        // For more information see https://github.com/bvaughn/react-virtualized/pull/124\n        var scrollPositionChangeReason = event.cancelable ? SCROLL_POSITION_CHANGE_REASONS.OBSERVED : SCROLL_POSITION_CHANGE_REASONS.REQUESTED; // Synchronously set :isScrolling the first time (since _setNextState will reschedule its animation frame each time it's called)\n\n        if (!_this.state.isScrolling) {\n          isScrollingChange(true);\n        }\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollPositionChangeReason: scrollPositionChangeReason,\n          scrollTop: scrollTop\n        });\n      }\n\n      _this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        totalWidth: totalWidth,\n        totalHeight: totalHeight\n      });\n    });\n\n    _this._scrollbarSize = getScrollbarSize();\n\n    if (_this._scrollbarSize === undefined) {\n      _this._scrollbarSizeMeasured = false;\n      _this._scrollbarSize = 0;\n    } else {\n      _this._scrollbarSizeMeasured = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Forced recompute of cell sizes and positions.\n   * This function should be called if cell sizes have changed but nothing else has.\n   * Since cell positions are calculated by callbacks, the collection view has no way of detecting when the underlying data has changed.\n   */\n\n\n  _createClass(CollectionView, [{\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._calculateSizeAndPositionDataOnNextUpdate = true;\n      this.forceUpdate();\n    }\n    /* ---------------------------- Component lifecycle methods ---------------------------- */\n\n    /**\n     * @private\n     * This method updates scrollLeft/scrollTop in state for the following conditions:\n     * 1) Empty content (0 rows or columns)\n     * 2) New scroll props overriding the current state\n     * 3) Cells-count or cells-size has changed, making previous scroll offsets invalid\n     */\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props4 = this.props,\n          cellLayoutManager = _this$props4.cellLayoutManager,\n          scrollLeft = _this$props4.scrollLeft,\n          scrollToCell = _this$props4.scrollToCell,\n          scrollTop = _this$props4.scrollTop; // If this component was first rendered server-side, scrollbar size will be undefined.\n      // In that event we need to remeasure.\n\n      if (!this._scrollbarSizeMeasured) {\n        this._scrollbarSize = getScrollbarSize();\n        this._scrollbarSizeMeasured = true;\n        this.setState({});\n      }\n\n      if (scrollToCell >= 0) {\n        this._updateScrollPositionForScrollToCell();\n      } else if (scrollLeft >= 0 || scrollTop >= 0) {\n        this._setScrollPosition({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      } // Update onSectionRendered callback.\n\n\n      this._invokeOnSectionRenderedHelper();\n\n      var _cellLayoutManager$ge2 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge2.height,\n          totalWidth = _cellLayoutManager$ge2.width; // Initialize onScroll callback.\n\n\n      this._invokeOnScrollMemoizer({\n        scrollLeft: scrollLeft || 0,\n        scrollTop: scrollTop || 0,\n        totalHeight: totalHeight,\n        totalWidth: totalWidth\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$props5 = this.props,\n          height = _this$props5.height,\n          scrollToAlignment = _this$props5.scrollToAlignment,\n          scrollToCell = _this$props5.scrollToCell,\n          width = _this$props5.width;\n      var _this$state2 = this.state,\n          scrollLeft = _this$state2.scrollLeft,\n          scrollPositionChangeReason = _this$state2.scrollPositionChangeReason,\n          scrollTop = _this$state2.scrollTop; // Make sure requested changes to :scrollLeft or :scrollTop get applied.\n      // Assigning to scrollLeft/scrollTop tells the browser to interrupt any running scroll animations,\n      // And to discard any pending async changes to the scroll position that may have happened in the meantime (e.g. on a separate scrolling thread).\n      // So we only set these when we require an adjustment of the scroll position.\n      // See issue #2 for more information.\n\n      if (scrollPositionChangeReason === SCROLL_POSITION_CHANGE_REASONS.REQUESTED) {\n        if (scrollLeft >= 0 && scrollLeft !== prevState.scrollLeft && scrollLeft !== this._scrollingContainer.scrollLeft) {\n          this._scrollingContainer.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop >= 0 && scrollTop !== prevState.scrollTop && scrollTop !== this._scrollingContainer.scrollTop) {\n          this._scrollingContainer.scrollTop = scrollTop;\n        }\n      } // Update scroll offsets if the current :scrollToCell values requires it\n\n\n      if (height !== prevProps.height || scrollToAlignment !== prevProps.scrollToAlignment || scrollToCell !== prevProps.scrollToCell || width !== prevProps.width) {\n        this._updateScrollPositionForScrollToCell();\n      } // Update onRowsRendered callback if start/stop indices have changed\n\n\n      this._invokeOnSectionRenderedHelper();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props,\n          autoHeight = _this$props6.autoHeight,\n          cellCount = _this$props6.cellCount,\n          cellLayoutManager = _this$props6.cellLayoutManager,\n          className = _this$props6.className,\n          height = _this$props6.height,\n          horizontalOverscanSize = _this$props6.horizontalOverscanSize,\n          id = _this$props6.id,\n          noContentRenderer = _this$props6.noContentRenderer,\n          style = _this$props6.style,\n          verticalOverscanSize = _this$props6.verticalOverscanSize,\n          width = _this$props6.width;\n      var _this$state3 = this.state,\n          isScrolling = _this$state3.isScrolling,\n          scrollLeft = _this$state3.scrollLeft,\n          scrollTop = _this$state3.scrollTop; // Memoization reset\n\n      if (this._lastRenderedCellCount !== cellCount || this._lastRenderedCellLayoutManager !== cellLayoutManager || this._calculateSizeAndPositionDataOnNextUpdate) {\n        this._lastRenderedCellCount = cellCount;\n        this._lastRenderedCellLayoutManager = cellLayoutManager;\n        this._calculateSizeAndPositionDataOnNextUpdate = false;\n        cellLayoutManager.calculateSizeAndPositionData();\n      }\n\n      var _cellLayoutManager$ge3 = cellLayoutManager.getTotalSize(),\n          totalHeight = _cellLayoutManager$ge3.height,\n          totalWidth = _cellLayoutManager$ge3.width; // Safely expand the rendered area by the specified overscan amount\n\n\n      var left = Math.max(0, scrollLeft - horizontalOverscanSize);\n      var top = Math.max(0, scrollTop - verticalOverscanSize);\n      var right = Math.min(totalWidth, scrollLeft + width + horizontalOverscanSize);\n      var bottom = Math.min(totalHeight, scrollTop + height + verticalOverscanSize);\n      var childrenToDisplay = height > 0 && width > 0 ? cellLayoutManager.cellRenderers({\n        height: bottom - top,\n        isScrolling: isScrolling,\n        width: right - left,\n        x: left,\n        y: top\n      }) : [];\n      var collectionStyle = {\n        boxSizing: 'border-box',\n        direction: 'ltr',\n        height: autoHeight ? 'auto' : height,\n        position: 'relative',\n        WebkitOverflowScrolling: 'touch',\n        width: width,\n        willChange: 'transform'\n      }; // Force browser to hide scrollbars when we know they aren't necessary.\n      // Otherwise once scrollbars appear they may not disappear again.\n      // For more info see issue #116\n\n      var verticalScrollBarSize = totalHeight > height ? this._scrollbarSize : 0;\n      var horizontalScrollBarSize = totalWidth > width ? this._scrollbarSize : 0; // Also explicitly init styles to 'auto' if scrollbars are required.\n      // This works around an obscure edge case where external CSS styles have not yet been loaded,\n      // But an initial scroll index of offset is set as an external prop.\n      // Without this style, Grid would render the correct range of cells but would NOT update its internal offset.\n      // This was originally reported via clauderic/react-infinite-calendar/issues/23\n\n      collectionStyle.overflowX = totalWidth + verticalScrollBarSize <= width ? 'hidden' : 'auto';\n      collectionStyle.overflowY = totalHeight + horizontalScrollBarSize <= height ? 'hidden' : 'auto';\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Collection', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: \"grid\",\n        style: _objectSpread({}, collectionStyle, {}, style),\n        tabIndex: 0\n      }, cellCount > 0 && React.createElement(\"div\", {\n        className: \"ReactVirtualized__Collection__innerScrollContainer\",\n        style: {\n          height: totalHeight,\n          maxHeight: totalHeight,\n          maxWidth: totalWidth,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          width: totalWidth\n        }\n      }, childrenToDisplay), cellCount === 0 && noContentRenderer());\n    }\n    /* ---------------------------- Helper methods ---------------------------- */\n\n    /**\n     * Sets an :isScrolling flag for a small window of time.\n     * This flag is used to disable pointer events on the scrollable portion of the Collection.\n     * This prevents jerky/stuttery mouse-wheel scrolling.\n     */\n\n  }, {\n    key: \"_enablePointerEventsAfterDelay\",\n    value: function _enablePointerEventsAfterDelay() {\n      var _this2 = this;\n\n      if (this._disablePointerEventsTimeoutId) {\n        clearTimeout(this._disablePointerEventsTimeoutId);\n      }\n\n      this._disablePointerEventsTimeoutId = setTimeout(function () {\n        var isScrollingChange = _this2.props.isScrollingChange;\n        isScrollingChange(false);\n        _this2._disablePointerEventsTimeoutId = null;\n\n        _this2.setState({\n          isScrolling: false\n        });\n      }, IS_SCROLLING_TIMEOUT);\n    }\n  }, {\n    key: \"_invokeOnScrollMemoizer\",\n    value: function _invokeOnScrollMemoizer(_ref) {\n      var _this3 = this;\n\n      var scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          totalHeight = _ref.totalHeight,\n          totalWidth = _ref.totalWidth;\n\n      this._onScrollMemoizer({\n        callback: function callback(_ref2) {\n          var scrollLeft = _ref2.scrollLeft,\n              scrollTop = _ref2.scrollTop;\n          var _this3$props = _this3.props,\n              height = _this3$props.height,\n              onScroll = _this3$props.onScroll,\n              width = _this3$props.width;\n          onScroll({\n            clientHeight: height,\n            clientWidth: width,\n            scrollHeight: totalHeight,\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            scrollWidth: totalWidth\n          });\n        },\n        indices: {\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        }\n      });\n    }\n  }, {\n    key: \"_setScrollPosition\",\n    value: function _setScrollPosition(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n          scrollTop = _ref3.scrollTop;\n      var newState = {\n        scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n      };\n\n      if (scrollLeft >= 0) {\n        newState.scrollLeft = scrollLeft;\n      }\n\n      if (scrollTop >= 0) {\n        newState.scrollTop = scrollTop;\n      }\n\n      if (scrollLeft >= 0 && scrollLeft !== this.state.scrollLeft || scrollTop >= 0 && scrollTop !== this.state.scrollTop) {\n        this.setState(newState);\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.cellCount === 0 && (prevState.scrollLeft !== 0 || prevState.scrollTop !== 0)) {\n        return {\n          scrollLeft: 0,\n          scrollTop: 0,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      } else if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null ? nextProps.scrollTop : prevState.scrollTop,\n          scrollPositionChangeReason: SCROLL_POSITION_CHANGE_REASONS.REQUESTED\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return CollectionView;\n}(React.PureComponent);\n\n_defineProperty(CollectionView, \"defaultProps\", {\n  'aria-label': 'grid',\n  horizontalOverscanSize: 0,\n  noContentRenderer: function noContentRenderer() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  onSectionRendered: function onSectionRendered() {\n    return null;\n  },\n  scrollToAlignment: 'auto',\n  scrollToCell: -1,\n  style: {},\n  verticalOverscanSize: 0\n});\n\nCollectionView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /**\n   * Number of cells in collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Calculates cell sizes and positions and manages rendering the appropriate cells given a specified window.\n   */\n  cellLayoutManager: PropTypes.object.isRequired,\n\n  /**\n   * Optional custom CSS class name to attach to root Collection element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Height of Collection; this property determines the number of visible (vs virtualized) rows.\n   */\n  height: PropTypes.number.isRequired,\n\n  /**\n   * Optional custom id to attach to root Collection element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Enables the `Collection` to horiontally \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  horizontalOverscanSize: PropTypes.number.isRequired,\n  isScrollingChange: PropTypes.func,\n\n  /**\n   * Optional renderer to be used in place of rows when either :rowCount or :cellCount is 0.\n   */\n  noContentRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, clientWidth, scrollHeight, scrollLeft, scrollTop, scrollWidth }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked with information about the section of the Collection that was just rendered.\n   * This callback is passed a named :indices parameter which is an Array of the most recently rendered section indices.\n   */\n  onSectionRendered: PropTypes.func.isRequired,\n\n  /**\n   * Horizontal offset.\n   */\n  scrollLeft: PropTypes.number,\n\n  /**\n   * Controls scroll-to-cell behavior of the Grid.\n   * The default (\"auto\") scrolls the least amount possible to ensure that the specified cell is fully visible.\n   * Use \"start\" to align cells to the top/left of the Grid and \"end\" to align bottom/right.\n   */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /**\n   * Cell index to ensure visible (by forcefully scrolling if necessary).\n   */\n  scrollToCell: PropTypes.number.isRequired,\n\n  /**\n   * Vertical offset.\n   */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Optional custom inline style to attach to root Collection element.\n   */\n  style: PropTypes.object,\n\n  /**\n   * Enables the `Collection` to vertically \"overscan\" its content similar to how `Grid` does.\n   * This can reduce flicker around the edges when a user scrolls quickly.\n   */\n  verticalOverscanSize: PropTypes.number.isRequired,\n\n  /**\n   * Width of Collection; this property determines the number of visible (vs virtualized) columns.\n   */\n  width: PropTypes.number.isRequired\n} : {};\npolyfill(CollectionView);\nexport default CollectionView;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * A section of the Window.\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * Sections have a fixed size and contain 0 to many cells (tracked by their indices).\n */\nvar Section =\n/*#__PURE__*/\nfunction () {\n  function Section(_ref) {\n    var height = _ref.height,\n        width = _ref.width,\n        x = _ref.x,\n        y = _ref.y;\n\n    _classCallCheck(this, Section);\n\n    this.height = height;\n    this.width = width;\n    this.x = x;\n    this.y = y;\n    this._indexMap = {};\n    this._indices = [];\n  }\n  /** Add a cell to this section. */\n\n\n  _createClass(Section, [{\n    key: \"addCellIndex\",\n    value: function addCellIndex(_ref2) {\n      var index = _ref2.index;\n\n      if (!this._indexMap[index]) {\n        this._indexMap[index] = true;\n\n        this._indices.push(index);\n      }\n    }\n    /** Get all cell indices that have been added to this section. */\n\n  }, {\n    key: \"getCellIndices\",\n    value: function getCellIndices() {\n      return this._indices;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.x, \",\").concat(this.y, \" \").concat(this.width, \"x\").concat(this.height);\n    }\n  }]);\n\n  return Section;\n}();\n\nexport { Section as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\n/**\n * Window Sections are used to group nearby cells.\n * This enables us to more quickly determine which cells to display in a given region of the Window.\n * \n */\nimport Section from './Section';\nvar SECTION_SIZE = 100;\n\n/**\n * Contains 0 to many Sections.\n * Grows (and adds Sections) dynamically as cells are registered.\n * Automatically adds cells to the appropriate Section(s).\n */\nvar SectionManager =\n/*#__PURE__*/\nfunction () {\n  function SectionManager() {\n    var sectionSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SECTION_SIZE;\n\n    _classCallCheck(this, SectionManager);\n\n    this._sectionSize = sectionSize;\n    this._cellMetadata = [];\n    this._sections = {};\n  }\n  /**\n   * Gets all cell indices contained in the specified region.\n   * A region may encompass 1 or more Sections.\n   */\n\n\n  _createClass(SectionManager, [{\n    key: \"getCellIndices\",\n    value: function getCellIndices(_ref) {\n      var height = _ref.height,\n          width = _ref.width,\n          x = _ref.x,\n          y = _ref.y;\n      var indices = {};\n      this.getSections({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      }).forEach(function (section) {\n        return section.getCellIndices().forEach(function (index) {\n          indices[index] = index;\n        });\n      }); // Object keys are strings; this function returns numbers\n\n      return Object.keys(indices).map(function (index) {\n        return indices[index];\n      });\n    }\n    /** Get size and position information for the cell specified. */\n\n  }, {\n    key: \"getCellMetadata\",\n    value: function getCellMetadata(_ref2) {\n      var index = _ref2.index;\n      return this._cellMetadata[index];\n    }\n    /** Get all Sections overlapping the specified region. */\n\n  }, {\n    key: \"getSections\",\n    value: function getSections(_ref3) {\n      var height = _ref3.height,\n          width = _ref3.width,\n          x = _ref3.x,\n          y = _ref3.y;\n      var sectionXStart = Math.floor(x / this._sectionSize);\n      var sectionXStop = Math.floor((x + width - 1) / this._sectionSize);\n      var sectionYStart = Math.floor(y / this._sectionSize);\n      var sectionYStop = Math.floor((y + height - 1) / this._sectionSize);\n      var sections = [];\n\n      for (var sectionX = sectionXStart; sectionX <= sectionXStop; sectionX++) {\n        for (var sectionY = sectionYStart; sectionY <= sectionYStop; sectionY++) {\n          var key = \"\".concat(sectionX, \".\").concat(sectionY);\n\n          if (!this._sections[key]) {\n            this._sections[key] = new Section({\n              height: this._sectionSize,\n              width: this._sectionSize,\n              x: sectionX * this._sectionSize,\n              y: sectionY * this._sectionSize\n            });\n          }\n\n          sections.push(this._sections[key]);\n        }\n      }\n\n      return sections;\n    }\n    /** Total number of Sections based on the currently registered cells. */\n\n  }, {\n    key: \"getTotalSectionCount\",\n    value: function getTotalSectionCount() {\n      return Object.keys(this._sections).length;\n    }\n    /** Intended for debugger/test purposes only */\n\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var _this = this;\n\n      return Object.keys(this._sections).map(function (index) {\n        return _this._sections[index].toString();\n      });\n    }\n    /** Adds a cell to the appropriate Sections and registers it metadata for later retrievable. */\n\n  }, {\n    key: \"registerCell\",\n    value: function registerCell(_ref4) {\n      var cellMetadatum = _ref4.cellMetadatum,\n          index = _ref4.index;\n      this._cellMetadata[index] = cellMetadatum;\n      this.getSections(cellMetadatum).forEach(function (section) {\n        return section.addCellIndex({\n          index: index\n        });\n      });\n    }\n  }]);\n\n  return SectionManager;\n}();\n\nexport { SectionManager as default };\nimport { bpfrpt_proptype_Index } from \"./types\";\nimport { bpfrpt_proptype_SizeAndPositionInfo } from \"./types\";","/**\n * Determines a new offset that ensures a certain cell is visible, given the current offset.\n * If the cell is already visible then the current offset will be returned.\n * If the current offset is too great or small, it will be adjusted just enough to ensure the specified index is visible.\n *\n * @param align Desired alignment within container; one of \"auto\" (default), \"start\", or \"end\"\n * @param cellOffset Offset (x or y) position for cell\n * @param cellSize Size (width or height) of cell\n * @param containerSize Total size (width or height) of the container\n * @param currentOffset Container's current (x or y) offset\n * @return Offset to use to ensure the specified cell is visible\n */\nexport default function getUpdatedOffsetForIndex(_ref) {\n  var _ref$align = _ref.align,\n      align = _ref$align === void 0 ? 'auto' : _ref$align,\n      cellOffset = _ref.cellOffset,\n      cellSize = _ref.cellSize,\n      containerSize = _ref.containerSize,\n      currentOffset = _ref.currentOffset;\n  var maxOffset = cellOffset;\n  var minOffset = maxOffset - containerSize + cellSize;\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n\n    case 'end':\n      return minOffset;\n\n    case 'center':\n      return maxOffset - (containerSize - cellSize) / 2;\n\n    default:\n      return Math.max(minOffset, Math.min(maxOffset, currentOffset));\n  }\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport CollectionView from './CollectionView';\nimport _calculateSizeAndPositionData from './utils/calculateSizeAndPositionData';\nimport getUpdatedOffsetForIndex from '../utils/getUpdatedOffsetForIndex';\n\n/**\n * Renders scattered or non-linear data.\n * Unlike Grid, which renders checkerboard data, Collection can render arbitrarily positioned- even overlapping- data.\n */\nvar Collection =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Collection, _React$PureComponent);\n\n  function Collection(props, context) {\n    var _this;\n\n    _classCallCheck(this, Collection);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Collection).call(this, props, context));\n    _this._cellMetadata = [];\n    _this._lastRenderedCellIndices = []; // Cell cache during scroll (for performance)\n\n    _this._cellCache = [];\n    _this._isScrollingChange = _this._isScrollingChange.bind(_assertThisInitialized(_this));\n    _this._setCollectionViewRef = _this._setCollectionViewRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Collection, [{\n    key: \"forceUpdate\",\n    value: function forceUpdate() {\n      if (this._collectionView !== undefined) {\n        this._collectionView.forceUpdate();\n      }\n    }\n    /** See Collection#recomputeCellSizesAndPositions */\n\n  }, {\n    key: \"recomputeCellSizesAndPositions\",\n    value: function recomputeCellSizesAndPositions() {\n      this._cellCache = [];\n\n      this._collectionView.recomputeCellSizesAndPositions();\n    }\n    /** React lifecycle methods */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var props = _extends({}, this.props);\n\n      return React.createElement(CollectionView, _extends({\n        cellLayoutManager: this,\n        isScrollingChange: this._isScrollingChange,\n        ref: this._setCollectionViewRef\n      }, props));\n    }\n    /** CellLayoutManager interface */\n\n  }, {\n    key: \"calculateSizeAndPositionData\",\n    value: function calculateSizeAndPositionData() {\n      var _this$props = this.props,\n          cellCount = _this$props.cellCount,\n          cellSizeAndPositionGetter = _this$props.cellSizeAndPositionGetter,\n          sectionSize = _this$props.sectionSize;\n\n      var data = _calculateSizeAndPositionData({\n        cellCount: cellCount,\n        cellSizeAndPositionGetter: cellSizeAndPositionGetter,\n        sectionSize: sectionSize\n      });\n\n      this._cellMetadata = data.cellMetadata;\n      this._sectionManager = data.sectionManager;\n      this._height = data.height;\n      this._width = data.width;\n    }\n    /**\n     * Returns the most recently rendered set of cell indices.\n     */\n\n  }, {\n    key: \"getLastRenderedIndices\",\n    value: function getLastRenderedIndices() {\n      return this._lastRenderedCellIndices;\n    }\n    /**\n     * Calculates the minimum amount of change from the current scroll position to ensure the specified cell is (fully) visible.\n     */\n\n  }, {\n    key: \"getScrollPositionForCell\",\n    value: function getScrollPositionForCell(_ref) {\n      var align = _ref.align,\n          cellIndex = _ref.cellIndex,\n          height = _ref.height,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          width = _ref.width;\n      var cellCount = this.props.cellCount;\n\n      if (cellIndex >= 0 && cellIndex < cellCount) {\n        var cellMetadata = this._cellMetadata[cellIndex];\n        scrollLeft = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.x,\n          cellSize: cellMetadata.width,\n          containerSize: width,\n          currentOffset: scrollLeft,\n          targetIndex: cellIndex\n        });\n        scrollTop = getUpdatedOffsetForIndex({\n          align: align,\n          cellOffset: cellMetadata.y,\n          cellSize: cellMetadata.height,\n          containerSize: height,\n          currentOffset: scrollTop,\n          targetIndex: cellIndex\n        });\n      }\n\n      return {\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      };\n    }\n  }, {\n    key: \"getTotalSize\",\n    value: function getTotalSize() {\n      return {\n        height: this._height,\n        width: this._width\n      };\n    }\n  }, {\n    key: \"cellRenderers\",\n    value: function cellRenderers(_ref2) {\n      var _this2 = this;\n\n      var height = _ref2.height,\n          isScrolling = _ref2.isScrolling,\n          width = _ref2.width,\n          x = _ref2.x,\n          y = _ref2.y;\n      var _this$props2 = this.props,\n          cellGroupRenderer = _this$props2.cellGroupRenderer,\n          cellRenderer = _this$props2.cellRenderer; // Store for later calls to getLastRenderedIndices()\n\n      this._lastRenderedCellIndices = this._sectionManager.getCellIndices({\n        height: height,\n        width: width,\n        x: x,\n        y: y\n      });\n      return cellGroupRenderer({\n        cellCache: this._cellCache,\n        cellRenderer: cellRenderer,\n        cellSizeAndPositionGetter: function cellSizeAndPositionGetter(_ref3) {\n          var index = _ref3.index;\n          return _this2._sectionManager.getCellMetadata({\n            index: index\n          });\n        },\n        indices: this._lastRenderedCellIndices,\n        isScrolling: isScrolling\n      });\n    }\n  }, {\n    key: \"_isScrollingChange\",\n    value: function _isScrollingChange(isScrolling) {\n      if (!isScrolling) {\n        this._cellCache = [];\n      }\n    }\n  }, {\n    key: \"_setCollectionViewRef\",\n    value: function _setCollectionViewRef(ref) {\n      this._collectionView = ref;\n    }\n  }]);\n\n  return Collection;\n}(React.PureComponent);\n\n_defineProperty(Collection, \"defaultProps\", {\n  'aria-label': 'grid',\n  cellGroupRenderer: defaultCellGroupRenderer\n});\n\nexport { Collection as default };\nCollection.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Number of cells in Collection.\n   */\n  cellCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a group of cells given their indices.\n   * Should implement the following interface: ({\n   *   cellSizeAndPositionGetter:Function,\n   *   indices: Array<number>,\n   *   cellRenderer: Function\n   * }): Array<PropTypes.node>\n   */\n  cellGroupRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Responsible for rendering a cell given an row and column index.\n   * Should implement the following interface: ({ index: number, key: string, style: object }): PropTypes.element\n   */\n  cellRenderer: PropTypes.func.isRequired,\n\n  /**\n   * Callback responsible for returning size and offset/position information for a given cell (index).\n   * ({ index: number }): { height: number, width: number, x: number, y: number }\n   */\n  cellSizeAndPositionGetter: PropTypes.func.isRequired,\n\n  /**\n   * Optionally override the size of the sections a Collection's cells are split into.\n   */\n  sectionSize: PropTypes.number\n} : {};\n\nfunction defaultCellGroupRenderer(_ref4) {\n  var cellCache = _ref4.cellCache,\n      cellRenderer = _ref4.cellRenderer,\n      cellSizeAndPositionGetter = _ref4.cellSizeAndPositionGetter,\n      indices = _ref4.indices,\n      isScrolling = _ref4.isScrolling;\n  return indices.map(function (index) {\n    var cellMetadata = cellSizeAndPositionGetter({\n      index: index\n    });\n    var cellRendererProps = {\n      index: index,\n      isScrolling: isScrolling,\n      key: index,\n      style: {\n        height: cellMetadata.height,\n        left: cellMetadata.x,\n        position: 'absolute',\n        top: cellMetadata.y,\n        width: cellMetadata.width\n      }\n    }; // Avoid re-creating cells while scrolling.\n    // This can lead to the same cell being created many times and can cause performance issues for \"heavy\" cells.\n    // If a scroll is in progress- cache and reuse cells.\n    // This cache will be thrown away once scrolling complets.\n\n    if (isScrolling) {\n      if (!(index in cellCache)) {\n        cellCache[index] = cellRenderer(cellRendererProps);\n      }\n\n      return cellCache[index];\n    } else {\n      return cellRenderer(cellRendererProps);\n    }\n  }).filter(function (renderedCell) {\n    return !!renderedCell;\n  });\n}\n\nimport { bpfrpt_proptype_ScrollPosition } from \"./types\";\nimport { bpfrpt_proptype_SizeInfo } from \"./types\";","import SectionManager from '../SectionManager';\nexport default function calculateSizeAndPositionData(_ref) {\n  var cellCount = _ref.cellCount,\n      cellSizeAndPositionGetter = _ref.cellSizeAndPositionGetter,\n      sectionSize = _ref.sectionSize;\n  var cellMetadata = [];\n  var sectionManager = new SectionManager(sectionSize);\n  var height = 0;\n  var width = 0;\n\n  for (var index = 0; index < cellCount; index++) {\n    var cellMetadatum = cellSizeAndPositionGetter({\n      index: index\n    });\n\n    if (cellMetadatum.height == null || isNaN(cellMetadatum.height) || cellMetadatum.width == null || isNaN(cellMetadatum.width) || cellMetadatum.x == null || isNaN(cellMetadatum.x) || cellMetadatum.y == null || isNaN(cellMetadatum.y)) {\n      throw Error(\"Invalid metadata returned for cell \".concat(index, \":\\n        x:\").concat(cellMetadatum.x, \", y:\").concat(cellMetadatum.y, \", width:\").concat(cellMetadatum.width, \", height:\").concat(cellMetadatum.height));\n    }\n\n    height = Math.max(height, cellMetadatum.y + cellMetadatum.height);\n    width = Math.max(width, cellMetadatum.x + cellMetadatum.width);\n    cellMetadata[index] = cellMetadatum;\n    sectionManager.registerCell({\n      cellMetadatum: cellMetadatum,\n      index: index\n    });\n  }\n\n  return {\n    cellMetadata: cellMetadata,\n    height: height,\n    sectionManager: sectionManager,\n    width: width\n  };\n}","import Collection from './Collection';\nexport default Collection;\nexport { Collection };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * High-order component that auto-calculates column-widths for `Grid` cells.\n */\n\nvar ColumnSizer =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ColumnSizer, _React$PureComponent);\n\n  function ColumnSizer(props, context) {\n    var _this;\n\n    _classCallCheck(this, ColumnSizer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ColumnSizer).call(this, props, context));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ColumnSizer, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n          columnMaxWidth = _this$props.columnMaxWidth,\n          columnMinWidth = _this$props.columnMinWidth,\n          columnCount = _this$props.columnCount,\n          width = _this$props.width;\n\n      if (columnMaxWidth !== prevProps.columnMaxWidth || columnMinWidth !== prevProps.columnMinWidth || columnCount !== prevProps.columnCount || width !== prevProps.width) {\n        if (this._registeredChild) {\n          this._registeredChild.recomputeGridSize();\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          columnMaxWidth = _this$props2.columnMaxWidth,\n          columnMinWidth = _this$props2.columnMinWidth,\n          columnCount = _this$props2.columnCount,\n          width = _this$props2.width;\n      var safeColumnMinWidth = columnMinWidth || 1;\n      var safeColumnMaxWidth = columnMaxWidth ? Math.min(columnMaxWidth, width) : width;\n      var columnWidth = width / columnCount;\n      columnWidth = Math.max(safeColumnMinWidth, columnWidth);\n      columnWidth = Math.min(safeColumnMaxWidth, columnWidth);\n      columnWidth = Math.floor(columnWidth);\n      var adjustedWidth = Math.min(width, columnWidth * columnCount);\n      return children({\n        adjustedWidth: adjustedWidth,\n        columnWidth: columnWidth,\n        getColumnWidth: function getColumnWidth() {\n          return columnWidth;\n        },\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(child) {\n      if (child && typeof child.recomputeGridSize !== 'function') {\n        throw Error('Unexpected child type registered; only Grid/MultiGrid children are supported.');\n      }\n\n      this._registeredChild = child;\n\n      if (this._registeredChild) {\n        this._registeredChild.recomputeGridSize();\n      }\n    }\n  }]);\n\n  return ColumnSizer;\n}(React.PureComponent);\n\nexport { ColumnSizer as default };\nColumnSizer.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized Grid.\n   * This function should implement the following signature:\n   * ({ adjustedWidth, getColumnWidth, registerChild }) => PropTypes.element\n   *\n   * The specified :getColumnWidth function should be passed to the Grid's :columnWidth property.\n   * The :registerChild should be passed to the Grid's :ref property.\n   * The :adjustedWidth property is optional; it reflects the lesser of the overall width or the width of all columns.\n   */\n  children: PropTypes.func.isRequired,\n\n  /** Optional maximum allowed column width */\n  columnMaxWidth: PropTypes.number,\n\n  /** Optional minimum allowed column width */\n  columnMinWidth: PropTypes.number,\n\n  /** Number of columns in Grid or Table child */\n  columnCount: PropTypes.number.isRequired,\n\n  /** Width of Grid or Table child */\n  width: PropTypes.number.isRequired\n} : {};","import ColumnSizer from './ColumnSizer';\nexport default ColumnSizer;\nexport { ColumnSizer };","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport createCallbackMemoizer from '../utils/createCallbackMemoizer';\n/**\n * Higher-order component that manages lazy-loading for \"infinite\" data.\n * This component decorates a virtual component and just-in-time prefetches rows as a user scrolls.\n * It is intended as a convenience component; fork it if you'd like finer-grained control over data-loading.\n */\n\nvar InfiniteLoader =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(InfiniteLoader, _React$PureComponent);\n\n  function InfiniteLoader(props, context) {\n    var _this;\n\n    _classCallCheck(this, InfiniteLoader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InfiniteLoader).call(this, props, context));\n    _this._loadMoreRowsMemoizer = createCallbackMemoizer();\n    _this._onRowsRendered = _this._onRowsRendered.bind(_assertThisInitialized(_this));\n    _this._registerChild = _this._registerChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(InfiniteLoader, [{\n    key: \"resetLoadMoreRowsCache\",\n    value: function resetLoadMoreRowsCache(autoReload) {\n      this._loadMoreRowsMemoizer = createCallbackMemoizer();\n\n      if (autoReload) {\n        this._doStuff(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onRowsRendered: this._onRowsRendered,\n        registerChild: this._registerChild\n      });\n    }\n  }, {\n    key: \"_loadUnloadedRanges\",\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      var loadMoreRows = this.props.loadMoreRows;\n      unloadedRanges.forEach(function (unloadedRange) {\n        var promise = loadMoreRows(unloadedRange);\n\n        if (promise) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: unloadedRange.startIndex,\n              stopIndex: unloadedRange.stopIndex\n            })) {\n              if (_this2._registeredChild) {\n                forceUpdateReactVirtualizedComponent(_this2._registeredChild, _this2._lastRenderedStartIndex);\n              }\n            }\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onRowsRendered\",\n    value: function _onRowsRendered(_ref) {\n      var startIndex = _ref.startIndex,\n          stopIndex = _ref.stopIndex;\n      this._lastRenderedStartIndex = startIndex;\n      this._lastRenderedStopIndex = stopIndex;\n\n      this._doStuff(startIndex, stopIndex);\n    }\n  }, {\n    key: \"_doStuff\",\n    value: function _doStuff(startIndex, stopIndex) {\n      var _ref2,\n          _this3 = this;\n\n      var _this$props = this.props,\n          isRowLoaded = _this$props.isRowLoaded,\n          minimumBatchSize = _this$props.minimumBatchSize,\n          rowCount = _this$props.rowCount,\n          threshold = _this$props.threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isRowLoaded: isRowLoaded,\n        minimumBatchSize: minimumBatchSize,\n        rowCount: rowCount,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(rowCount - 1, stopIndex + threshold)\n      }); // For memoize comparison\n\n      var squashedUnloadedRanges = (_ref2 = []).concat.apply(_ref2, _toConsumableArray(unloadedRanges.map(function (_ref3) {\n        var startIndex = _ref3.startIndex,\n            stopIndex = _ref3.stopIndex;\n        return [startIndex, stopIndex];\n      })));\n\n      this._loadMoreRowsMemoizer({\n        callback: function callback() {\n          _this3._loadUnloadedRanges(unloadedRanges);\n        },\n        indices: {\n          squashedUnloadedRanges: squashedUnloadedRanges\n        }\n      });\n    }\n  }, {\n    key: \"_registerChild\",\n    value: function _registerChild(registeredChild) {\n      this._registeredChild = registeredChild;\n    }\n  }]);\n\n  return InfiniteLoader;\n}(React.PureComponent);\n/**\n * Determines if the specified start/stop range is visible based on the most recently rendered range.\n */\n\n\n_defineProperty(InfiniteLoader, \"defaultProps\", {\n  minimumBatchSize: 10,\n  rowCount: 0,\n  threshold: 15\n});\n\nexport { InfiniteLoader as default };\nInfiniteLoader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering a virtualized component.\n   * This function should implement the following signature:\n   * ({ onRowsRendered, registerChild }) => PropTypes.element\n   *\n   * The specified :onRowsRendered function should be passed through to the child's :onRowsRendered property.\n   * The :registerChild callback should be set as the virtualized component's :ref.\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Function responsible for tracking the loaded state of each row.\n   * It should implement the following signature: ({ index: number }): boolean\n   */\n  isRowLoaded: PropTypes.func.isRequired,\n\n  /**\n   * Callback to be invoked when more rows must be loaded.\n   * It should implement the following signature: ({ startIndex, stopIndex }): Promise\n   * The returned Promise should be resolved once row data has finished loading.\n   * It will be used to determine when to refresh the list with the newly-loaded data.\n   * This callback may be called multiple times in reaction to a single scroll event.\n   */\n  loadMoreRows: PropTypes.func.isRequired,\n\n  /**\n   * Minimum number of rows to be loaded at a time.\n   * This property can be used to batch requests to reduce HTTP requests.\n   */\n  minimumBatchSize: PropTypes.number.isRequired,\n\n  /**\n   * Number of rows in list; can be arbitrary high number if actual number is unknown.\n   */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Threshold at which to pre-fetch data.\n   * A threshold X means that data will start loading when a user scrolls within X rows.\n   * This value defaults to 15.\n   */\n  threshold: PropTypes.number.isRequired\n} : {};\nexport function isRangeVisible(_ref4) {\n  var lastRenderedStartIndex = _ref4.lastRenderedStartIndex,\n      lastRenderedStopIndex = _ref4.lastRenderedStopIndex,\n      startIndex = _ref4.startIndex,\n      stopIndex = _ref4.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\n/**\n * Returns all of the ranges within a larger range that contain unloaded rows.\n */\n\nexport function scanForUnloadedRanges(_ref5) {\n  var isRowLoaded = _ref5.isRowLoaded,\n      minimumBatchSize = _ref5.minimumBatchSize,\n      rowCount = _ref5.rowCount,\n      startIndex = _ref5.startIndex,\n      stopIndex = _ref5.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n\n  for (var index = startIndex; index <= stopIndex; index++) {\n    var loaded = isRowLoaded({\n      index: index\n    });\n\n    if (!loaded) {\n      rangeStopIndex = index;\n\n      if (rangeStartIndex === null) {\n        rangeStartIndex = index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push({\n        startIndex: rangeStartIndex,\n        stopIndex: rangeStopIndex\n      });\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  } // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n\n\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), rowCount - 1);\n\n    for (var _index = rangeStopIndex + 1; _index <= potentialStopIndex; _index++) {\n      if (!isRowLoaded({\n        index: _index\n      })) {\n        rangeStopIndex = _index;\n      } else {\n        break;\n      }\n    }\n\n    unloadedRanges.push({\n      startIndex: rangeStartIndex,\n      stopIndex: rangeStopIndex\n    });\n  } // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n\n\n  if (unloadedRanges.length) {\n    var firstUnloadedRange = unloadedRanges[0];\n\n    while (firstUnloadedRange.stopIndex - firstUnloadedRange.startIndex + 1 < minimumBatchSize && firstUnloadedRange.startIndex > 0) {\n      var _index2 = firstUnloadedRange.startIndex - 1;\n\n      if (!isRowLoaded({\n        index: _index2\n      })) {\n        firstUnloadedRange.startIndex = _index2;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return unloadedRanges;\n}\n/**\n * Since RV components use shallowCompare we need to force a render (even though props haven't changed).\n * However InfiniteLoader may wrap a Grid or it may wrap a Table or List.\n * In the first case the built-in React forceUpdate() method is sufficient to force a re-render,\n * But in the latter cases we need to use the RV-specific forceUpdateGrid() method.\n * Else the inner Grid will not be re-rendered and visuals may be stale.\n *\n * Additionally, while a Grid is scrolling the cells can be cached,\n * So it's important to invalidate that cache by recalculating sizes\n * before forcing a rerender.\n */\n\nexport function forceUpdateReactVirtualizedComponent(component) {\n  var currentIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var recomputeSize = typeof component.recomputeGridSize === 'function' ? component.recomputeGridSize : component.recomputeRowHeights;\n\n  if (recomputeSize) {\n    recomputeSize.call(component, currentIndex);\n  } else {\n    component.forceUpdate();\n  }\n}","import InfiniteLoader from './InfiniteLoader';\nexport default InfiniteLoader;\nexport { InfiniteLoader };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport * as React from 'react';\nimport clsx from 'clsx';\n/**\n * It is inefficient to create and manage a large list of DOM elements within a scrolling container\n * if only a few of those elements are visible. The primary purpose of this component is to improve\n * performance by only rendering the DOM nodes that a user is able to see based on their current\n * scroll position.\n *\n * This component renders a virtualized list of elements with either fixed or dynamic heights.\n */\n\nvar List = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(List, _React$PureComponent);\n\n  function List() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, List);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(List)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"Grid\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRenderer\", function (_ref) {\n      var parent = _ref.parent,\n          rowIndex = _ref.rowIndex,\n          style = _ref.style,\n          isScrolling = _ref.isScrolling,\n          isVisible = _ref.isVisible,\n          key = _ref.key;\n      var rowRenderer = _this.props.rowRenderer; // TRICKY The style object is sometimes cached by Grid.\n      // This prevents new style objects from bypassing shallowCompare().\n      // However as of React 16, style props are auto-frozen (at least in dev mode)\n      // Check to make sure we can still modify the style before proceeding.\n      // https://github.com/facebook/react/commit/977357765b44af8ff0cfea327866861073095c12#commitcomment-20648713\n\n      var widthDescriptor = Object.getOwnPropertyDescriptor(style, 'width');\n\n      if (widthDescriptor && widthDescriptor.writable) {\n        // By default, List cells should be 100% width.\n        // This prevents them from flowing under a scrollbar (if present).\n        style.width = '100%';\n      }\n\n      return rowRenderer({\n        index: rowIndex,\n        style: style,\n        isScrolling: isScrolling,\n        isVisible: isVisible,\n        key: key,\n        parent: parent\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setRef\", function (ref) {\n      _this.Grid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (_ref2) {\n      var clientHeight = _ref2.clientHeight,\n          scrollHeight = _ref2.scrollHeight,\n          scrollTop = _ref2.scrollTop;\n      var onScroll = _this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onSectionRendered\", function (_ref3) {\n      var rowOverscanStartIndex = _ref3.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref3.rowOverscanStopIndex,\n          rowStartIndex = _ref3.rowStartIndex,\n          rowStopIndex = _ref3.rowStopIndex;\n      var onRowsRendered = _this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref4) {\n      var alignment = _ref4.alignment,\n          index = _ref4.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index,\n          columnIndex: 0\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref5) {\n      var columnIndex = _ref5.columnIndex,\n          rowIndex = _ref5.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref6$columnIndex = _ref6.columnIndex,\n          columnIndex = _ref6$columnIndex === void 0 ? 0 : _ref6$columnIndex,\n          _ref6$rowIndex = _ref6.rowIndex,\n          rowIndex = _ref6$rowIndex === void 0 ? 0 : _ref6$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index,\n          columnIndex: 0\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          scrollToIndex = _this$props.scrollToIndex,\n          width = _this$props.width;\n      var classNames = clsx('ReactVirtualized__List', className);\n      return React.createElement(Grid, _extends({}, this.props, {\n        autoContainerWidth: true,\n        cellRenderer: this._cellRenderer,\n        className: classNames,\n        columnWidth: width,\n        columnCount: 1,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        scrollToRow: scrollToIndex\n      }));\n    }\n  }]);\n\n  return List;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"aria-label\": PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  \"autoHeight\": PropTypes.bool.isRequired,\n\n  /** Optional CSS class name */\n  \"className\": PropTypes.string,\n\n  /**\n   * Used to estimate the total height of a List before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  \"estimatedRowSize\": PropTypes.number.isRequired,\n\n  /** Height constraint for list (determines how many actual rows are rendered) */\n  \"height\": PropTypes.number.isRequired,\n\n  /** Optional renderer to be used in place of rows when rowCount is 0 */\n  \"noRowsRenderer\": function noRowsRenderer() {\n    return (typeof bpfrpt_proptype_NoContentRenderer === \"function\" ? bpfrpt_proptype_NoContentRenderer.isRequired ? bpfrpt_proptype_NoContentRenderer.isRequired : bpfrpt_proptype_NoContentRenderer : PropTypes.shape(bpfrpt_proptype_NoContentRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Callback invoked with information about the slice of rows that were just rendered.  */\n  \"onRowsRendered\": PropTypes.func.isRequired,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  \"overscanIndicesGetter\": function overscanIndicesGetter() {\n    return (typeof bpfrpt_proptype_OverscanIndicesGetter === \"function\" ? bpfrpt_proptype_OverscanIndicesGetter.isRequired ? bpfrpt_proptype_OverscanIndicesGetter.isRequired : bpfrpt_proptype_OverscanIndicesGetter : PropTypes.shape(bpfrpt_proptype_OverscanIndicesGetter).isRequired).apply(this, arguments);\n  },\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  \"overscanRowCount\": PropTypes.number.isRequired,\n\n  /** Either a fixed row height (number) or a function that returns the height of a row given its index.  */\n  \"rowHeight\": function rowHeight() {\n    return (typeof bpfrpt_proptype_CellSize === \"function\" ? bpfrpt_proptype_CellSize.isRequired ? bpfrpt_proptype_CellSize.isRequired : bpfrpt_proptype_CellSize : PropTypes.shape(bpfrpt_proptype_CellSize).isRequired).apply(this, arguments);\n  },\n\n  /** Responsible for rendering a row given an index; ({ index: number }): node */\n  \"rowRenderer\": function rowRenderer() {\n    return (typeof bpfrpt_proptype_RowRenderer === \"function\" ? bpfrpt_proptype_RowRenderer.isRequired ? bpfrpt_proptype_RowRenderer.isRequired : bpfrpt_proptype_RowRenderer : PropTypes.shape(bpfrpt_proptype_RowRenderer).isRequired).apply(this, arguments);\n  },\n\n  /** Number of rows in list. */\n  \"rowCount\": PropTypes.number.isRequired,\n\n  /** See Grid#scrollToAlignment */\n  \"scrollToAlignment\": function scrollToAlignment() {\n    return (typeof bpfrpt_proptype_Alignment === \"function\" ? bpfrpt_proptype_Alignment.isRequired ? bpfrpt_proptype_Alignment.isRequired : bpfrpt_proptype_Alignment : PropTypes.shape(bpfrpt_proptype_Alignment).isRequired).apply(this, arguments);\n  },\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  \"scrollToIndex\": PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  \"scrollTop\": PropTypes.number,\n\n  /** Optional inline style */\n  \"style\": PropTypes.object.isRequired,\n\n  /** Tab index for focus */\n  \"tabIndex\": PropTypes.number,\n\n  /** Width of list */\n  \"width\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(List, \"defaultProps\", {\n  autoHeight: false,\n  estimatedRowSize: 30,\n  onScroll: function onScroll() {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {},\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { List as default };\nimport { bpfrpt_proptype_NoContentRenderer } from \"../Grid\";\nimport { bpfrpt_proptype_Alignment } from \"../Grid\";\nimport { bpfrpt_proptype_CellSize } from \"../Grid\";\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";\nimport { bpfrpt_proptype_OverscanIndicesGetter } from \"../Grid\";\nimport { bpfrpt_proptype_RenderedSection } from \"../Grid\";\nimport { bpfrpt_proptype_CellRendererParams } from \"../Grid\";\nimport { bpfrpt_proptype_Scroll as bpfrpt_proptype_GridScroll } from \"../Grid\";\nimport { bpfrpt_proptype_RowRenderer } from \"./types\";\nimport { bpfrpt_proptype_RenderedRows } from \"./types\";\nimport { bpfrpt_proptype_Scroll } from \"./types\";\nimport PropTypes from \"prop-types\";","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/binary-search-bounds\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nfunction _GEA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x >= y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GEP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) >= 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _GTA(a, l, h, y) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x > y) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _GTP(a, l, h, y, c) {\n  var i = h + 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) > 0) {\n      i = m;\n      h = m - 1;\n    } else {\n      l = m + 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchGT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _GTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _GTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LTA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x < y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LTP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) < 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLT(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LTP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LTA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _LEA(a, l, h, y) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x <= y) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction _LEP(a, l, h, y, c) {\n  var i = l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (c(x, y) <= 0) {\n      i = m;\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return i;\n}\n\nfunction dispatchBsearchLE(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _LEP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _LEA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nfunction _EQA(a, l, h, y) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n\n    if (x === y) {\n      return m;\n    } else if (x <= y) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction _EQP(a, l, h, y, c) {\n  l - 1;\n\n  while (l <= h) {\n    var m = l + h >>> 1,\n        x = a[m];\n    var p = c(x, y);\n\n    if (p === 0) {\n      return m;\n    } else if (p <= 0) {\n      l = m + 1;\n    } else {\n      h = m - 1;\n    }\n  }\n\n  return -1;\n}\n\nfunction dispatchBsearchEQ(a, y, c, l, h) {\n  if (typeof c === 'function') {\n    return _EQP(a, l === void 0 ? 0 : l | 0, h === void 0 ? a.length - 1 : h | 0, y, c);\n  } else {\n    return _EQA(a, c === void 0 ? 0 : c | 0, l === void 0 ? a.length - 1 : l | 0, y);\n  }\n}\n\nexport default {\n  ge: dispatchBsearchGE,\n  gt: dispatchBsearchGT,\n  lt: dispatchBsearchLT,\n  le: dispatchBsearchLE,\n  eq: dispatchBsearchEQ\n};","/**\n * Binary Search Bounds\n * https://github.com/mikolalysenko/interval-tree-1d\n * Mikola Lysenko\n *\n * Inlined because of Content Security Policy issue caused by the use of `new Function(...)` syntax in an upstream dependency.\n * Issue reported here: https://github.com/mikolalysenko/binary-search-bounds/issues/5\n **/\nimport bounds from './binarySearchBounds';\nvar NOT_FOUND = 0;\nvar SUCCESS = 1;\nvar EMPTY = 2;\n\nfunction IntervalTreeNode(mid, left, right, leftPoints, rightPoints) {\n  this.mid = mid;\n  this.left = left;\n  this.right = right;\n  this.leftPoints = leftPoints;\n  this.rightPoints = rightPoints;\n  this.count = (left ? left.count : 0) + (right ? right.count : 0) + leftPoints.length;\n}\n\nvar proto = IntervalTreeNode.prototype;\n\nfunction copy(a, b) {\n  a.mid = b.mid;\n  a.left = b.left;\n  a.right = b.right;\n  a.leftPoints = b.leftPoints;\n  a.rightPoints = b.rightPoints;\n  a.count = b.count;\n}\n\nfunction rebuild(node, intervals) {\n  var ntree = createIntervalTree(intervals);\n  node.mid = ntree.mid;\n  node.left = ntree.left;\n  node.right = ntree.right;\n  node.leftPoints = ntree.leftPoints;\n  node.rightPoints = ntree.rightPoints;\n  node.count = ntree.count;\n}\n\nfunction rebuildWithInterval(node, interval) {\n  var intervals = node.intervals([]);\n  intervals.push(interval);\n  rebuild(node, intervals);\n}\n\nfunction rebuildWithoutInterval(node, interval) {\n  var intervals = node.intervals([]);\n  var idx = intervals.indexOf(interval);\n\n  if (idx < 0) {\n    return NOT_FOUND;\n  }\n\n  intervals.splice(idx, 1);\n  rebuild(node, intervals);\n  return SUCCESS;\n}\n\nproto.intervals = function (result) {\n  result.push.apply(result, this.leftPoints);\n\n  if (this.left) {\n    this.left.intervals(result);\n  }\n\n  if (this.right) {\n    this.right.intervals(result);\n  }\n\n  return result;\n};\n\nproto.insert = function (interval) {\n  var weight = this.count - this.leftPoints.length;\n  this.count += 1;\n\n  if (interval[1] < this.mid) {\n    if (this.left) {\n      if (4 * (this.left.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.left.insert(interval);\n      }\n    } else {\n      this.left = createIntervalTree([interval]);\n    }\n  } else if (interval[0] > this.mid) {\n    if (this.right) {\n      if (4 * (this.right.count + 1) > 3 * (weight + 1)) {\n        rebuildWithInterval(this, interval);\n      } else {\n        this.right.insert(interval);\n      }\n    } else {\n      this.right = createIntervalTree([interval]);\n    }\n  } else {\n    var l = bounds.ge(this.leftPoints, interval, compareBegin);\n    var r = bounds.ge(this.rightPoints, interval, compareEnd);\n    this.leftPoints.splice(l, 0, interval);\n    this.rightPoints.splice(r, 0, interval);\n  }\n};\n\nproto.remove = function (interval) {\n  var weight = this.count - this.leftPoints;\n\n  if (interval[1] < this.mid) {\n    if (!this.left) {\n      return NOT_FOUND;\n    }\n\n    var rw = this.right ? this.right.count : 0;\n\n    if (4 * rw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.left.remove(interval);\n\n    if (r === EMPTY) {\n      this.left = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else if (interval[0] > this.mid) {\n    if (!this.right) {\n      return NOT_FOUND;\n    }\n\n    var lw = this.left ? this.left.count : 0;\n\n    if (4 * lw > 3 * (weight - 1)) {\n      return rebuildWithoutInterval(this, interval);\n    }\n\n    var r = this.right.remove(interval);\n\n    if (r === EMPTY) {\n      this.right = null;\n      this.count -= 1;\n      return SUCCESS;\n    } else if (r === SUCCESS) {\n      this.count -= 1;\n    }\n\n    return r;\n  } else {\n    if (this.count === 1) {\n      if (this.leftPoints[0] === interval) {\n        return EMPTY;\n      } else {\n        return NOT_FOUND;\n      }\n    }\n\n    if (this.leftPoints.length === 1 && this.leftPoints[0] === interval) {\n      if (this.left && this.right) {\n        var p = this;\n        var n = this.left;\n\n        while (n.right) {\n          p = n;\n          n = n.right;\n        }\n\n        if (p === this) {\n          n.right = this.right;\n        } else {\n          var l = this.left;\n          var r = this.right;\n          p.count -= n.count;\n          p.right = n.left;\n          n.left = l;\n          n.right = r;\n        }\n\n        copy(this, n);\n        this.count = (this.left ? this.left.count : 0) + (this.right ? this.right.count : 0) + this.leftPoints.length;\n      } else if (this.left) {\n        copy(this, this.left);\n      } else {\n        copy(this, this.right);\n      }\n\n      return SUCCESS;\n    }\n\n    for (var l = bounds.ge(this.leftPoints, interval, compareBegin); l < this.leftPoints.length; ++l) {\n      if (this.leftPoints[l][0] !== interval[0]) {\n        break;\n      }\n\n      if (this.leftPoints[l] === interval) {\n        this.count -= 1;\n        this.leftPoints.splice(l, 1);\n\n        for (var r = bounds.ge(this.rightPoints, interval, compareEnd); r < this.rightPoints.length; ++r) {\n          if (this.rightPoints[r][1] !== interval[1]) {\n            break;\n          } else if (this.rightPoints[r] === interval) {\n            this.rightPoints.splice(r, 1);\n            return SUCCESS;\n          }\n        }\n      }\n    }\n\n    return NOT_FOUND;\n  }\n};\n\nfunction reportLeftRange(arr, hi, cb) {\n  for (var i = 0; i < arr.length && arr[i][0] <= hi; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRightRange(arr, lo, cb) {\n  for (var i = arr.length - 1; i >= 0 && arr[i][1] >= lo; --i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nfunction reportRange(arr, cb) {\n  for (var i = 0; i < arr.length; ++i) {\n    var r = cb(arr[i]);\n\n    if (r) {\n      return r;\n    }\n  }\n}\n\nproto.queryPoint = function (x, cb) {\n  if (x < this.mid) {\n    if (this.left) {\n      var r = this.left.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportLeftRange(this.leftPoints, x, cb);\n  } else if (x > this.mid) {\n    if (this.right) {\n      var r = this.right.queryPoint(x, cb);\n\n      if (r) {\n        return r;\n      }\n    }\n\n    return reportRightRange(this.rightPoints, x, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nproto.queryInterval = function (lo, hi, cb) {\n  if (lo < this.mid && this.left) {\n    var r = this.left.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi > this.mid && this.right) {\n    var r = this.right.queryInterval(lo, hi, cb);\n\n    if (r) {\n      return r;\n    }\n  }\n\n  if (hi < this.mid) {\n    return reportLeftRange(this.leftPoints, hi, cb);\n  } else if (lo > this.mid) {\n    return reportRightRange(this.rightPoints, lo, cb);\n  } else {\n    return reportRange(this.leftPoints, cb);\n  }\n};\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\nfunction compareBegin(a, b) {\n  var d = a[0] - b[0];\n\n  if (d) {\n    return d;\n  }\n\n  return a[1] - b[1];\n}\n\nfunction compareEnd(a, b) {\n  var d = a[1] - b[1];\n\n  if (d) {\n    return d;\n  }\n\n  return a[0] - b[0];\n}\n\nfunction createIntervalTree(intervals) {\n  if (intervals.length === 0) {\n    return null;\n  }\n\n  var pts = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    pts.push(intervals[i][0], intervals[i][1]);\n  }\n\n  pts.sort(compareNumbers);\n  var mid = pts[pts.length >> 1];\n  var leftIntervals = [];\n  var rightIntervals = [];\n  var centerIntervals = [];\n\n  for (var i = 0; i < intervals.length; ++i) {\n    var s = intervals[i];\n\n    if (s[1] < mid) {\n      leftIntervals.push(s);\n    } else if (mid < s[0]) {\n      rightIntervals.push(s);\n    } else {\n      centerIntervals.push(s);\n    }\n  } //Split center intervals\n\n\n  var leftPoints = centerIntervals;\n  var rightPoints = centerIntervals.slice();\n  leftPoints.sort(compareBegin);\n  rightPoints.sort(compareEnd);\n  return new IntervalTreeNode(mid, createIntervalTree(leftIntervals), createIntervalTree(rightIntervals), leftPoints, rightPoints);\n} //User friendly wrapper that makes it possible to support empty trees\n\n\nfunction IntervalTree(root) {\n  this.root = root;\n}\n\nvar tproto = IntervalTree.prototype;\n\ntproto.insert = function (interval) {\n  if (this.root) {\n    this.root.insert(interval);\n  } else {\n    this.root = new IntervalTreeNode(interval[0], null, null, [interval], [interval]);\n  }\n};\n\ntproto.remove = function (interval) {\n  if (this.root) {\n    var r = this.root.remove(interval);\n\n    if (r === EMPTY) {\n      this.root = null;\n    }\n\n    return r !== NOT_FOUND;\n  }\n\n  return false;\n};\n\ntproto.queryPoint = function (p, cb) {\n  if (this.root) {\n    return this.root.queryPoint(p, cb);\n  }\n};\n\ntproto.queryInterval = function (lo, hi, cb) {\n  if (lo <= hi && this.root) {\n    return this.root.queryInterval(lo, hi, cb);\n  }\n};\n\nObject.defineProperty(tproto, 'count', {\n  get: function get() {\n    if (this.root) {\n      return this.root.count;\n    }\n\n    return 0;\n  }\n});\nObject.defineProperty(tproto, 'intervals', {\n  get: function get() {\n    if (this.root) {\n      return this.root.intervals([]);\n    }\n\n    return [];\n  }\n});\nexport default function createWrapper(intervals) {\n  if (!intervals || intervals.length === 0) {\n    return new IntervalTree(null);\n  }\n\n  return new IntervalTree(createIntervalTree(intervals));\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport createIntervalTree from '../vendor/intervalTree';\n\n// Position cache requirements:\n//   O(log(n)) lookup of cells to render for a given viewport size\n//   O(1) lookup of shortest measured column (so we know when to enter phase 1)\nvar PositionCache =\n/*#__PURE__*/\nfunction () {\n  function PositionCache() {\n    _classCallCheck(this, PositionCache);\n\n    _defineProperty(this, \"_columnSizeMap\", {});\n\n    _defineProperty(this, \"_intervalTree\", createIntervalTree());\n\n    _defineProperty(this, \"_leftMap\", {});\n  }\n\n  _createClass(PositionCache, [{\n    key: \"estimateTotalHeight\",\n    value: function estimateTotalHeight(cellCount, columnCount, defaultCellHeight) {\n      var unmeasuredCellCount = cellCount - this.count;\n      return this.tallestColumnSize + Math.ceil(unmeasuredCellCount / columnCount) * defaultCellHeight;\n    } // Render all cells visible within the viewport range defined.\n\n  }, {\n    key: \"range\",\n    value: function range(scrollTop, clientHeight, renderCallback) {\n      var _this = this;\n\n      this._intervalTree.queryInterval(scrollTop, scrollTop + clientHeight, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 3),\n            top = _ref2[0],\n            _ = _ref2[1],\n            index = _ref2[2];\n\n        return renderCallback(index, _this._leftMap[index], top);\n      });\n    }\n  }, {\n    key: \"setPosition\",\n    value: function setPosition(index, left, top, height) {\n      this._intervalTree.insert([top, top + height, index]);\n\n      this._leftMap[index] = left;\n      var columnSizeMap = this._columnSizeMap;\n      var columnHeight = columnSizeMap[left];\n\n      if (columnHeight === undefined) {\n        columnSizeMap[left] = top + height;\n      } else {\n        columnSizeMap[left] = Math.max(columnHeight, top + height);\n      }\n    }\n  }, {\n    key: \"count\",\n    get: function get() {\n      return this._intervalTree.count;\n    }\n  }, {\n    key: \"shortestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = size === 0 ? height : Math.min(size, height);\n      }\n\n      return size;\n    }\n  }, {\n    key: \"tallestColumnSize\",\n    get: function get() {\n      var columnSizeMap = this._columnSizeMap;\n      var size = 0;\n\n      for (var i in columnSizeMap) {\n        var height = columnSizeMap[i];\n        size = Math.max(size, height);\n      }\n\n      return size;\n    }\n  }]);\n\n  return PositionCache;\n}();\n\nexport { PositionCache as default };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport PositionCache from './PositionCache';\nimport { requestAnimationTimeout, cancelAnimationTimeout } from '../utils/requestAnimationTimeout';\nvar emptyObject = {};\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\n\nexport var DEFAULT_SCROLLING_RESET_TIME_INTERVAL = 150;\n/**\n * This component efficiently displays arbitrarily positioned cells using windowing techniques.\n * Cell position is determined by an injected `cellPositioner` property.\n * Windowing is vertical; this component does not support horizontal scrolling.\n *\n * Rendering occurs in two phases:\n * 1) First pass uses estimated cell sizes (provided by the cache) to determine how many cells to measure in a batch.\n *    Batch size is chosen using a fast, naive layout algorithm that stacks images in order until the viewport has been filled.\n *    After measurement is complete (componentDidMount or componentDidUpdate) this component evaluates positioned cells\n *    in order to determine if another measurement pass is required (eg if actual cell sizes were less than estimated sizes).\n *    All measurements are permanently cached (keyed by `keyMapper`) for performance purposes.\n * 2) Second pass uses the external `cellPositioner` to layout cells.\n *    At this time the positioner has access to cached size measurements for all cells.\n *    The positions it returns are cached by Masonry for fast access later.\n *    Phase one is repeated if the user scrolls beyond the current layout's bounds.\n *    If the layout is invalidated due to eg a resize, cached positions can be cleared using `recomputeCellPositions()`.\n *\n * Animation constraints:\n *   Simple animations are supported (eg translate/slide into place on initial reveal).\n *   More complex animations are not (eg flying from one position to another on resize).\n *\n * Layout constraints:\n *   This component supports multi-column layout.\n *   The height of each item may vary.\n *   The width of each item must not exceed the width of the column it is \"in\".\n *   The left position of all items within a column must align.\n *   (Items may not span multiple columns.)\n */\n\nvar Masonry = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Masonry, _React$PureComponent);\n\n  function Masonry() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Masonry);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Masonry)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isScrolling: false,\n      scrollTop: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStartIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_invalidateOnUpdateStopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionCache\", new PositionCache());\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_startIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_stopIndexMemoized\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_debounceResetIsScrollingCallback\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setScrollingContainerRef\", function (ref) {\n      _this._scrollingContainer = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (event) {\n      var height = _this.props.height;\n      var eventScrollTop = event.currentTarget.scrollTop; // When this component is shrunk drastically, React dispatches a series of back-to-back scroll events,\n      // Gradually converging on a scrollTop that is within the bounds of the new, smaller height.\n      // This causes a series of rapid renders that is slow for long lists.\n      // We can avoid that by doing some simple bounds checking to ensure that scroll offsets never exceed their bounds.\n\n      var scrollTop = Math.min(Math.max(0, _this._getEstimatedTotalHeight() - height), eventScrollTop); // On iOS, we can arrive at negative offsets by swiping past the start or end.\n      // Avoid re-rendering in this case as it can cause problems; see #532 for more.\n\n      if (eventScrollTop !== scrollTop) {\n        return;\n      } // Prevent pointer events from interrupting a smooth scroll\n\n\n      _this._debounceResetIsScrolling(); // Certain devices (like Apple touchpad) rapid-fire duplicate events.\n      // Don't force a re-render if this is the case.\n      // The mouse may move faster then the animation frame does.\n      // Use requestAnimationFrame to avoid over-updating.\n\n\n      if (_this.state.scrollTop !== scrollTop) {\n        _this.setState({\n          isScrolling: true,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Masonry, [{\n    key: \"clearCellPositions\",\n    value: function clearCellPositions() {\n      this._positionCache = new PositionCache();\n      this.forceUpdate();\n    } // HACK This method signature was intended for Grid\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref) {\n      var index = _ref.rowIndex;\n\n      if (this._invalidateOnUpdateStartIndex === null) {\n        this._invalidateOnUpdateStartIndex = index;\n        this._invalidateOnUpdateStopIndex = index;\n      } else {\n        this._invalidateOnUpdateStartIndex = Math.min(this._invalidateOnUpdateStartIndex, index);\n        this._invalidateOnUpdateStopIndex = Math.max(this._invalidateOnUpdateStopIndex, index);\n      }\n    }\n  }, {\n    key: \"recomputeCellPositions\",\n    value: function recomputeCellPositions() {\n      var stopIndex = this._positionCache.count - 1;\n      this._positionCache = new PositionCache();\n\n      this._populatePositionCache(0, stopIndex);\n\n      this.forceUpdate();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      this._checkInvalidateOnUpdate();\n\n      this._invokeOnScrollCallback();\n\n      this._invokeOnCellsRenderedCallback();\n\n      if (this.props.scrollTop !== prevProps.scrollTop) {\n        this._debounceResetIsScrolling();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          autoHeight = _this$props.autoHeight,\n          cellCount = _this$props.cellCount,\n          cellMeasurerCache = _this$props.cellMeasurerCache,\n          cellRenderer = _this$props.cellRenderer,\n          className = _this$props.className,\n          height = _this$props.height,\n          id = _this$props.id,\n          keyMapper = _this$props.keyMapper,\n          overscanByPixels = _this$props.overscanByPixels,\n          role = _this$props.role,\n          style = _this$props.style,\n          tabIndex = _this$props.tabIndex,\n          width = _this$props.width,\n          rowDirection = _this$props.rowDirection;\n      var _this$state = this.state,\n          isScrolling = _this$state.isScrolling,\n          scrollTop = _this$state.scrollTop;\n      var children = [];\n\n      var estimateTotalHeight = this._getEstimatedTotalHeight();\n\n      var shortestColumnSize = this._positionCache.shortestColumnSize;\n      var measuredCellCount = this._positionCache.count;\n      var startIndex = 0;\n      var stopIndex;\n\n      this._positionCache.range(Math.max(0, scrollTop - overscanByPixels), height + overscanByPixels * 2, function (index, left, top) {\n        var _style;\n\n        if (typeof stopIndex === 'undefined') {\n          startIndex = index;\n          stopIndex = index;\n        } else {\n          startIndex = Math.min(startIndex, index);\n          stopIndex = Math.max(stopIndex, index);\n        }\n\n        children.push(cellRenderer({\n          index: index,\n          isScrolling: isScrolling,\n          key: keyMapper(index),\n          parent: _this2,\n          style: (_style = {\n            height: cellMeasurerCache.getHeight(index)\n          }, _defineProperty(_style, rowDirection === 'ltr' ? 'left' : 'right', left), _defineProperty(_style, \"position\", 'absolute'), _defineProperty(_style, \"top\", top), _defineProperty(_style, \"width\", cellMeasurerCache.getWidth(index)), _style)\n        }));\n      }); // We need to measure additional cells for this layout\n\n\n      if (shortestColumnSize < scrollTop + height + overscanByPixels && measuredCellCount < cellCount) {\n        var batchSize = Math.min(cellCount - measuredCellCount, Math.ceil((scrollTop + height + overscanByPixels - shortestColumnSize) / cellMeasurerCache.defaultHeight * width / cellMeasurerCache.defaultWidth));\n\n        for (var _index = measuredCellCount; _index < measuredCellCount + batchSize; _index++) {\n          stopIndex = _index;\n          children.push(cellRenderer({\n            index: _index,\n            isScrolling: isScrolling,\n            key: keyMapper(_index),\n            parent: this,\n            style: {\n              width: cellMeasurerCache.getWidth(_index)\n            }\n          }));\n        }\n      }\n\n      this._startIndex = startIndex;\n      this._stopIndex = stopIndex;\n      return React.createElement(\"div\", {\n        ref: this._setScrollingContainerRef,\n        \"aria-label\": this.props['aria-label'],\n        className: clsx('ReactVirtualized__Masonry', className),\n        id: id,\n        onScroll: this._onScroll,\n        role: role,\n        style: _objectSpread({\n          boxSizing: 'border-box',\n          direction: 'ltr',\n          height: autoHeight ? 'auto' : height,\n          overflowX: 'hidden',\n          overflowY: estimateTotalHeight < height ? 'hidden' : 'auto',\n          position: 'relative',\n          width: width,\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform'\n        }, style),\n        tabIndex: tabIndex\n      }, React.createElement(\"div\", {\n        className: \"ReactVirtualized__Masonry__innerScrollContainer\",\n        style: {\n          width: '100%',\n          height: estimateTotalHeight,\n          maxWidth: '100%',\n          maxHeight: estimateTotalHeight,\n          overflow: 'hidden',\n          pointerEvents: isScrolling ? 'none' : '',\n          position: 'relative'\n        }\n      }, children));\n    }\n  }, {\n    key: \"_checkInvalidateOnUpdate\",\n    value: function _checkInvalidateOnUpdate() {\n      if (typeof this._invalidateOnUpdateStartIndex === 'number') {\n        var startIndex = this._invalidateOnUpdateStartIndex;\n        var stopIndex = this._invalidateOnUpdateStopIndex;\n        this._invalidateOnUpdateStartIndex = null;\n        this._invalidateOnUpdateStopIndex = null; // Query external layout logic for position of newly-measured cells\n\n        this._populatePositionCache(startIndex, stopIndex);\n\n        this.forceUpdate();\n      }\n    }\n  }, {\n    key: \"_debounceResetIsScrolling\",\n    value: function _debounceResetIsScrolling() {\n      var scrollingResetTimeInterval = this.props.scrollingResetTimeInterval;\n\n      if (this._debounceResetIsScrollingId) {\n        cancelAnimationTimeout(this._debounceResetIsScrollingId);\n      }\n\n      this._debounceResetIsScrollingId = requestAnimationTimeout(this._debounceResetIsScrollingCallback, scrollingResetTimeInterval);\n    }\n  }, {\n    key: \"_getEstimatedTotalHeight\",\n    value: function _getEstimatedTotalHeight() {\n      var _this$props2 = this.props,\n          cellCount = _this$props2.cellCount,\n          cellMeasurerCache = _this$props2.cellMeasurerCache,\n          width = _this$props2.width;\n      var estimatedColumnCount = Math.max(1, Math.floor(width / cellMeasurerCache.defaultWidth));\n      return this._positionCache.estimateTotalHeight(cellCount, estimatedColumnCount, cellMeasurerCache.defaultHeight);\n    }\n  }, {\n    key: \"_invokeOnScrollCallback\",\n    value: function _invokeOnScrollCallback() {\n      var _this$props3 = this.props,\n          height = _this$props3.height,\n          onScroll = _this$props3.onScroll;\n      var scrollTop = this.state.scrollTop;\n\n      if (this._onScrollMemoized !== scrollTop) {\n        onScroll({\n          clientHeight: height,\n          scrollHeight: this._getEstimatedTotalHeight(),\n          scrollTop: scrollTop\n        });\n        this._onScrollMemoized = scrollTop;\n      }\n    }\n  }, {\n    key: \"_invokeOnCellsRenderedCallback\",\n    value: function _invokeOnCellsRenderedCallback() {\n      if (this._startIndexMemoized !== this._startIndex || this._stopIndexMemoized !== this._stopIndex) {\n        var onCellsRendered = this.props.onCellsRendered;\n        onCellsRendered({\n          startIndex: this._startIndex,\n          stopIndex: this._stopIndex\n        });\n        this._startIndexMemoized = this._startIndex;\n        this._stopIndexMemoized = this._stopIndex;\n      }\n    }\n  }, {\n    key: \"_populatePositionCache\",\n    value: function _populatePositionCache(startIndex, stopIndex) {\n      var _this$props4 = this.props,\n          cellMeasurerCache = _this$props4.cellMeasurerCache,\n          cellPositioner = _this$props4.cellPositioner;\n\n      for (var _index2 = startIndex; _index2 <= stopIndex; _index2++) {\n        var _cellPositioner = cellPositioner(_index2),\n            left = _cellPositioner.left,\n            top = _cellPositioner.top;\n\n        this._positionCache.setPosition(_index2, left, top, cellMeasurerCache.getHeight(_index2));\n      }\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollTop !== undefined && prevState.scrollTop !== nextProps.scrollTop) {\n        return {\n          isScrolling: true,\n          scrollTop: nextProps.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return Masonry;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  \"autoHeight\": PropTypes.bool.isRequired,\n  \"cellCount\": PropTypes.number.isRequired,\n  \"cellMeasurerCache\": function cellMeasurerCache() {\n    return (typeof CellMeasurerCache === \"function\" ? PropTypes.instanceOf(CellMeasurerCache).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellPositioner\": function cellPositioner() {\n    return (typeof Positioner === \"function\" ? PropTypes.instanceOf(Positioner).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"cellRenderer\": function cellRenderer() {\n    return (typeof CellRenderer === \"function\" ? PropTypes.instanceOf(CellRenderer).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"className\": PropTypes.string,\n  \"height\": PropTypes.number.isRequired,\n  \"id\": PropTypes.string,\n  \"keyMapper\": function keyMapper() {\n    return (typeof KeyMapper === \"function\" ? PropTypes.instanceOf(KeyMapper).isRequired : PropTypes.any.isRequired).apply(this, arguments);\n  },\n  \"onCellsRendered\": function onCellsRendered() {\n    return (typeof OnCellsRenderedCallback === \"function\" ? PropTypes.instanceOf(OnCellsRenderedCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"onScroll\": function onScroll() {\n    return (typeof OnScrollCallback === \"function\" ? PropTypes.instanceOf(OnScrollCallback) : PropTypes.any).apply(this, arguments);\n  },\n  \"overscanByPixels\": PropTypes.number.isRequired,\n  \"role\": PropTypes.string.isRequired,\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n  \"style\": function style(props, propName, componentName) {\n    if (!Object.prototype.hasOwnProperty.call(props, propName)) {\n      throw new Error(\"Prop `\".concat(propName, \"` has type 'any' or 'mixed', but was not provided to `\").concat(componentName, \"`. Pass undefined or any other value.\"));\n    }\n  },\n  \"tabIndex\": PropTypes.number.isRequired,\n  \"width\": PropTypes.number.isRequired,\n  \"rowDirection\": PropTypes.string.isRequired,\n  \"scrollTop\": PropTypes.number\n}), _temp);\n\n_defineProperty(Masonry, \"defaultProps\", {\n  autoHeight: false,\n  keyMapper: identity,\n  onCellsRendered: noop,\n  onScroll: noop,\n  overscanByPixels: 20,\n  role: 'grid',\n  scrollingResetTimeInterval: DEFAULT_SCROLLING_RESET_TIME_INTERVAL,\n  style: emptyObject,\n  tabIndex: 0,\n  rowDirection: 'ltr'\n});\n\nfunction identity(value) {\n  return value;\n}\n\nfunction noop() {}\n\nvar bpfrpt_proptype_CellMeasurerCache = process.env.NODE_ENV === 'production' ? null : {\n  \"defaultHeight\": PropTypes.number.isRequired,\n  \"defaultWidth\": PropTypes.number.isRequired,\n  \"getHeight\": PropTypes.func.isRequired,\n  \"getWidth\": PropTypes.func.isRequired\n};\npolyfill(Masonry);\nexport default Masonry;\nvar bpfrpt_proptype_Positioner = process.env.NODE_ENV === 'production' ? null : PropTypes.func;\nimport { bpfrpt_proptype_AnimationTimeoutId } from \"../utils/requestAnimationTimeout\";\nimport PropTypes from \"prop-types\";\nexport { bpfrpt_proptype_CellMeasurerCache };\nexport { bpfrpt_proptype_Positioner };","import createCellPositioner from './createCellPositioner';\nimport Masonry from './Masonry';\nexport default Masonry;\nexport { createCellPositioner, Masonry };","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport { CellMeasurerCache } from '../CellMeasurer';\n\n/**\n * Caches measurements for a given cell.\n */\nvar CellMeasurerCacheDecorator =\n/*#__PURE__*/\nfunction () {\n  function CellMeasurerCacheDecorator() {\n    var _this = this;\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, CellMeasurerCacheDecorator);\n\n    _defineProperty(this, \"_cellMeasurerCache\", void 0);\n\n    _defineProperty(this, \"_columnIndexOffset\", void 0);\n\n    _defineProperty(this, \"_rowIndexOffset\", void 0);\n\n    _defineProperty(this, \"columnWidth\", function (_ref) {\n      var index = _ref.index;\n\n      _this._cellMeasurerCache.columnWidth({\n        index: index + _this._columnIndexOffset\n      });\n    });\n\n    _defineProperty(this, \"rowHeight\", function (_ref2) {\n      var index = _ref2.index;\n\n      _this._cellMeasurerCache.rowHeight({\n        index: index + _this._rowIndexOffset\n      });\n    });\n\n    var cellMeasurerCache = params.cellMeasurerCache,\n        _params$columnIndexOf = params.columnIndexOffset,\n        columnIndexOffset = _params$columnIndexOf === void 0 ? 0 : _params$columnIndexOf,\n        _params$rowIndexOffse = params.rowIndexOffset,\n        rowIndexOffset = _params$rowIndexOffse === void 0 ? 0 : _params$rowIndexOffse;\n    this._cellMeasurerCache = cellMeasurerCache;\n    this._columnIndexOffset = columnIndexOffset;\n    this._rowIndexOffset = rowIndexOffset;\n  }\n\n  _createClass(CellMeasurerCacheDecorator, [{\n    key: \"clear\",\n    value: function clear(rowIndex, columnIndex) {\n      this._cellMeasurerCache.clear(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"clearAll\",\n    value: function clearAll() {\n      this._cellMeasurerCache.clearAll();\n    }\n  }, {\n    key: \"hasFixedHeight\",\n    value: function hasFixedHeight() {\n      return this._cellMeasurerCache.hasFixedHeight();\n    }\n  }, {\n    key: \"hasFixedWidth\",\n    value: function hasFixedWidth() {\n      return this._cellMeasurerCache.hasFixedWidth();\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getHeight(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"getWidth\",\n    value: function getWidth(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.getWidth(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"has\",\n    value: function has(rowIndex) {\n      var columnIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      return this._cellMeasurerCache.has(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset);\n    }\n  }, {\n    key: \"set\",\n    value: function set(rowIndex, columnIndex, width, height) {\n      this._cellMeasurerCache.set(rowIndex + this._rowIndexOffset, columnIndex + this._columnIndexOffset, width, height);\n    }\n  }, {\n    key: \"defaultHeight\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultHeight;\n    }\n  }, {\n    key: \"defaultWidth\",\n    get: function get() {\n      return this._cellMeasurerCache.defaultWidth;\n    }\n  }]);\n\n  return CellMeasurerCacheDecorator;\n}();\n\nexport { CellMeasurerCacheDecorator as default };","import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport CellMeasurerCacheDecorator from './CellMeasurerCacheDecorator';\nimport Grid from '../Grid';\nvar SCROLLBAR_SIZE_BUFFER = 20;\n/**\n * Renders 1, 2, or 4 Grids depending on configuration.\n * A main (body) Grid will always be rendered.\n * Optionally, 1-2 Grids for sticky header rows will also be rendered.\n * If no sticky columns, only 1 sticky header Grid will be rendered.\n * If sticky columns, 2 sticky header Grids will be rendered.\n */\n\nvar MultiGrid =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(MultiGrid, _React$PureComponent);\n\n  function MultiGrid(props, context) {\n    var _this;\n\n    _classCallCheck(this, MultiGrid);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiGrid).call(this, props, context));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollbarSize: 0,\n      showHorizontalScrollbar: false,\n      showVerticalScrollbar: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateColumnIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_deferredInvalidateRowIndex\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomLeftGridRef\", function (ref) {\n      _this._bottomLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_bottomRightGridRef\", function (ref) {\n      _this._bottomRightGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomLeftGrid\", function (_ref) {\n      var rowIndex = _ref.rowIndex,\n          rest = _objectWithoutProperties(_ref, [\"rowIndex\"]);\n\n      var _this$props = _this.props,\n          cellRenderer = _this$props.cellRenderer,\n          fixedRowCount = _this$props.fixedRowCount,\n          rowCount = _this$props.rowCount;\n\n      if (rowIndex === rowCount - fixedRowCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            height: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          parent: _assertThisInitialized(_this),\n          rowIndex: rowIndex + fixedRowCount\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererBottomRightGrid\", function (_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex,\n          rest = _objectWithoutProperties(_ref2, [\"columnIndex\", \"rowIndex\"]);\n\n      var _this$props2 = _this.props,\n          cellRenderer = _this$props2.cellRenderer,\n          fixedColumnCount = _this$props2.fixedColumnCount,\n          fixedRowCount = _this$props2.fixedRowCount;\n      return cellRenderer(_objectSpread({}, rest, {\n        columnIndex: columnIndex + fixedColumnCount,\n        parent: _assertThisInitialized(_this),\n        rowIndex: rowIndex + fixedRowCount\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_cellRendererTopRightGrid\", function (_ref3) {\n      var columnIndex = _ref3.columnIndex,\n          rest = _objectWithoutProperties(_ref3, [\"columnIndex\"]);\n\n      var _this$props3 = _this.props,\n          cellRenderer = _this$props3.cellRenderer,\n          columnCount = _this$props3.columnCount,\n          fixedColumnCount = _this$props3.fixedColumnCount;\n\n      if (columnIndex === columnCount - fixedColumnCount) {\n        return React.createElement(\"div\", {\n          key: rest.key,\n          style: _objectSpread({}, rest.style, {\n            width: SCROLLBAR_SIZE_BUFFER\n          })\n        });\n      } else {\n        return cellRenderer(_objectSpread({}, rest, {\n          columnIndex: columnIndex + fixedColumnCount,\n          parent: _assertThisInitialized(_this)\n        }));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_columnWidthRightGrid\", function (_ref4) {\n      var index = _ref4.index;\n      var _this$props4 = _this.props,\n          columnCount = _this$props4.columnCount,\n          fixedColumnCount = _this$props4.fixedColumnCount,\n          columnWidth = _this$props4.columnWidth;\n      var _this$state = _this.state,\n          scrollbarSize = _this$state.scrollbarSize,\n          showHorizontalScrollbar = _this$state.showHorizontalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showHorizontalScrollbar && index === columnCount - fixedColumnCount) {\n        return scrollbarSize;\n      }\n\n      return typeof columnWidth === 'function' ? columnWidth({\n        index: index + fixedColumnCount\n      }) : columnWidth;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScroll\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft,\n          scrollTop = scrollInfo.scrollTop;\n\n      _this.setState({\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop\n      });\n\n      var onScroll = _this.props.onScroll;\n\n      if (onScroll) {\n        onScroll(scrollInfo);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollbarPresenceChange\", function (_ref5) {\n      var horizontal = _ref5.horizontal,\n          size = _ref5.size,\n          vertical = _ref5.vertical;\n      var _this$state2 = _this.state,\n          showHorizontalScrollbar = _this$state2.showHorizontalScrollbar,\n          showVerticalScrollbar = _this$state2.showVerticalScrollbar;\n\n      if (horizontal !== showHorizontalScrollbar || vertical !== showVerticalScrollbar) {\n        _this.setState({\n          scrollbarSize: size,\n          showHorizontalScrollbar: horizontal,\n          showVerticalScrollbar: vertical\n        });\n\n        var onScrollbarPresenceChange = _this.props.onScrollbarPresenceChange;\n\n        if (typeof onScrollbarPresenceChange === 'function') {\n          onScrollbarPresenceChange({\n            horizontal: horizontal,\n            size: size,\n            vertical: vertical\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollLeft\", function (scrollInfo) {\n      var scrollLeft = scrollInfo.scrollLeft;\n\n      _this._onScroll({\n        scrollLeft: scrollLeft,\n        scrollTop: _this.state.scrollTop\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onScrollTop\", function (scrollInfo) {\n      var scrollTop = scrollInfo.scrollTop;\n\n      _this._onScroll({\n        scrollTop: scrollTop,\n        scrollLeft: _this.state.scrollLeft\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_rowHeightBottomGrid\", function (_ref6) {\n      var index = _ref6.index;\n      var _this$props5 = _this.props,\n          fixedRowCount = _this$props5.fixedRowCount,\n          rowCount = _this$props5.rowCount,\n          rowHeight = _this$props5.rowHeight;\n      var _this$state3 = _this.state,\n          scrollbarSize = _this$state3.scrollbarSize,\n          showVerticalScrollbar = _this$state3.showVerticalScrollbar; // An extra cell is added to the count\n      // This gives the smaller Grid extra room for offset,\n      // In case the main (bottom right) Grid has a scrollbar\n      // If no scrollbar, the extra space is overflow:hidden anyway\n\n      if (showVerticalScrollbar && index === rowCount - fixedRowCount) {\n        return scrollbarSize;\n      }\n\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: index + fixedRowCount\n      }) : rowHeight;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topLeftGridRef\", function (ref) {\n      _this._topLeftGrid = ref;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_topRightGridRef\", function (ref) {\n      _this._topRightGrid = ref;\n    });\n\n    var deferredMeasurementCache = props.deferredMeasurementCache,\n        _fixedColumnCount = props.fixedColumnCount,\n        _fixedRowCount = props.fixedRowCount;\n\n    _this._maybeCalculateCachedStyles(true);\n\n    if (deferredMeasurementCache) {\n      _this._deferredMeasurementCacheBottomLeftGrid = _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: 0,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheBottomRightGrid = _fixedColumnCount > 0 || _fixedRowCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: _fixedRowCount\n      }) : deferredMeasurementCache;\n      _this._deferredMeasurementCacheTopRightGrid = _fixedColumnCount > 0 ? new CellMeasurerCacheDecorator({\n        cellMeasurerCache: deferredMeasurementCache,\n        columnIndexOffset: _fixedColumnCount,\n        rowIndexOffset: 0\n      }) : deferredMeasurementCache;\n    }\n\n    return _this;\n  }\n\n  _createClass(MultiGrid, [{\n    key: \"forceUpdateGrids\",\n    value: function forceUpdateGrids() {\n      this._bottomLeftGrid && this._bottomLeftGrid.forceUpdate();\n      this._bottomRightGrid && this._bottomRightGrid.forceUpdate();\n      this._topLeftGrid && this._topLeftGrid.forceUpdate();\n      this._topRightGrid && this._topRightGrid.forceUpdate();\n    }\n    /** See Grid#invalidateCellSizeAfterRender */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender() {\n      var _ref7 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref7$columnIndex = _ref7.columnIndex,\n          columnIndex = _ref7$columnIndex === void 0 ? 0 : _ref7$columnIndex,\n          _ref7$rowIndex = _ref7.rowIndex,\n          rowIndex = _ref7$rowIndex === void 0 ? 0 : _ref7$rowIndex;\n\n      this._deferredInvalidateColumnIndex = typeof this._deferredInvalidateColumnIndex === 'number' ? Math.min(this._deferredInvalidateColumnIndex, columnIndex) : columnIndex;\n      this._deferredInvalidateRowIndex = typeof this._deferredInvalidateRowIndex === 'number' ? Math.min(this._deferredInvalidateRowIndex, rowIndex) : rowIndex;\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllCells\",\n    value: function measureAllCells() {\n      this._bottomLeftGrid && this._bottomLeftGrid.measureAllCells();\n      this._bottomRightGrid && this._bottomRightGrid.measureAllCells();\n      this._topLeftGrid && this._topLeftGrid.measureAllCells();\n      this._topRightGrid && this._topRightGrid.measureAllCells();\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref8 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref8$columnIndex = _ref8.columnIndex,\n          columnIndex = _ref8$columnIndex === void 0 ? 0 : _ref8$columnIndex,\n          _ref8$rowIndex = _ref8.rowIndex,\n          rowIndex = _ref8$rowIndex === void 0 ? 0 : _ref8$rowIndex;\n\n      var _this$props6 = this.props,\n          fixedColumnCount = _this$props6.fixedColumnCount,\n          fixedRowCount = _this$props6.fixedRowCount;\n      var adjustedColumnIndex = Math.max(0, columnIndex - fixedColumnCount);\n      var adjustedRowIndex = Math.max(0, rowIndex - fixedRowCount);\n      this._bottomLeftGrid && this._bottomLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._bottomRightGrid && this._bottomRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: adjustedRowIndex\n      });\n      this._topLeftGrid && this._topLeftGrid.recomputeGridSize({\n        columnIndex: columnIndex,\n        rowIndex: rowIndex\n      });\n      this._topRightGrid && this._topRightGrid.recomputeGridSize({\n        columnIndex: adjustedColumnIndex,\n        rowIndex: rowIndex\n      });\n      this._leftGridWidth = null;\n      this._topGridHeight = null;\n\n      this._maybeCalculateCachedStyles(true);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          scrollLeft = _this$props7.scrollLeft,\n          scrollTop = _this$props7.scrollTop;\n\n      if (scrollLeft > 0 || scrollTop > 0) {\n        var newState = {};\n\n        if (scrollLeft > 0) {\n          newState.scrollLeft = scrollLeft;\n        }\n\n        if (scrollTop > 0) {\n          newState.scrollTop = scrollTop;\n        }\n\n        this.setState(newState);\n      }\n\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._handleInvalidatedGridSize();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props8 = this.props,\n          onScroll = _this$props8.onScroll,\n          onSectionRendered = _this$props8.onSectionRendered,\n          onScrollbarPresenceChange = _this$props8.onScrollbarPresenceChange,\n          scrollLeftProp = _this$props8.scrollLeft,\n          scrollToColumn = _this$props8.scrollToColumn,\n          scrollTopProp = _this$props8.scrollTop,\n          scrollToRow = _this$props8.scrollToRow,\n          rest = _objectWithoutProperties(_this$props8, [\"onScroll\", \"onSectionRendered\", \"onScrollbarPresenceChange\", \"scrollLeft\", \"scrollToColumn\", \"scrollTop\", \"scrollToRow\"]);\n\n      this._prepareForRender(); // Don't render any of our Grids if there are no cells.\n      // This mirrors what Grid does,\n      // And prevents us from recording inaccurage measurements when used with CellMeasurer.\n\n\n      if (this.props.width === 0 || this.props.height === 0) {\n        return null;\n      } // scrollTop and scrollLeft props are explicitly filtered out and ignored\n\n\n      var _this$state4 = this.state,\n          scrollLeft = _this$state4.scrollLeft,\n          scrollTop = _this$state4.scrollTop;\n      return React.createElement(\"div\", {\n        style: this._containerOuterStyle\n      }, React.createElement(\"div\", {\n        style: this._containerTopStyle\n      }, this._renderTopLeftGrid(rest), this._renderTopRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollLeft: scrollLeft\n      }))), React.createElement(\"div\", {\n        style: this._containerBottomStyle\n      }, this._renderBottomLeftGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        scrollTop: scrollTop\n      })), this._renderBottomRightGrid(_objectSpread({}, rest, {\n        onScroll: onScroll,\n        onSectionRendered: onSectionRendered,\n        scrollLeft: scrollLeft,\n        scrollToColumn: scrollToColumn,\n        scrollToRow: scrollToRow,\n        scrollTop: scrollTop\n      }))));\n    }\n  }, {\n    key: \"_getBottomGridHeight\",\n    value: function _getBottomGridHeight(props) {\n      var height = props.height;\n\n      var topGridHeight = this._getTopGridHeight(props);\n\n      return height - topGridHeight;\n    }\n  }, {\n    key: \"_getLeftGridWidth\",\n    value: function _getLeftGridWidth(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          columnWidth = props.columnWidth;\n\n      if (this._leftGridWidth == null) {\n        if (typeof columnWidth === 'function') {\n          var leftGridWidth = 0;\n\n          for (var index = 0; index < fixedColumnCount; index++) {\n            leftGridWidth += columnWidth({\n              index: index\n            });\n          }\n\n          this._leftGridWidth = leftGridWidth;\n        } else {\n          this._leftGridWidth = columnWidth * fixedColumnCount;\n        }\n      }\n\n      return this._leftGridWidth;\n    }\n  }, {\n    key: \"_getRightGridWidth\",\n    value: function _getRightGridWidth(props) {\n      var width = props.width;\n\n      var leftGridWidth = this._getLeftGridWidth(props);\n\n      return width - leftGridWidth;\n    }\n  }, {\n    key: \"_getTopGridHeight\",\n    value: function _getTopGridHeight(props) {\n      var fixedRowCount = props.fixedRowCount,\n          rowHeight = props.rowHeight;\n\n      if (this._topGridHeight == null) {\n        if (typeof rowHeight === 'function') {\n          var topGridHeight = 0;\n\n          for (var index = 0; index < fixedRowCount; index++) {\n            topGridHeight += rowHeight({\n              index: index\n            });\n          }\n\n          this._topGridHeight = topGridHeight;\n        } else {\n          this._topGridHeight = rowHeight * fixedRowCount;\n        }\n      }\n\n      return this._topGridHeight;\n    }\n  }, {\n    key: \"_handleInvalidatedGridSize\",\n    value: function _handleInvalidatedGridSize() {\n      if (typeof this._deferredInvalidateColumnIndex === 'number') {\n        var columnIndex = this._deferredInvalidateColumnIndex;\n        var rowIndex = this._deferredInvalidateRowIndex;\n        this._deferredInvalidateColumnIndex = null;\n        this._deferredInvalidateRowIndex = null;\n        this.recomputeGridSize({\n          columnIndex: columnIndex,\n          rowIndex: rowIndex\n        });\n        this.forceUpdate();\n      }\n    }\n    /**\n     * Avoid recreating inline styles each render; this bypasses Grid's shallowCompare.\n     * This method recalculates styles only when specific props change.\n     */\n\n  }, {\n    key: \"_maybeCalculateCachedStyles\",\n    value: function _maybeCalculateCachedStyles(resetAll) {\n      var _this$props9 = this.props,\n          columnWidth = _this$props9.columnWidth,\n          enableFixedColumnScroll = _this$props9.enableFixedColumnScroll,\n          enableFixedRowScroll = _this$props9.enableFixedRowScroll,\n          height = _this$props9.height,\n          fixedColumnCount = _this$props9.fixedColumnCount,\n          fixedRowCount = _this$props9.fixedRowCount,\n          rowHeight = _this$props9.rowHeight,\n          style = _this$props9.style,\n          styleBottomLeftGrid = _this$props9.styleBottomLeftGrid,\n          styleBottomRightGrid = _this$props9.styleBottomRightGrid,\n          styleTopLeftGrid = _this$props9.styleTopLeftGrid,\n          styleTopRightGrid = _this$props9.styleTopRightGrid,\n          width = _this$props9.width;\n      var sizeChange = resetAll || height !== this._lastRenderedHeight || width !== this._lastRenderedWidth;\n      var leftSizeChange = resetAll || columnWidth !== this._lastRenderedColumnWidth || fixedColumnCount !== this._lastRenderedFixedColumnCount;\n      var topSizeChange = resetAll || fixedRowCount !== this._lastRenderedFixedRowCount || rowHeight !== this._lastRenderedRowHeight;\n\n      if (resetAll || sizeChange || style !== this._lastRenderedStyle) {\n        this._containerOuterStyle = _objectSpread({\n          height: height,\n          overflow: 'visible',\n          // Let :focus outline show through\n          width: width\n        }, style);\n      }\n\n      if (resetAll || sizeChange || topSizeChange) {\n        this._containerTopStyle = {\n          height: this._getTopGridHeight(this.props),\n          position: 'relative',\n          width: width\n        };\n        this._containerBottomStyle = {\n          height: height - this._getTopGridHeight(this.props),\n          overflow: 'visible',\n          // Let :focus outline show through\n          position: 'relative',\n          width: width\n        };\n      }\n\n      if (resetAll || styleBottomLeftGrid !== this._lastRenderedStyleBottomLeftGrid) {\n        this._bottomLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: enableFixedColumnScroll ? 'auto' : 'hidden',\n          position: 'absolute'\n        }, styleBottomLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleBottomRightGrid !== this._lastRenderedStyleBottomRightGrid) {\n        this._bottomRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          position: 'absolute'\n        }, styleBottomRightGrid);\n      }\n\n      if (resetAll || styleTopLeftGrid !== this._lastRenderedStyleTopLeftGrid) {\n        this._topLeftGridStyle = _objectSpread({\n          left: 0,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopLeftGrid);\n      }\n\n      if (resetAll || leftSizeChange || styleTopRightGrid !== this._lastRenderedStyleTopRightGrid) {\n        this._topRightGridStyle = _objectSpread({\n          left: this._getLeftGridWidth(this.props),\n          overflowX: enableFixedRowScroll ? 'auto' : 'hidden',\n          overflowY: 'hidden',\n          position: 'absolute',\n          top: 0\n        }, styleTopRightGrid);\n      }\n\n      this._lastRenderedColumnWidth = columnWidth;\n      this._lastRenderedFixedColumnCount = fixedColumnCount;\n      this._lastRenderedFixedRowCount = fixedRowCount;\n      this._lastRenderedHeight = height;\n      this._lastRenderedRowHeight = rowHeight;\n      this._lastRenderedStyle = style;\n      this._lastRenderedStyleBottomLeftGrid = styleBottomLeftGrid;\n      this._lastRenderedStyleBottomRightGrid = styleBottomRightGrid;\n      this._lastRenderedStyleTopLeftGrid = styleTopLeftGrid;\n      this._lastRenderedStyleTopRightGrid = styleTopRightGrid;\n      this._lastRenderedWidth = width;\n    }\n  }, {\n    key: \"_prepareForRender\",\n    value: function _prepareForRender() {\n      if (this._lastRenderedColumnWidth !== this.props.columnWidth || this._lastRenderedFixedColumnCount !== this.props.fixedColumnCount) {\n        this._leftGridWidth = null;\n      }\n\n      if (this._lastRenderedFixedRowCount !== this.props.fixedRowCount || this._lastRenderedRowHeight !== this.props.rowHeight) {\n        this._topGridHeight = null;\n      }\n\n      this._maybeCalculateCachedStyles();\n\n      this._lastRenderedColumnWidth = this.props.columnWidth;\n      this._lastRenderedFixedColumnCount = this.props.fixedColumnCount;\n      this._lastRenderedFixedRowCount = this.props.fixedRowCount;\n      this._lastRenderedRowHeight = this.props.rowHeight;\n    }\n  }, {\n    key: \"_renderBottomLeftGrid\",\n    value: function _renderBottomLeftGrid(props) {\n      var enableFixedColumnScroll = props.enableFixedColumnScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          hideBottomLeftGridScrollbar = props.hideBottomLeftGridScrollbar;\n      var showVerticalScrollbar = this.state.showVerticalScrollbar;\n\n      if (!fixedColumnCount) {\n        return null;\n      }\n\n      var additionalRowCount = showVerticalScrollbar ? 1 : 0,\n          height = this._getBottomGridHeight(props),\n          width = this._getLeftGridWidth(props),\n          scrollbarSize = this.state.showVerticalScrollbar ? this.state.scrollbarSize : 0,\n          gridWidth = hideBottomLeftGridScrollbar ? width + scrollbarSize : width;\n\n      var bottomLeftGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomLeftGrid,\n        className: this.props.classNameBottomLeftGrid,\n        columnCount: fixedColumnCount,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomLeftGrid,\n        height: height,\n        onScroll: enableFixedColumnScroll ? this._onScrollTop : undefined,\n        ref: this._bottomLeftGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount) + additionalRowCount,\n        rowHeight: this._rowHeightBottomGrid,\n        style: this._bottomLeftGridStyle,\n        tabIndex: null,\n        width: gridWidth\n      }));\n\n      if (hideBottomLeftGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"BottomLeftGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._bottomLeftGridStyle, {\n            height: height,\n            width: width,\n            overflowY: 'hidden'\n          })\n        }, bottomLeftGrid);\n      }\n\n      return bottomLeftGrid;\n    }\n  }, {\n    key: \"_renderBottomRightGrid\",\n    value: function _renderBottomRightGrid(props) {\n      var columnCount = props.columnCount,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          rowCount = props.rowCount,\n          scrollToColumn = props.scrollToColumn,\n          scrollToRow = props.scrollToRow;\n      return React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererBottomRightGrid,\n        className: this.props.classNameBottomRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount),\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheBottomRightGrid,\n        height: this._getBottomGridHeight(props),\n        onScroll: this._onScroll,\n        onScrollbarPresenceChange: this._onScrollbarPresenceChange,\n        ref: this._bottomRightGridRef,\n        rowCount: Math.max(0, rowCount - fixedRowCount),\n        rowHeight: this._rowHeightBottomGrid,\n        scrollToColumn: scrollToColumn - fixedColumnCount,\n        scrollToRow: scrollToRow - fixedRowCount,\n        style: this._bottomRightGridStyle,\n        width: this._getRightGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopLeftGrid\",\n    value: function _renderTopLeftGrid(props) {\n      var fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount;\n\n      if (!fixedColumnCount || !fixedRowCount) {\n        return null;\n      }\n\n      return React.createElement(Grid, _extends({}, props, {\n        className: this.props.classNameTopLeftGrid,\n        columnCount: fixedColumnCount,\n        height: this._getTopGridHeight(props),\n        ref: this._topLeftGridRef,\n        rowCount: fixedRowCount,\n        style: this._topLeftGridStyle,\n        tabIndex: null,\n        width: this._getLeftGridWidth(props)\n      }));\n    }\n  }, {\n    key: \"_renderTopRightGrid\",\n    value: function _renderTopRightGrid(props) {\n      var columnCount = props.columnCount,\n          enableFixedRowScroll = props.enableFixedRowScroll,\n          fixedColumnCount = props.fixedColumnCount,\n          fixedRowCount = props.fixedRowCount,\n          scrollLeft = props.scrollLeft,\n          hideTopRightGridScrollbar = props.hideTopRightGridScrollbar;\n      var _this$state5 = this.state,\n          showHorizontalScrollbar = _this$state5.showHorizontalScrollbar,\n          scrollbarSize = _this$state5.scrollbarSize;\n\n      if (!fixedRowCount) {\n        return null;\n      }\n\n      var additionalColumnCount = showHorizontalScrollbar ? 1 : 0,\n          height = this._getTopGridHeight(props),\n          width = this._getRightGridWidth(props),\n          additionalHeight = showHorizontalScrollbar ? scrollbarSize : 0;\n\n      var gridHeight = height,\n          style = this._topRightGridStyle;\n\n      if (hideTopRightGridScrollbar) {\n        gridHeight = height + additionalHeight;\n        style = _objectSpread({}, this._topRightGridStyle, {\n          left: 0\n        });\n      }\n\n      var topRightGrid = React.createElement(Grid, _extends({}, props, {\n        cellRenderer: this._cellRendererTopRightGrid,\n        className: this.props.classNameTopRightGrid,\n        columnCount: Math.max(0, columnCount - fixedColumnCount) + additionalColumnCount,\n        columnWidth: this._columnWidthRightGrid,\n        deferredMeasurementCache: this._deferredMeasurementCacheTopRightGrid,\n        height: gridHeight,\n        onScroll: enableFixedRowScroll ? this._onScrollLeft : undefined,\n        ref: this._topRightGridRef,\n        rowCount: fixedRowCount,\n        scrollLeft: scrollLeft,\n        style: style,\n        tabIndex: null,\n        width: width\n      }));\n\n      if (hideTopRightGridScrollbar) {\n        return React.createElement(\"div\", {\n          className: \"TopRightGrid_ScrollWrapper\",\n          style: _objectSpread({}, this._topRightGridStyle, {\n            height: height,\n            width: width,\n            overflowX: 'hidden'\n          })\n        }, topRightGrid);\n      }\n\n      return topRightGrid;\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.scrollLeft !== prevState.scrollLeft || nextProps.scrollTop !== prevState.scrollTop) {\n        return {\n          scrollLeft: nextProps.scrollLeft != null && nextProps.scrollLeft >= 0 ? nextProps.scrollLeft : prevState.scrollLeft,\n          scrollTop: nextProps.scrollTop != null && nextProps.scrollTop >= 0 ? nextProps.scrollTop : prevState.scrollTop\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return MultiGrid;\n}(React.PureComponent);\n\n_defineProperty(MultiGrid, \"defaultProps\", {\n  classNameBottomLeftGrid: '',\n  classNameBottomRightGrid: '',\n  classNameTopLeftGrid: '',\n  classNameTopRightGrid: '',\n  enableFixedColumnScroll: false,\n  enableFixedRowScroll: false,\n  fixedColumnCount: 0,\n  fixedRowCount: 0,\n  scrollToColumn: -1,\n  scrollToRow: -1,\n  style: {},\n  styleBottomLeftGrid: {},\n  styleBottomRightGrid: {},\n  styleTopLeftGrid: {},\n  styleTopRightGrid: {},\n  hideTopRightGridScrollbar: false,\n  hideBottomLeftGridScrollbar: false\n});\n\nMultiGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  classNameBottomLeftGrid: PropTypes.string.isRequired,\n  classNameBottomRightGrid: PropTypes.string.isRequired,\n  classNameTopLeftGrid: PropTypes.string.isRequired,\n  classNameTopRightGrid: PropTypes.string.isRequired,\n  enableFixedColumnScroll: PropTypes.bool.isRequired,\n  enableFixedRowScroll: PropTypes.bool.isRequired,\n  fixedColumnCount: PropTypes.number.isRequired,\n  fixedRowCount: PropTypes.number.isRequired,\n  onScrollbarPresenceChange: PropTypes.func,\n  style: PropTypes.object.isRequired,\n  styleBottomLeftGrid: PropTypes.object.isRequired,\n  styleBottomRightGrid: PropTypes.object.isRequired,\n  styleTopLeftGrid: PropTypes.object.isRequired,\n  styleTopRightGrid: PropTypes.object.isRequired,\n  hideTopRightGridScrollbar: PropTypes.bool,\n  hideBottomLeftGridScrollbar: PropTypes.bool\n} : {};\npolyfill(MultiGrid);\nexport default MultiGrid;","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\n/**\n * HOC that simplifies the process of synchronizing scrolling between two or more virtualized components.\n */\n\nvar ScrollSync =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(ScrollSync, _React$PureComponent);\n\n  function ScrollSync(props, context) {\n    var _this;\n\n    _classCallCheck(this, ScrollSync);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollSync).call(this, props, context));\n    _this.state = {\n      clientHeight: 0,\n      clientWidth: 0,\n      scrollHeight: 0,\n      scrollLeft: 0,\n      scrollTop: 0,\n      scrollWidth: 0\n    };\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ScrollSync, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          clientHeight = _this$state.clientHeight,\n          clientWidth = _this$state.clientWidth,\n          scrollHeight = _this$state.scrollHeight,\n          scrollLeft = _this$state.scrollLeft,\n          scrollTop = _this$state.scrollTop,\n          scrollWidth = _this$state.scrollWidth;\n      return children({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        onScroll: this._onScroll,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref) {\n      var clientHeight = _ref.clientHeight,\n          clientWidth = _ref.clientWidth,\n          scrollHeight = _ref.scrollHeight,\n          scrollLeft = _ref.scrollLeft,\n          scrollTop = _ref.scrollTop,\n          scrollWidth = _ref.scrollWidth;\n      this.setState({\n        clientHeight: clientHeight,\n        clientWidth: clientWidth,\n        scrollHeight: scrollHeight,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        scrollWidth: scrollWidth\n      });\n    }\n  }]);\n\n  return ScrollSync;\n}(React.PureComponent);\n\nexport { ScrollSync as default };\nScrollSync.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * Function responsible for rendering 2 or more virtualized components.\n   * This function should implement the following signature:\n   * ({ onScroll, scrollLeft, scrollTop }) => PropTypes.element\n   */\n  children: PropTypes.func.isRequired\n} : {};","import * as React from 'react';\nexport default function defaultHeaderRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      style = _ref.style;\n  return React.createElement(\"div\", {\n    className: className,\n    role: \"row\",\n    style: style\n  }, columns);\n}\ndefaultHeaderRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRowRendererParams;\nimport { bpfrpt_proptype_HeaderRowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","var SortDirection = {\n  /**\n   * Sort items in ascending order.\n   * This means arranging from the lowest value to the highest (e.g. a-z, 0-9).\n   */\n  ASC: 'ASC',\n\n  /**\n   * Sort items in descending order.\n   * This means arranging from the highest value to the lowest (e.g. z-a, 9-0).\n   */\n  DESC: 'DESC'\n};\nexport default SortDirection;","import clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport SortDirection from './SortDirection';\n/**\n * Displayed beside a header to indicate that a Table is currently sorted by this column.\n */\n\nexport default function SortIndicator(_ref) {\n  var sortDirection = _ref.sortDirection;\n  var classNames = clsx('ReactVirtualized__Table__sortableHeaderIcon', {\n    'ReactVirtualized__Table__sortableHeaderIcon--ASC': sortDirection === SortDirection.ASC,\n    'ReactVirtualized__Table__sortableHeaderIcon--DESC': sortDirection === SortDirection.DESC\n  });\n  return React.createElement(\"svg\", {\n    className: classNames,\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 24 24\"\n  }, sortDirection === SortDirection.ASC ? React.createElement(\"path\", {\n    d: \"M7 14l5-5 5 5z\"\n  }) : React.createElement(\"path\", {\n    d: \"M7 10l5 5 5-5z\"\n  }), React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  }));\n}\nSortIndicator.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC])\n} : {};","import * as React from 'react';\nimport SortIndicator from './SortIndicator';\n\n/**\n * Default table header renderer.\n */\nexport default function defaultHeaderRenderer(_ref) {\n  var dataKey = _ref.dataKey,\n      label = _ref.label,\n      sortBy = _ref.sortBy,\n      sortDirection = _ref.sortDirection;\n  var showSortIndicator = sortBy === dataKey;\n  var children = [React.createElement(\"span\", {\n    className: \"ReactVirtualized__Table__headerTruncatedText\",\n    key: \"label\",\n    title: typeof label === 'string' ? label : null\n  }, label)];\n\n  if (showSortIndicator) {\n    children.push(React.createElement(SortIndicator, {\n      key: \"SortIndicator\",\n      sortDirection: sortDirection\n    }));\n  }\n\n  return children;\n}\ndefaultHeaderRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_HeaderRendererParams === PropTypes.any ? {} : bpfrpt_proptype_HeaderRendererParams;\nimport { bpfrpt_proptype_HeaderRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _extends from \"@babel/runtime/helpers/extends\";\nimport * as React from 'react';\n\n/**\n * Default row renderer for Table.\n */\nexport default function defaultRowRenderer(_ref) {\n  var className = _ref.className,\n      columns = _ref.columns,\n      index = _ref.index,\n      key = _ref.key,\n      onRowClick = _ref.onRowClick,\n      onRowDoubleClick = _ref.onRowDoubleClick,\n      onRowMouseOut = _ref.onRowMouseOut,\n      onRowMouseOver = _ref.onRowMouseOver,\n      onRowRightClick = _ref.onRowRightClick,\n      rowData = _ref.rowData,\n      style = _ref.style;\n  var a11yProps = {\n    'aria-rowindex': index + 1\n  };\n\n  if (onRowClick || onRowDoubleClick || onRowMouseOut || onRowMouseOver || onRowRightClick) {\n    a11yProps['aria-label'] = 'row';\n    a11yProps.tabIndex = 0;\n\n    if (onRowClick) {\n      a11yProps.onClick = function (event) {\n        return onRowClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowDoubleClick) {\n      a11yProps.onDoubleClick = function (event) {\n        return onRowDoubleClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOut) {\n      a11yProps.onMouseOut = function (event) {\n        return onRowMouseOut({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowMouseOver) {\n      a11yProps.onMouseOver = function (event) {\n        return onRowMouseOver({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n\n    if (onRowRightClick) {\n      a11yProps.onContextMenu = function (event) {\n        return onRowRightClick({\n          event: event,\n          index: index,\n          rowData: rowData\n        });\n      };\n    }\n  }\n\n  return React.createElement(\"div\", _extends({}, a11yProps, {\n    className: className,\n    key: key,\n    role: \"row\",\n    style: style\n  }), columns);\n}\ndefaultRowRenderer.propTypes = process.env.NODE_ENV === 'production' ? null : bpfrpt_proptype_RowRendererParams === PropTypes.any ? {} : bpfrpt_proptype_RowRendererParams;\nimport { bpfrpt_proptype_RowRendererParams } from \"./types\";\nimport PropTypes from \"prop-types\";","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport SortDirection from './SortDirection';\n/**\n * Describes the header and cell contents of a table column.\n */\n\nvar Column =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Column, _React$Component);\n\n  function Column() {\n    _classCallCheck(this, Column);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Column).apply(this, arguments));\n  }\n\n  return Column;\n}(React.Component);\n\n_defineProperty(Column, \"defaultProps\", {\n  cellDataGetter: defaultCellDataGetter,\n  cellRenderer: defaultCellRenderer,\n  defaultSortDirection: SortDirection.ASC,\n  flexGrow: 0,\n  flexShrink: 1,\n  headerRenderer: defaultHeaderRenderer,\n  style: {}\n});\n\nexport { Column as default };\nColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Optional aria-label value to set on the column header */\n  'aria-label': PropTypes.string,\n\n  /**\n   * Callback responsible for returning a cell's data, given its :dataKey\n   * ({ columnData: any, dataKey: string, rowData: any }): any\n   */\n  cellDataGetter: PropTypes.func,\n\n  /**\n   * Callback responsible for rendering a cell's contents.\n   * ({ cellData: any, columnData: any, dataKey: string, rowData: any, rowIndex: number }): node\n   */\n  cellRenderer: PropTypes.func,\n\n  /** Optional CSS class to apply to cell */\n  className: PropTypes.string,\n\n  /** Optional additional data passed to this column's :cellDataGetter */\n  columnData: PropTypes.object,\n\n  /** Uniquely identifies the row-data attribute corresponding to this cell */\n  dataKey: PropTypes.any.isRequired,\n\n  /** Optional direction to be used when clicked the first time */\n  defaultSortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** If sort is enabled for the table at large, disable it for this column */\n  disableSort: PropTypes.bool,\n\n  /** Flex grow style; defaults to 0 */\n  flexGrow: PropTypes.number,\n\n  /** Flex shrink style; defaults to 1 */\n  flexShrink: PropTypes.number,\n\n  /** Optional CSS class to apply to this column's header */\n  headerClassName: PropTypes.string,\n\n  /**\n   * Optional callback responsible for rendering a column header contents.\n   * ({ columnData: object, dataKey: string, disableSort: boolean, label: node, sortBy: string, sortDirection: string }): PropTypes.node\n   */\n  headerRenderer: PropTypes.func.isRequired,\n\n  /** Optional inline style to apply to this column's header */\n  headerStyle: PropTypes.object,\n\n  /** Optional id to set on the column header */\n  id: PropTypes.string,\n\n  /** Header label for this column */\n  label: PropTypes.node,\n\n  /** Maximum width of column; this property will only be used if :flexGrow is > 0. */\n  maxWidth: PropTypes.number,\n\n  /** Minimum width of column. */\n  minWidth: PropTypes.number,\n\n  /** Optional inline style to apply to cell */\n  style: PropTypes.object,\n\n  /** Flex basis (width) for this column; This value can grow or shrink based on :flexGrow and :flexShrink properties. */\n  width: PropTypes.number.isRequired\n} : {};","import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport clsx from 'clsx';\nimport Column from './Column';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Grid, { accessibilityOverscanIndicesGetter } from '../Grid';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer';\nimport SortDirection from './SortDirection';\n/**\n * Table component with fixed headers and virtualized rows for improved performance with large data sets.\n * This component expects explicit width, height, and padding parameters.\n */\n\nvar Table =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Table, _React$PureComponent);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n    _this.state = {\n      scrollbarWidth: 0\n    };\n    _this._createColumn = _this._createColumn.bind(_assertThisInitialized(_this));\n    _this._createRow = _this._createRow.bind(_assertThisInitialized(_this));\n    _this._onScroll = _this._onScroll.bind(_assertThisInitialized(_this));\n    _this._onSectionRendered = _this._onSectionRendered.bind(_assertThisInitialized(_this));\n    _this._setRef = _this._setRef.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"forceUpdateGrid\",\n    value: function forceUpdateGrid() {\n      if (this.Grid) {\n        this.Grid.forceUpdate();\n      }\n    }\n    /** See Grid#getOffsetForCell */\n\n  }, {\n    key: \"getOffsetForRow\",\n    value: function getOffsetForRow(_ref) {\n      var alignment = _ref.alignment,\n          index = _ref.index;\n\n      if (this.Grid) {\n        var _this$Grid$getOffsetF = this.Grid.getOffsetForCell({\n          alignment: alignment,\n          rowIndex: index\n        }),\n            scrollTop = _this$Grid$getOffsetF.scrollTop;\n\n        return scrollTop;\n      }\n\n      return 0;\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"invalidateCellSizeAfterRender\",\n    value: function invalidateCellSizeAfterRender(_ref2) {\n      var columnIndex = _ref2.columnIndex,\n          rowIndex = _ref2.rowIndex;\n\n      if (this.Grid) {\n        this.Grid.invalidateCellSizeAfterRender({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#measureAllCells */\n\n  }, {\n    key: \"measureAllRows\",\n    value: function measureAllRows() {\n      if (this.Grid) {\n        this.Grid.measureAllCells();\n      }\n    }\n    /** CellMeasurer compatibility */\n\n  }, {\n    key: \"recomputeGridSize\",\n    value: function recomputeGridSize() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref3$columnIndex = _ref3.columnIndex,\n          columnIndex = _ref3$columnIndex === void 0 ? 0 : _ref3$columnIndex,\n          _ref3$rowIndex = _ref3.rowIndex,\n          rowIndex = _ref3$rowIndex === void 0 ? 0 : _ref3$rowIndex;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: rowIndex,\n          columnIndex: columnIndex\n        });\n      }\n    }\n    /** See Grid#recomputeGridSize */\n\n  }, {\n    key: \"recomputeRowHeights\",\n    value: function recomputeRowHeights() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.recomputeGridSize({\n          rowIndex: index\n        });\n      }\n    }\n    /** See Grid#scrollToPosition */\n\n  }, {\n    key: \"scrollToPosition\",\n    value: function scrollToPosition() {\n      var scrollTop = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToPosition({\n          scrollTop: scrollTop\n        });\n      }\n    }\n    /** See Grid#scrollToCell */\n\n  }, {\n    key: \"scrollToRow\",\n    value: function scrollToRow() {\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (this.Grid) {\n        this.Grid.scrollToCell({\n          columnIndex: 0,\n          rowIndex: index\n        });\n      }\n    }\n  }, {\n    key: \"getScrollbarWidth\",\n    value: function getScrollbarWidth() {\n      if (this.Grid) {\n        var _Grid = findDOMNode(this.Grid);\n\n        var clientWidth = _Grid.clientWidth || 0;\n        var offsetWidth = _Grid.offsetWidth || 0;\n        return offsetWidth - clientWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._setScrollbarWidth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          className = _this$props.className,\n          disableHeader = _this$props.disableHeader,\n          gridClassName = _this$props.gridClassName,\n          gridStyle = _this$props.gridStyle,\n          headerHeight = _this$props.headerHeight,\n          headerRowRenderer = _this$props.headerRowRenderer,\n          height = _this$props.height,\n          id = _this$props.id,\n          noRowsRenderer = _this$props.noRowsRenderer,\n          rowClassName = _this$props.rowClassName,\n          rowStyle = _this$props.rowStyle,\n          scrollToIndex = _this$props.scrollToIndex,\n          style = _this$props.style,\n          width = _this$props.width;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var availableRowsHeight = disableHeader ? height : height - headerHeight;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: -1\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: -1\n      }) : rowStyle; // Precompute and cache column styles before rendering rows and columns to speed things up\n\n      this._cachedColumnStyles = [];\n      React.Children.toArray(children).forEach(function (column, index) {\n        var flexStyles = _this2._getFlexStyleForColumn(column, column.props.style);\n\n        _this2._cachedColumnStyles[index] = _objectSpread({\n          overflow: 'hidden'\n        }, flexStyles);\n      }); // Note that we specify :rowCount, :scrollbarWidth, :sortBy, and :sortDirection as properties on Grid even though these have nothing to do with Grid.\n      // This is done because Grid is a pure component and won't update unless its properties or state has changed.\n      // Any property that should trigger a re-render of Grid then is specified here to avoid a stale display.\n\n      return React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        \"aria-labelledby\": this.props['aria-labelledby'],\n        \"aria-colcount\": React.Children.toArray(children).length,\n        \"aria-rowcount\": this.props.rowCount,\n        className: clsx('ReactVirtualized__Table', className),\n        id: id,\n        role: \"grid\",\n        style: style\n      }, !disableHeader && headerRowRenderer({\n        className: clsx('ReactVirtualized__Table__headerRow', rowClass),\n        columns: this._getHeaderColumns(),\n        style: _objectSpread({\n          height: headerHeight,\n          overflow: 'hidden',\n          paddingRight: scrollbarWidth,\n          width: width\n        }, rowStyleObject)\n      }), React.createElement(Grid, _extends({}, this.props, {\n        \"aria-readonly\": null,\n        autoContainerWidth: true,\n        className: clsx('ReactVirtualized__Table__Grid', gridClassName),\n        cellRenderer: this._createRow,\n        columnWidth: width,\n        columnCount: 1,\n        height: availableRowsHeight,\n        id: undefined,\n        noContentRenderer: noRowsRenderer,\n        onScroll: this._onScroll,\n        onSectionRendered: this._onSectionRendered,\n        ref: this._setRef,\n        role: \"rowgroup\",\n        scrollbarWidth: scrollbarWidth,\n        scrollToRow: scrollToIndex,\n        style: _objectSpread({}, gridStyle, {\n          overflowX: 'hidden'\n        })\n      })));\n    }\n  }, {\n    key: \"_createColumn\",\n    value: function _createColumn(_ref4) {\n      var column = _ref4.column,\n          columnIndex = _ref4.columnIndex,\n          isScrolling = _ref4.isScrolling,\n          parent = _ref4.parent,\n          rowData = _ref4.rowData,\n          rowIndex = _ref4.rowIndex;\n      var onColumnClick = this.props.onColumnClick;\n      var _column$props = column.props,\n          cellDataGetter = _column$props.cellDataGetter,\n          cellRenderer = _column$props.cellRenderer,\n          className = _column$props.className,\n          columnData = _column$props.columnData,\n          dataKey = _column$props.dataKey,\n          id = _column$props.id;\n      var cellData = cellDataGetter({\n        columnData: columnData,\n        dataKey: dataKey,\n        rowData: rowData\n      });\n      var renderedCell = cellRenderer({\n        cellData: cellData,\n        columnData: columnData,\n        columnIndex: columnIndex,\n        dataKey: dataKey,\n        isScrolling: isScrolling,\n        parent: parent,\n        rowData: rowData,\n        rowIndex: rowIndex\n      });\n\n      var onClick = function onClick(event) {\n        onColumnClick && onColumnClick({\n          columnData: columnData,\n          dataKey: dataKey,\n          event: event\n        });\n      };\n\n      var style = this._cachedColumnStyles[columnIndex];\n      var title = typeof renderedCell === 'string' ? renderedCell : null; // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n      return React.createElement(\"div\", {\n        \"aria-colindex\": columnIndex + 1,\n        \"aria-describedby\": id,\n        className: clsx('ReactVirtualized__Table__rowColumn', className),\n        key: 'Row' + rowIndex + '-' + 'Col' + columnIndex,\n        onClick: onClick,\n        role: \"gridcell\",\n        style: style,\n        title: title\n      }, renderedCell);\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader(_ref5) {\n      var column = _ref5.column,\n          index = _ref5.index;\n      var _this$props2 = this.props,\n          headerClassName = _this$props2.headerClassName,\n          headerStyle = _this$props2.headerStyle,\n          onHeaderClick = _this$props2.onHeaderClick,\n          sort = _this$props2.sort,\n          sortBy = _this$props2.sortBy,\n          sortDirection = _this$props2.sortDirection;\n      var _column$props2 = column.props,\n          columnData = _column$props2.columnData,\n          dataKey = _column$props2.dataKey,\n          defaultSortDirection = _column$props2.defaultSortDirection,\n          disableSort = _column$props2.disableSort,\n          headerRenderer = _column$props2.headerRenderer,\n          id = _column$props2.id,\n          label = _column$props2.label;\n      var sortEnabled = !disableSort && sort;\n      var classNames = clsx('ReactVirtualized__Table__headerColumn', headerClassName, column.props.headerClassName, {\n        ReactVirtualized__Table__sortableHeaderColumn: sortEnabled\n      });\n\n      var style = this._getFlexStyleForColumn(column, _objectSpread({}, headerStyle, {}, column.props.headerStyle));\n\n      var renderedHeader = headerRenderer({\n        columnData: columnData,\n        dataKey: dataKey,\n        disableSort: disableSort,\n        label: label,\n        sortBy: sortBy,\n        sortDirection: sortDirection\n      });\n      var headerOnClick, headerOnKeyDown, headerTabIndex, headerAriaSort, headerAriaLabel;\n\n      if (sortEnabled || onHeaderClick) {\n        // If this is a sortable header, clicking it should update the table data's sorting.\n        var isFirstTimeSort = sortBy !== dataKey; // If this is the firstTime sort of this column, use the column default sort order.\n        // Otherwise, invert the direction of the sort.\n\n        var newSortDirection = isFirstTimeSort ? defaultSortDirection : sortDirection === SortDirection.DESC ? SortDirection.ASC : SortDirection.DESC;\n\n        var onClick = function onClick(event) {\n          sortEnabled && sort({\n            defaultSortDirection: defaultSortDirection,\n            event: event,\n            sortBy: dataKey,\n            sortDirection: newSortDirection\n          });\n          onHeaderClick && onHeaderClick({\n            columnData: columnData,\n            dataKey: dataKey,\n            event: event\n          });\n        };\n\n        var onKeyDown = function onKeyDown(event) {\n          if (event.key === 'Enter' || event.key === ' ') {\n            onClick(event);\n          }\n        };\n\n        headerAriaLabel = column.props['aria-label'] || label || dataKey;\n        headerAriaSort = 'none';\n        headerTabIndex = 0;\n        headerOnClick = onClick;\n        headerOnKeyDown = onKeyDown;\n      }\n\n      if (sortBy === dataKey) {\n        headerAriaSort = sortDirection === SortDirection.ASC ? 'ascending' : 'descending';\n      } // Avoid using object-spread syntax with multiple objects here,\n      // Since it results in an extra method call to 'babel-runtime/helpers/extends'\n      // See PR https://github.com/bvaughn/react-virtualized/pull/942\n\n\n      return React.createElement(\"div\", {\n        \"aria-label\": headerAriaLabel,\n        \"aria-sort\": headerAriaSort,\n        className: classNames,\n        id: id,\n        key: 'Header-Col' + index,\n        onClick: headerOnClick,\n        onKeyDown: headerOnKeyDown,\n        role: \"columnheader\",\n        style: style,\n        tabIndex: headerTabIndex\n      }, renderedHeader);\n    }\n  }, {\n    key: \"_createRow\",\n    value: function _createRow(_ref6) {\n      var _this3 = this;\n\n      var index = _ref6.rowIndex,\n          isScrolling = _ref6.isScrolling,\n          key = _ref6.key,\n          parent = _ref6.parent,\n          style = _ref6.style;\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          onRowClick = _this$props3.onRowClick,\n          onRowDoubleClick = _this$props3.onRowDoubleClick,\n          onRowRightClick = _this$props3.onRowRightClick,\n          onRowMouseOver = _this$props3.onRowMouseOver,\n          onRowMouseOut = _this$props3.onRowMouseOut,\n          rowClassName = _this$props3.rowClassName,\n          rowGetter = _this$props3.rowGetter,\n          rowRenderer = _this$props3.rowRenderer,\n          rowStyle = _this$props3.rowStyle;\n      var scrollbarWidth = this.state.scrollbarWidth;\n      var rowClass = typeof rowClassName === 'function' ? rowClassName({\n        index: index\n      }) : rowClassName;\n      var rowStyleObject = typeof rowStyle === 'function' ? rowStyle({\n        index: index\n      }) : rowStyle;\n      var rowData = rowGetter({\n        index: index\n      });\n      var columns = React.Children.toArray(children).map(function (column, columnIndex) {\n        return _this3._createColumn({\n          column: column,\n          columnIndex: columnIndex,\n          isScrolling: isScrolling,\n          parent: parent,\n          rowData: rowData,\n          rowIndex: index,\n          scrollbarWidth: scrollbarWidth\n        });\n      });\n      var className = clsx('ReactVirtualized__Table__row', rowClass);\n\n      var flattenedStyle = _objectSpread({}, style, {\n        height: this._getRowHeight(index),\n        overflow: 'hidden',\n        paddingRight: scrollbarWidth\n      }, rowStyleObject);\n\n      return rowRenderer({\n        className: className,\n        columns: columns,\n        index: index,\n        isScrolling: isScrolling,\n        key: key,\n        onRowClick: onRowClick,\n        onRowDoubleClick: onRowDoubleClick,\n        onRowRightClick: onRowRightClick,\n        onRowMouseOver: onRowMouseOver,\n        onRowMouseOut: onRowMouseOut,\n        rowData: rowData,\n        style: flattenedStyle\n      });\n    }\n    /**\n     * Determines the flex-shrink, flex-grow, and width values for a cell (header or column).\n     */\n\n  }, {\n    key: \"_getFlexStyleForColumn\",\n    value: function _getFlexStyleForColumn(column) {\n      var customStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var flexValue = \"\".concat(column.props.flexGrow, \" \").concat(column.props.flexShrink, \" \").concat(column.props.width, \"px\");\n\n      var style = _objectSpread({}, customStyle, {\n        flex: flexValue,\n        msFlex: flexValue,\n        WebkitFlex: flexValue\n      });\n\n      if (column.props.maxWidth) {\n        style.maxWidth = column.props.maxWidth;\n      }\n\n      if (column.props.minWidth) {\n        style.minWidth = column.props.minWidth;\n      }\n\n      return style;\n    }\n  }, {\n    key: \"_getHeaderColumns\",\n    value: function _getHeaderColumns() {\n      var _this4 = this;\n\n      var _this$props4 = this.props,\n          children = _this$props4.children,\n          disableHeader = _this$props4.disableHeader;\n      var items = disableHeader ? [] : React.Children.toArray(children);\n      return items.map(function (column, index) {\n        return _this4._createHeader({\n          column: column,\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"_getRowHeight\",\n    value: function _getRowHeight(rowIndex) {\n      var rowHeight = this.props.rowHeight;\n      return typeof rowHeight === 'function' ? rowHeight({\n        index: rowIndex\n      }) : rowHeight;\n    }\n  }, {\n    key: \"_onScroll\",\n    value: function _onScroll(_ref7) {\n      var clientHeight = _ref7.clientHeight,\n          scrollHeight = _ref7.scrollHeight,\n          scrollTop = _ref7.scrollTop;\n      var onScroll = this.props.onScroll;\n      onScroll({\n        clientHeight: clientHeight,\n        scrollHeight: scrollHeight,\n        scrollTop: scrollTop\n      });\n    }\n  }, {\n    key: \"_onSectionRendered\",\n    value: function _onSectionRendered(_ref8) {\n      var rowOverscanStartIndex = _ref8.rowOverscanStartIndex,\n          rowOverscanStopIndex = _ref8.rowOverscanStopIndex,\n          rowStartIndex = _ref8.rowStartIndex,\n          rowStopIndex = _ref8.rowStopIndex;\n      var onRowsRendered = this.props.onRowsRendered;\n      onRowsRendered({\n        overscanStartIndex: rowOverscanStartIndex,\n        overscanStopIndex: rowOverscanStopIndex,\n        startIndex: rowStartIndex,\n        stopIndex: rowStopIndex\n      });\n    }\n  }, {\n    key: \"_setRef\",\n    value: function _setRef(ref) {\n      this.Grid = ref;\n    }\n  }, {\n    key: \"_setScrollbarWidth\",\n    value: function _setScrollbarWidth() {\n      var scrollbarWidth = this.getScrollbarWidth();\n      this.setState({\n        scrollbarWidth: scrollbarWidth\n      });\n    }\n  }]);\n\n  return Table;\n}(React.PureComponent);\n\n_defineProperty(Table, \"defaultProps\", {\n  disableHeader: false,\n  estimatedRowSize: 30,\n  headerHeight: 0,\n  headerStyle: {},\n  noRowsRenderer: function noRowsRenderer() {\n    return null;\n  },\n  onRowsRendered: function onRowsRendered() {\n    return null;\n  },\n  onScroll: function onScroll() {\n    return null;\n  },\n  overscanIndicesGetter: accessibilityOverscanIndicesGetter,\n  overscanRowCount: 10,\n  rowRenderer: defaultRowRenderer,\n  headerRowRenderer: defaultHeaderRowRenderer,\n  rowStyle: {},\n  scrollToAlignment: 'auto',\n  scrollToIndex: -1,\n  style: {}\n});\n\nexport { Table as default };\nTable.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** This is just set on the grid top element. */\n  'aria-label': PropTypes.string,\n\n  /** This is just set on the grid top element. */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * Removes fixed height from the scrollingContainer so that the total height\n   * of rows can stretch the window. Intended for use with WindowScroller\n   */\n  autoHeight: PropTypes.bool,\n\n  /** One or more Columns describing the data displayed in this row */\n  children: function children(props) {\n    var children = React.Children.toArray(props.children);\n\n    for (var i = 0; i < children.length; i++) {\n      var childType = children[i].type;\n\n      if (childType !== Column && !(childType.prototype instanceof Column)) {\n        return new Error('Table only accepts children of type Column');\n      }\n    }\n  },\n\n  /** Optional CSS class name */\n  className: PropTypes.string,\n\n  /** Disable rendering the header at all */\n  disableHeader: PropTypes.bool,\n\n  /**\n   * Used to estimate the total height of a Table before all of its rows have actually been measured.\n   * The estimated total height is adjusted as rows are rendered.\n   */\n  estimatedRowSize: PropTypes.number.isRequired,\n\n  /** Optional custom CSS class name to attach to inner Grid element. */\n  gridClassName: PropTypes.string,\n\n  /** Optional inline style to attach to inner Grid element. */\n  gridStyle: PropTypes.object,\n\n  /** Optional CSS class to apply to all column headers */\n  headerClassName: PropTypes.string,\n\n  /** Fixed height of header row */\n  headerHeight: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: any[],\n   *   style: any\n   * }): PropTypes.node\n   */\n  headerRowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table header columns. */\n  headerStyle: PropTypes.object,\n\n  /** Fixed/available height for out DOM element */\n  height: PropTypes.number.isRequired,\n\n  /** Optional id */\n  id: PropTypes.string,\n\n  /** Optional renderer to be used in place of table body rows when rowCount is 0 */\n  noRowsRenderer: PropTypes.func,\n\n  /**\n   * Optional callback when a column is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onColumnClick: PropTypes.func,\n\n  /**\n   * Optional callback when a column's header is clicked.\n   * ({ columnData: any, dataKey: string }): void\n   */\n  onHeaderClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowClick: PropTypes.func,\n\n  /**\n   * Callback invoked when a user double-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowDoubleClick: PropTypes.func,\n\n  /**\n   * Callback invoked when the mouse leaves a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOut: PropTypes.func,\n\n  /**\n   * Callback invoked when a user moves the mouse over a table row.\n   * ({ index: number }): void\n   */\n  onRowMouseOver: PropTypes.func,\n\n  /**\n   * Callback invoked when a user right-clicks on a table row.\n   * ({ index: number }): void\n   */\n  onRowRightClick: PropTypes.func,\n\n  /**\n   * Callback invoked with information about the slice of rows that were just rendered.\n   * ({ startIndex, stopIndex }): void\n   */\n  onRowsRendered: PropTypes.func,\n\n  /**\n   * Callback invoked whenever the scroll offset changes within the inner scrollable region.\n   * This callback can be used to sync scrolling between lists, tables, or grids.\n   * ({ clientHeight, scrollHeight, scrollTop }): void\n   */\n  onScroll: PropTypes.func.isRequired,\n\n  /** See Grid#overscanIndicesGetter */\n  overscanIndicesGetter: PropTypes.func.isRequired,\n\n  /**\n   * Number of rows to render above/below the visible bounds of the list.\n   * These rows can help for smoother scrolling on touch devices.\n   */\n  overscanRowCount: PropTypes.number.isRequired,\n\n  /**\n   * Optional CSS class to apply to all table rows (including the header row).\n   * This property can be a CSS class name (string) or a function that returns a class name.\n   * If a function is provided its signature should be: ({ index: number }): string\n   */\n  rowClassName: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n  /**\n   * Callback responsible for returning a data row given an index.\n   * ({ index: number }): any\n   */\n  rowGetter: PropTypes.func.isRequired,\n\n  /**\n   * Either a fixed row height (number) or a function that returns the height of a row given its index.\n   * ({ index: number }): number\n   */\n  rowHeight: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n\n  /** Number of rows in table. */\n  rowCount: PropTypes.number.isRequired,\n\n  /**\n   * Responsible for rendering a table row given an array of columns:\n   * Should implement the following interface: ({\n   *   className: string,\n   *   columns: Array,\n   *   index: number,\n   *   isScrolling: boolean,\n   *   onRowClick: ?Function,\n   *   onRowDoubleClick: ?Function,\n   *   onRowMouseOver: ?Function,\n   *   onRowMouseOut: ?Function,\n   *   rowData: any,\n   *   style: any\n   * }): PropTypes.node\n   */\n  rowRenderer: PropTypes.func,\n\n  /** Optional custom inline style to attach to table rows. */\n  rowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n\n  /** See Grid#scrollToAlignment */\n  scrollToAlignment: PropTypes.oneOf(['auto', 'end', 'start', 'center']).isRequired,\n\n  /** Row index to ensure visible (by forcefully scrolling if necessary) */\n  scrollToIndex: PropTypes.number.isRequired,\n\n  /** Vertical offset. */\n  scrollTop: PropTypes.number,\n\n  /**\n   * Sort function to be called if a sortable header is clicked.\n   * Should implement the following interface: ({\n   *   defaultSortDirection: 'ASC' | 'DESC',\n   *   event: MouseEvent,\n   *   sortBy: string,\n   *   sortDirection: SortDirection\n   * }): void\n   */\n  sort: PropTypes.func,\n\n  /** Table data is currently sorted by this :dataKey (if it is sorted at all) */\n  sortBy: PropTypes.string,\n\n  /** Table data is currently sorted in this direction (if it is sorted at all) */\n  sortDirection: PropTypes.oneOf([SortDirection.ASC, SortDirection.DESC]),\n\n  /** Optional inline style */\n  style: PropTypes.object,\n\n  /** Tab index for focus */\n  tabIndex: PropTypes.number,\n\n  /** Width of list */\n  width: PropTypes.number.isRequired\n} : {};\nimport { bpfrpt_proptype_CellPosition } from \"../Grid\";","/**\n * Default accessor for returning a cell value for a given attribute.\n * This function expects to operate on either a vanilla Object or an Immutable Map.\n * You should override the column's cellDataGetter if your data is some other type of object.\n */\nexport default function defaultCellDataGetter(_ref) {\n  var dataKey = _ref.dataKey,\n      rowData = _ref.rowData;\n\n  if (typeof rowData.get === 'function') {\n    return rowData.get(dataKey);\n  } else {\n    return rowData[dataKey];\n  }\n}\nimport { bpfrpt_proptype_CellDataGetterParams } from \"./types\";","/**\n * Default cell renderer that displays an attribute as a simple string\n * You should override the column's cellRenderer if your data is some other type of object.\n */\nexport default function defaultCellRenderer(_ref) {\n  var cellData = _ref.cellData;\n\n  if (cellData == null) {\n    return '';\n  } else {\n    return String(cellData);\n  }\n}\nimport { bpfrpt_proptype_CellRendererParams } from \"./types\";","import createMultiSort from './createMultiSort';\nimport defaultCellDataGetter from './defaultCellDataGetter';\nimport defaultCellRenderer from './defaultCellRenderer';\nimport defaultHeaderRowRenderer from './defaultHeaderRowRenderer.js';\nimport defaultHeaderRenderer from './defaultHeaderRenderer';\nimport defaultRowRenderer from './defaultRowRenderer';\nimport Column from './Column';\nimport SortDirection from './SortDirection';\nimport SortIndicator from './SortIndicator';\nimport Table from './Table';\nexport default Table;\nexport { createMultiSort, defaultCellDataGetter, defaultCellRenderer, defaultHeaderRowRenderer, defaultHeaderRenderer, defaultRowRenderer, Column, SortDirection, SortIndicator, Table };","import { requestAnimationTimeout, cancelAnimationTimeout } from '../../utils/requestAnimationTimeout';\nvar mountedInstances = [];\nvar originalBodyPointerEvents = null;\nvar disablePointerEventsTimeoutId = null;\n\nfunction enablePointerEventsIfDisabled() {\n  if (disablePointerEventsTimeoutId) {\n    disablePointerEventsTimeoutId = null;\n\n    if (document.body && originalBodyPointerEvents != null) {\n      document.body.style.pointerEvents = originalBodyPointerEvents;\n    }\n\n    originalBodyPointerEvents = null;\n  }\n}\n\nfunction enablePointerEventsAfterDelayCallback() {\n  enablePointerEventsIfDisabled();\n  mountedInstances.forEach(function (instance) {\n    return instance.__resetIsScrolling();\n  });\n}\n\nfunction enablePointerEventsAfterDelay() {\n  if (disablePointerEventsTimeoutId) {\n    cancelAnimationTimeout(disablePointerEventsTimeoutId);\n  }\n\n  var maximumTimeout = 0;\n  mountedInstances.forEach(function (instance) {\n    maximumTimeout = Math.max(maximumTimeout, instance.props.scrollingResetTimeInterval);\n  });\n  disablePointerEventsTimeoutId = requestAnimationTimeout(enablePointerEventsAfterDelayCallback, maximumTimeout);\n}\n\nfunction onScrollWindow(event) {\n  if (event.currentTarget === window && originalBodyPointerEvents == null && document.body) {\n    originalBodyPointerEvents = document.body.style.pointerEvents;\n    document.body.style.pointerEvents = 'none';\n  }\n\n  enablePointerEventsAfterDelay();\n  mountedInstances.forEach(function (instance) {\n    if (instance.props.scrollElement === event.currentTarget) {\n      instance.__handleWindowScrollEvent();\n    }\n  });\n}\n\nexport function registerScrollListener(component, element) {\n  if (!mountedInstances.some(function (instance) {\n    return instance.props.scrollElement === element;\n  })) {\n    element.addEventListener('scroll', onScrollWindow);\n  }\n\n  mountedInstances.push(component);\n}\nexport function unregisterScrollListener(component, element) {\n  mountedInstances = mountedInstances.filter(function (instance) {\n    return instance !== component;\n  });\n\n  if (!mountedInstances.length) {\n    element.removeEventListener('scroll', onScrollWindow);\n\n    if (disablePointerEventsTimeoutId) {\n      cancelAnimationTimeout(disablePointerEventsTimeoutId);\n      enablePointerEventsIfDisabled();\n    }\n  }\n}\nimport { bpfrpt_proptype_WindowScroller } from \"../WindowScroller.js\";","/**\n * Gets the dimensions of the element, accounting for API differences between\n * `window` and other DOM elements.\n */\n// TODO Move this into WindowScroller and import from there\nvar isWindow = function isWindow(element) {\n  return element === window;\n};\n\nvar getBoundingBox = function getBoundingBox(element) {\n  return element.getBoundingClientRect();\n};\n\nexport function getDimensions(scrollElement, props) {\n  if (!scrollElement) {\n    return {\n      height: props.serverHeight,\n      width: props.serverWidth\n    };\n  } else if (isWindow(scrollElement)) {\n    var _window = window,\n        innerHeight = _window.innerHeight,\n        innerWidth = _window.innerWidth;\n    return {\n      height: typeof innerHeight === 'number' ? innerHeight : 0,\n      width: typeof innerWidth === 'number' ? innerWidth : 0\n    };\n  } else {\n    return getBoundingBox(scrollElement);\n  }\n}\n/**\n * Gets the vertical and horizontal position of an element within its scroll container.\n * Elements that have been “scrolled past” return negative values.\n * Handles edge-case where a user is navigating back (history) from an already-scrolled page.\n * In this case the body’s top or left position will be a negative number and this element’s top or left will be increased (by that amount).\n */\n\nexport function getPositionOffset(element, container) {\n  if (isWindow(container) && document.documentElement) {\n    var containerElement = document.documentElement;\n    var elementRect = getBoundingBox(element);\n    var containerRect = getBoundingBox(containerElement);\n    return {\n      top: elementRect.top - containerRect.top,\n      left: elementRect.left - containerRect.left\n    };\n  } else {\n    var scrollOffset = getScrollOffset(container);\n\n    var _elementRect = getBoundingBox(element);\n\n    var _containerRect = getBoundingBox(container);\n\n    return {\n      top: _elementRect.top + scrollOffset.top - _containerRect.top,\n      left: _elementRect.left + scrollOffset.left - _containerRect.left\n    };\n  }\n}\n/**\n * Gets the vertical and horizontal scroll amount of the element, accounting for IE compatibility\n * and API differences between `window` and other DOM elements.\n */\n\nexport function getScrollOffset(element) {\n  if (isWindow(element) && document.documentElement) {\n    return {\n      top: 'scrollY' in window ? window.scrollY : document.documentElement.scrollTop,\n      left: 'scrollX' in window ? window.scrollX : document.documentElement.scrollLeft\n    };\n  } else {\n    return {\n      top: element.scrollTop,\n      left: element.scrollLeft\n    };\n  }\n}","import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _class, _temp;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { registerScrollListener, unregisterScrollListener } from './utils/onScroll';\nimport { getDimensions, getPositionOffset, getScrollOffset } from './utils/dimensions';\nimport createDetectElementResize from '../vendor/detectElementResize';\n\n/**\n * Specifies the number of miliseconds during which to disable pointer events while a scroll is in progress.\n * This improves performance and makes scrolling smoother.\n */\nexport var IS_SCROLLING_TIMEOUT = 150;\n\nvar getWindow = function getWindow() {\n  return typeof window !== 'undefined' ? window : undefined;\n};\n\nvar WindowScroller = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(WindowScroller, _React$PureComponent);\n\n  function WindowScroller() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WindowScroller);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WindowScroller)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"_window\", getWindow());\n\n    _defineProperty(_assertThisInitialized(_this), \"_isMounted\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromTop\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_positionFromLeft\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_detectElementResize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_child\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", _objectSpread({}, getDimensions(_this.props.scrollElement, _this.props), {\n      isScrolling: false,\n      scrollLeft: 0,\n      scrollTop: 0\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerChild\", function (element) {\n      if (element && !(element instanceof Element)) {\n        console.warn('WindowScroller registerChild expects to be passed Element or null');\n      }\n\n      _this._child = element;\n\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onChildScroll\", function (_ref) {\n      var scrollTop = _ref.scrollTop;\n\n      if (_this.state.scrollTop === scrollTop) {\n        return;\n      }\n\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        if (typeof scrollElement.scrollTo === 'function') {\n          scrollElement.scrollTo(0, scrollTop + _this._positionFromTop);\n        } else {\n          scrollElement.scrollTop = scrollTop + _this._positionFromTop;\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_registerResizeListener\", function (element) {\n      if (element === window) {\n        window.addEventListener('resize', _this._onResize, false);\n      } else {\n        _this._detectElementResize.addResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unregisterResizeListener\", function (element) {\n      if (element === window) {\n        window.removeEventListener('resize', _this._onResize, false);\n      } else if (element) {\n        _this._detectElementResize.removeResizeListener(element, _this._onResize);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onResize\", function () {\n      _this.updatePosition();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__handleWindowScrollEvent\", function () {\n      if (!_this._isMounted) {\n        return;\n      }\n\n      var onScroll = _this.props.onScroll;\n      var scrollElement = _this.props.scrollElement;\n\n      if (scrollElement) {\n        var scrollOffset = getScrollOffset(scrollElement);\n        var scrollLeft = Math.max(0, scrollOffset.left - _this._positionFromLeft);\n        var scrollTop = Math.max(0, scrollOffset.top - _this._positionFromTop);\n\n        _this.setState({\n          isScrolling: true,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n\n        onScroll({\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"__resetIsScrolling\", function () {\n      _this.setState({\n        isScrolling: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(WindowScroller, [{\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var scrollElement = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.scrollElement;\n      var onResize = this.props.onResize;\n      var _this$state = this.state,\n          height = _this$state.height,\n          width = _this$state.width;\n      var thisNode = this._child || ReactDOM.findDOMNode(this);\n\n      if (thisNode instanceof Element && scrollElement) {\n        var offset = getPositionOffset(thisNode, scrollElement);\n        this._positionFromTop = offset.top;\n        this._positionFromLeft = offset.left;\n      }\n\n      var dimensions = getDimensions(scrollElement, this.props);\n\n      if (height !== dimensions.height || width !== dimensions.width) {\n        this.setState({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n        onResize({\n          height: dimensions.height,\n          width: dimensions.width\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var scrollElement = this.props.scrollElement;\n      this._detectElementResize = createDetectElementResize();\n      this.updatePosition(scrollElement);\n\n      if (scrollElement) {\n        registerScrollListener(this, scrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var scrollElement = this.props.scrollElement;\n      var prevScrollElement = prevProps.scrollElement;\n\n      if (prevScrollElement !== scrollElement && prevScrollElement != null && scrollElement != null) {\n        this.updatePosition(scrollElement);\n        unregisterScrollListener(this, prevScrollElement);\n        registerScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(prevScrollElement);\n\n        this._registerResizeListener(scrollElement);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var scrollElement = this.props.scrollElement;\n\n      if (scrollElement) {\n        unregisterScrollListener(this, scrollElement);\n\n        this._unregisterResizeListener(scrollElement);\n      }\n\n      this._isMounted = false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state2 = this.state,\n          isScrolling = _this$state2.isScrolling,\n          scrollTop = _this$state2.scrollTop,\n          scrollLeft = _this$state2.scrollLeft,\n          height = _this$state2.height,\n          width = _this$state2.width;\n      return children({\n        onChildScroll: this._onChildScroll,\n        registerChild: this._registerChild,\n        height: height,\n        isScrolling: isScrolling,\n        scrollLeft: scrollLeft,\n        scrollTop: scrollTop,\n        width: width\n      });\n    }\n  }]);\n\n  return WindowScroller;\n}(React.PureComponent), _defineProperty(_class, \"propTypes\", process.env.NODE_ENV === 'production' ? null : {\n  /**\n   * Function responsible for rendering children.\n   * This function should implement the following signature:\n   * ({ height, isScrolling, scrollLeft, scrollTop, width }) => PropTypes.element\n   */\n  \"children\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-resize: ({ height, width }) */\n  \"onResize\": PropTypes.func.isRequired,\n\n  /** Callback to be invoked on-scroll: ({ scrollLeft, scrollTop }) */\n  \"onScroll\": PropTypes.func.isRequired,\n\n  /** Element to attach scroll event listeners. Defaults to window. */\n  \"scrollElement\": PropTypes.oneOfType([PropTypes.any, function () {\n    return (typeof Element === \"function\" ? PropTypes.instanceOf(Element) : PropTypes.any).apply(this, arguments);\n  }]),\n\n  /**\n   * Wait this amount of time after the last scroll event before resetting child `pointer-events`.\n   */\n  \"scrollingResetTimeInterval\": PropTypes.number.isRequired,\n\n  /** Height used for server-side rendering */\n  \"serverHeight\": PropTypes.number.isRequired,\n\n  /** Width used for server-side rendering */\n  \"serverWidth\": PropTypes.number.isRequired\n}), _temp);\n\n_defineProperty(WindowScroller, \"defaultProps\", {\n  onResize: function onResize() {},\n  onScroll: function onScroll() {},\n  scrollingResetTimeInterval: IS_SCROLLING_TIMEOUT,\n  scrollElement: getWindow(),\n  serverHeight: 0,\n  serverWidth: 0\n});\n\nexport { WindowScroller as default };\nimport PropTypes from \"prop-types\";","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n * 5) Added support for injecting custom window object\n **/\nexport default function createDetectElementResize(nonce, hostWindow) {\n  // Check `document` and `window` in case of server-side rendering\n  var _window;\n\n  if (typeof hostWindow !== 'undefined') {\n    _window = hostWindow;\n  } else if (typeof window !== 'undefined') {\n    _window = window;\n  } else if (typeof self !== 'undefined') {\n    _window = self;\n  } else {\n    _window = global;\n  }\n\n  var attachEvent = typeof _window.document !== 'undefined' && _window.document.attachEvent;\n\n  if (!attachEvent) {\n    var requestFrame = function () {\n      var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {\n        return _window.setTimeout(fn, 20);\n      };\n\n      return function (fn) {\n        return raf(fn);\n      };\n    }();\n\n    var cancelFrame = function () {\n      var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;\n      return function (id) {\n        return cancel(id);\n      };\n    }();\n\n    var resetTriggers = function resetTriggers(element) {\n      var triggers = element.__resizeTriggers__,\n          expand = triggers.firstElementChild,\n          contract = triggers.lastElementChild,\n          expandChild = expand.firstElementChild;\n      contract.scrollLeft = contract.scrollWidth;\n      contract.scrollTop = contract.scrollHeight;\n      expandChild.style.width = expand.offsetWidth + 1 + 'px';\n      expandChild.style.height = expand.offsetHeight + 1 + 'px';\n      expand.scrollLeft = expand.scrollWidth;\n      expand.scrollTop = expand.scrollHeight;\n    };\n\n    var checkTriggers = function checkTriggers(element) {\n      return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;\n    };\n\n    var scrollListener = function scrollListener(e) {\n      // Don't measure (which forces) reflow for scrolls that happen inside of children!\n      if (e.target.className && typeof e.target.className.indexOf === 'function' && e.target.className.indexOf('contract-trigger') < 0 && e.target.className.indexOf('expand-trigger') < 0) {\n        return;\n      }\n\n      var element = this;\n      resetTriggers(this);\n\n      if (this.__resizeRAF__) {\n        cancelFrame(this.__resizeRAF__);\n      }\n\n      this.__resizeRAF__ = requestFrame(function () {\n        if (checkTriggers(element)) {\n          element.__resizeLast__.width = element.offsetWidth;\n          element.__resizeLast__.height = element.offsetHeight;\n\n          element.__resizeListeners__.forEach(function (fn) {\n            fn.call(element, e);\n          });\n        }\n      });\n    };\n    /* Detect CSS Animations support to detect element display/re-attach */\n\n\n    var animation = false,\n        keyframeprefix = '',\n        animationstartevent = 'animationstart',\n        domPrefixes = 'Webkit Moz O ms'.split(' '),\n        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),\n        pfx = '';\n    {\n      var elm = _window.document.createElement('fakeelement');\n\n      if (elm.style.animationName !== undefined) {\n        animation = true;\n      }\n\n      if (animation === false) {\n        for (var i = 0; i < domPrefixes.length; i++) {\n          if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {\n            pfx = domPrefixes[i];\n            keyframeprefix = '-' + pfx.toLowerCase() + '-';\n            animationstartevent = startEvents[i];\n            animation = true;\n            break;\n          }\n        }\n      }\n    }\n    var animationName = 'resizeanim';\n    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';\n    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';\n  }\n\n  var createStyles = function createStyles(doc) {\n    if (!doc.getElementById('detectElementResize')) {\n      //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360\n      var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: \" \"; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; z-index: -1; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',\n          head = doc.head || doc.getElementsByTagName('head')[0],\n          style = doc.createElement('style');\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  var addResizeListener = function addResizeListener(element, fn) {\n    if (attachEvent) {\n      element.attachEvent('onresize', fn);\n    } else {\n      if (!element.__resizeTriggers__) {\n        var doc = element.ownerDocument;\n\n        var elementStyle = _window.getComputedStyle(element);\n\n        if (elementStyle && elementStyle.position == 'static') {\n          element.style.position = 'relative';\n        }\n\n        createStyles(doc);\n        element.__resizeLast__ = {};\n        element.__resizeListeners__ = [];\n        (element.__resizeTriggers__ = doc.createElement('div')).className = 'resize-triggers';\n        var resizeTriggersHtml = '<div class=\"expand-trigger\"><div></div></div>' + '<div class=\"contract-trigger\"></div>';\n\n        if (window.trustedTypes) {\n          var staticPolicy = trustedTypes.createPolicy('react-virtualized-auto-sizer', {\n            createHTML: function createHTML() {\n              return resizeTriggersHtml;\n            }\n          });\n          element.__resizeTriggers__.innerHTML = staticPolicy.createHTML('');\n        } else {\n          element.__resizeTriggers__.innerHTML = resizeTriggersHtml;\n        }\n\n        element.appendChild(element.__resizeTriggers__);\n        resetTriggers(element);\n        element.addEventListener('scroll', scrollListener, true);\n        /* Listen for a css animation to detect element display/re-attach */\n\n        if (animationstartevent) {\n          element.__resizeTriggers__.__animationListener__ = function animationListener(e) {\n            if (e.animationName == animationName) {\n              resetTriggers(element);\n            }\n          };\n\n          element.__resizeTriggers__.addEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n        }\n      }\n\n      element.__resizeListeners__.push(fn);\n    }\n  };\n\n  var removeResizeListener = function removeResizeListener(element, fn) {\n    if (attachEvent) {\n      element.detachEvent('onresize', fn);\n    } else {\n      element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n      if (!element.__resizeListeners__.length) {\n        element.removeEventListener('scroll', scrollListener, true);\n\n        if (element.__resizeTriggers__.__animationListener__) {\n          element.__resizeTriggers__.removeEventListener(animationstartevent, element.__resizeTriggers__.__animationListener__);\n\n          element.__resizeTriggers__.__animationListener__ = null;\n        }\n\n        try {\n          element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);\n        } catch (e) {// Preact compat; see developit/preact-compat/issues/228\n        }\n      }\n    }\n  };\n\n  return {\n    addResizeListener: addResizeListener,\n    removeResizeListener: removeResizeListener\n  };\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\n\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"sourceRoot":""}