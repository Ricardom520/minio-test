{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","common/BackLink.tsx","../node_modules/_@mui_system@5.8.6@@mui/system/esm/createBox.js","../node_modules/_@mui_material@5.8.6@@mui/material/Box/Box.js","../node_modules/_@mui_material@5.8.6@@mui/material/Grid/GridContext.js","../node_modules/_@mui_material@5.8.6@@mui/material/Grid/gridClasses.js","../node_modules/_@mui_material@5.8.6@@mui/material/Grid/Grid.js","screens/Console/Configurations/TiersConfiguration/utils.tsx","screens/Console/Configurations/TiersConfiguration/TierTypeSelector.tsx"],"names":["connector","connect","state","sidebarOpen","system","operatorMode","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","link","textDecoration","maxWidth","padding","light","icon","marginRight","to","_excluded","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","React","inProps","ref","useTheme","_extendSxProp","extendSxProp","component","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","clsx","createBox","createTheme","ClassNameGenerator","generate","GridContext","getGridUtilityClass","slot","generateUtilityClass","GRID_SIZES","gridClasses","generateUtilityClasses","map","spacing","wrap","size","getOffset","val","parse","parseFloat","String","replace","GridRoot","name","overridesResolver","props","styles","ownerState","zeroMinWidth","breakpoints","spacingStyles","Number","isNaN","forEach","breakpoint","value","push","resolveSpacingStyles","breakpointsStyles","root","boxSizing","flexWrap","margin","minWidth","directionValues","resolveBreakpointValues","values","handleBreakpoints","propValue","output","flexDirection","indexOf","rowSpacing","rowSpacingValues","themeSpacing","paddingTop","columnSpacing","columnSpacingValues","paddingLeft","keys","reduce","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","undefined","Math","round","more","fullWidth","Object","assign","up","useUtilityClasses","spacingClasses","resolveSpacingClasses","breakpointsClasses","slots","composeClasses","Grid","themeProps","useThemeProps","columnsProp","columnSpacingProp","rowSpacingProp","columnsContext","breakpointsValues","otherFiltered","Provider","children","minioServiceName","gcsServiceName","s3ServiceName","azureServiceName","tierTypes","serviceName","targetTitle","actionsTray","searchField","settingsCommon","typesSelection","containerForHeader","strongText","keyName","iconText","lineHeight","customConfigurationPage","scrollbarWidth","lambdaContainer","customTitle","mainCont","history","mainTitle","centerElements","iconContainer","tierType","index","lambdaNotif","onClick","selectName","lambdaNotifIcon","src","logoButton","alt","lambdaNotifTitle","toString"],"mappings":"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","file":"static/js/45.ddee06d9.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n}\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {actions && (\n        <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n          {actions}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { BackSettingsIcon } from \"../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    link: {\n      display: \"flex\",\n      alignItems: \"center\",\n      textDecoration: \"none\",\n      maxWidth: \"250px\",\n      padding: \"2rem 2rem 0rem 2rem\",\n      color: theme.palette.primary.light,\n      fontSize: \".8rem\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    icon: {\n      marginRight: \".3rem\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  });\n\ninterface IBackLink {\n  classes: any;\n  to: string;\n  label: string;\n}\n\nconst BackLink = ({ to, label, classes }: IBackLink) => {\n  return (\n    <Link to={to} className={classes.link}>\n      <div className={classes.icon}>\n        <BackSettingsIcon />\n      </div>\n      <div>{label}</div>\n    </Link>\n  );\n};\n\nexport default withStyles(styles)(BackLink);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst GridContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\n\nexport default GridContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth', // spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`), // direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`), // wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`), // grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\n\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n\n    if (!size) {\n      return globalStyles;\n    }\n\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      } // Keep 7 significant numbers.\n\n\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      } // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    } // No need for a media query for the first size.\n\n\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n\n    return output;\n  });\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, propValue => {\n      const themeSpacing = theme.spacing(propValue);\n\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n\n      return {};\n    });\n  }\n\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  } // in case of object `spacing`\n\n\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = []; // in case of grid item\n\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  } // in case of string/number `spacing`\n\n\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  } // in case of object `spacing`\n\n\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = []; // in case of grid item\n\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\n\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n\n  const {\n    className,\n    columns: columnsProp,\n    columnSpacing: columnSpacingProp,\n    component = 'div',\n    container = false,\n    direction = 'row',\n    item = false,\n    rowSpacing: rowSpacingProp,\n    spacing = 0,\n    wrap = 'wrap',\n    zeroMinWidth = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext); // columns set with default breakpoint unit of 12\n\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n\n  const otherFiltered = _extends({}, other);\n\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid); // eslint-disable-next-line no-useless-concat\n\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default Grid;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport const minioServiceName = \"minio\";\nexport const gcsServiceName = \"gcs\";\nexport const s3ServiceName = \"s3\";\nexport const azureServiceName = \"azure\";\n\nexport const tierTypes = [\n  {\n    serviceName: minioServiceName,\n    targetTitle: \"MinIO\",\n    logo: \"/minio-logo.svg\",\n  },\n  {\n    serviceName: gcsServiceName,\n    targetTitle: \"Google Cloud Storage\",\n    logo: \"/gcs-logo.svg\",\n  },\n  {\n    serviceName: s3ServiceName,\n    targetTitle: \"AWS S3\",\n    logo: \"/aws-logo.svg\",\n  },\n  {\n    serviceName: azureServiceName,\n    targetTitle: \"Azure\",\n    logo: \"/azure-logo.svg\",\n  },\n];\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  actionsTray,\n  containerForHeader,\n  searchField,\n  settingsCommon,\n  typesSelection,\n} from \"../../Common/FormComponents/common/styleLibrary\";\nimport PageHeader from \"../../Common/PageHeader/PageHeader\";\nimport { tierTypes } from \"./utils\";\nimport BackLink from \"../../../../common/BackLink\";\n\ninterface ITypeTiersConfig {\n  classes: any;\n  history: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...actionsTray,\n    ...searchField,\n    ...settingsCommon,\n    ...typesSelection,\n    ...containerForHeader(theme.spacing(4)),\n    strongText: {\n      fontWeight: 700,\n    },\n    keyName: {\n      marginLeft: 5,\n    },\n    iconText: {\n      lineHeight: \"24px\",\n    },\n    customConfigurationPage: {\n      height: \"calc(100vh - 410px)\",\n      scrollbarWidth: \"none\" as const,\n      \"&::-webkit-scrollbar\": {\n        display: \"none\",\n      },\n    },\n    lambdaContainer: {\n      padding: \"15px 0\",\n    },\n    actionsTray: {\n      ...actionsTray.actionsTray,\n      padding: \"0 38px\",\n    },\n    customTitle: {\n      ...settingsCommon.customTitle,\n      marginTop: 0,\n    },\n    mainCont: {\n      ...settingsCommon.mainCont,\n      maxWidth: 1180,\n    },\n    link: {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main,\n    },\n  });\n\nconst TierTypeSelector = ({ classes, history }: ITypeTiersConfig) => {\n  const typeSelect = (selectName: string) => {\n    history.push(`/tiers/add/${selectName}`);\n  };\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Tier Configuration\" />\n      <Grid container className={classes.mainCont}>\n        <Grid item xs={12}>\n          <Grid item xs={12} className={classes.mainTitle}>\n            <BackLink to=\"/tiers\" label=\"Return to Configured Tiers\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Grid item xs={12}>\n              <Grid item xs={12} className={classes.centerElements}>\n                <div className={classes.iconContainer}>\n                  {tierTypes.map((tierType, index) => (\n                    <button\n                      className={classes.lambdaNotif}\n                      onClick={() => {\n                        typeSelect(tierType.serviceName);\n                      }}\n                      key={`tierOpt-${index.toString}-${tierType.targetTitle}`}\n                    >\n                      <div className={classes.lambdaNotifIcon}>\n                        <img\n                          src={tierType.logo}\n                          className={classes.logoButton}\n                          alt={tierType.targetTitle}\n                        />\n                      </div>\n\n                      <div className={classes.lambdaNotifTitle}>\n                        <b>{tierType.targetTitle}</b>\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(TierTypeSelector);\n"],"sourceRoot":""}