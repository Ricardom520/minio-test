{"version":3,"sources":["../node_modules/_@mui_material@5.8.6@@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/_@mui_material@5.8.6@@mui/material/InputAdornment/InputAdornment.js","../node_modules/_@mui_material@5.8.6@@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/_@mui_material@5.8.6@@mui/material/CircularProgress/CircularProgress.js","screens/LoginPage/types.ts","screens/LoginPage/LoginPage.tsx"],"names":["getInputAdornmentUtilityClass","slot","generateUtilityClass","_span","inputAdornmentClasses","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","position","disablePointerEvents","variant","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","color","vars","palette","action","active","positionStart","hiddenLabel","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","Provider","value","as","clsx","_jsxs","Typography","getCircularProgressUtilityClass","_t","_t2","_t3","_t4","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","transition","transitions","create","main","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","CircularProgress","style","thickness","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","width","role","viewBox","cx","cy","r","fill","strokeWidth","loginStrategyType","inputStyles","makeStyles","createStyles","disabled","borderColor","borderBottomStyle","LoginField","TextField","InputProps","connector","connect","state","loggedIn","userLoggedIn","setErrorSnackMessage","withStyles","avatar","margin","spacing","backgroundColor","secondary","form","submit","boxShadow","padding","errorBlock","justifyContent","zIndex","left","top","fontWeight","fontSize","borderRadius","boxSizing","loginPage","flexFlow","shadowBox","loginContainer","flex","maxWidth","lineHeight","textAlign","background","inputField","loadingLoginStrategy","headerTitle","marginBottom","submitContainer","disclaimer","jwtInput","linearPredef","errorIconStyle","loaderAlignment","flexDirection","retryButton","alignSelf","useState","accessKey","setAccessKey","jwt","setJwt","secretKey","setSecretKey","loginStrategy","unknown","redirect","setLoginStrategy","loginSending","setLoginSending","loadingFetchConfiguration","setLoadingFetchConfiguration","loginStrategyEndpoints","loginStrategyPayload","formSubmit","e","preventDefault","api","invoke","then","localStorage","setItem","encodeFileName","targetPath","getItem","history","push","catch","err","useEffect","loginDetails","loginComponent","Fragment","noValidate","onSubmit","Grid","container","item","xs","fullWidth","id","onChange","target","placeholder","autoComplete","startAdornment","type","Button","LinearProgress","href","serviceAccount","required","onClick","endIcon","RefreshIcon","consoleText","Paper","MainError"],"mappings":"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","file":"static/js/56.a400031c.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _span;\n\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: (theme.vars || theme).palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n        _span || (_span = /*#__PURE__*/_jsx(\"span\", {\n          className: \"notranslate\",\n          children: \"\\u200B\"\n        })) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\n\nlet _ = t => t,\n    _t,\n    _t2,\n    _t3,\n    _t4;\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\n\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nexport interface ILoginDetails {\n  loginStrategy: loginStrategyType;\n  redirect: string;\n}\n\nexport enum loginStrategyType {\n  unknown = \"unknown\",\n  form = \"form\",\n  redirect = \"redirect\",\n  serviceAccount = \"service-account\",\n}\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport {\n  CircularProgress,\n  InputAdornment,\n  LinearProgress,\n  Paper,\n  TextFieldProps,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport { ILoginDetails, loginStrategyType } from \"./types\";\nimport { SystemState } from \"../../types\";\nimport { setErrorSnackMessage, userLoggedIn } from \"../../actions\";\nimport { ErrorResponseHandler } from \"../../common/types\";\nimport api from \"../../common/api\";\nimport history from \"../../history\";\nimport RefreshIcon from \"../../icons/RefreshIcon\";\nimport MainError from \"../Console/Common/MainError/MainError\";\nimport { encodeFileName } from \"../../common/utils\";\nimport { LockIcon, UsersIcon, VersionIcon } from \"../../icons\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n      width: \"100%\", // Fix IE 11 issue.\n    },\n    submit: {\n      margin: \"30px 0px 16px\",\n      height: 40,\n      boxShadow: \"none\",\n      padding: \"16px 30px\",\n    },\n    errorBlock: {\n      backgroundColor: \"#C72C48\",\n      width: 800,\n      height: 64,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      position: \"absolute\",\n      zIndex: 9,\n      left: \"50%\",\n      top: \"50%\",\n\n      color: \"#fff\",\n      fontWeight: 700,\n      fontSize: 14,\n      borderRadius: 8,\n      padding: 10,\n      boxSizing: \"border-box\",\n    },\n    loginPage: {\n      height: \"100%\",\n      display: \"flex\",\n      flexFlow: \"column\",\n      alignItems: \"stretch\",\n      position: \"relative\",\n      padding: 84,\n\n      \"@media (max-width: 900px)\": {\n        padding: 0,\n      },\n    },\n    shadowBox: {\n      boxShadow: \"0px 3px 10px #00000014\",\n      height: \"100%\",\n    },\n    loginContainer: {\n      flex: 1,\n      height: \"100%\",\n\n      \"& .right-items\": {\n        padding: 50,\n        flex: 1,\n        height: \"100%\",\n        display: \"flex\",\n        flexFlow: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        maxWidth: \"33%\",\n\n        \"@media (max-width: 900px)\": {\n          maxWidth: \"100%\",\n          margin: \"auto\",\n        },\n      },\n      \"& .consoleTextBanner\": {\n        fontWeight: 300,\n        fontSize: \"calc(3vw + 3vh + 1.5vmin)\",\n        lineHeight: 1.15,\n        color: \"#ffffff\",\n        flex: 1,\n        textAlign: \"center\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        margin: \"auto\",\n        flexFlow: \"column\",\n        background: \"linear-gradient(120deg,#081c42,#073052)\",\n\n        \"& .logoLine\": {\n          display: \"flex\",\n          alignItems: \"center\",\n          fontSize: 18,\n          marginTop: 40,\n        },\n        \"& .left-items\": {\n          margin: \"auto\",\n          textAlign: \"left\",\n        },\n      },\n    },\n    \"@media (max-width: 900px)\": {\n      loginContainer: {\n        display: \"flex\",\n        flexFlow: \"column\",\n\n        \"& .consoleTextBanner\": {\n          margin: 0,\n          flex: 2,\n\n          \"& .left-items\": {\n            alignItems: \"center\",\n            textAlign: \"center\",\n          },\n\n          \"& .logoLine\": {\n            justifyContent: \"center\",\n          },\n        },\n      },\n    },\n    inputField: {\n      \"& input\": {\n        padding: 5,\n        \"&::placeholder\": {\n          fontSize: 12,\n        },\n        \"@media (max-width: 900px)\": {\n          padding: 10,\n        },\n      },\n      \"& svg\": { height: 16 },\n    },\n\n    loadingLoginStrategy: {\n      textAlign: \"center\",\n    },\n    headerTitle: {\n      marginRight: \"auto\",\n      marginBottom: 15,\n    },\n    submitContainer: {\n      textAlign: \"right\",\n    },\n    disclaimer: {\n      fontSize: 12,\n      marginTop: 30,\n    },\n    jwtInput: {\n      marginTop: 45,\n    },\n    linearPredef: {\n      height: 10,\n    },\n    errorIconStyle: {\n      marginRight: 3,\n    },\n    loaderAlignment: {\n      display: \"flex\",\n      width: \"100%\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n    },\n    retryButton: {\n      alignSelf: \"flex-end\",\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    disabled: {\n      \"&.MuiInput-underline::before\": {\n        borderColor: \"#eaeaea\",\n        borderBottomStyle: \"solid\",\n      },\n    },\n  })\n);\n\nfunction LoginField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      variant=\"standard\"\n      {...props}\n    />\n  );\n}\n\nconst mapState = (state: SystemState) => ({\n  loggedIn: state.loggedIn,\n});\n\nconst connector = connect(mapState, { userLoggedIn, setErrorSnackMessage });\n\n// The inferred type will look like:\n// {isOn: boolean, toggleOn: () => void}\n\ninterface ILoginProps {\n  userLoggedIn: typeof userLoggedIn;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n}\n\ninterface LoginStrategyRoutes {\n  [key: string]: string;\n}\n\ninterface LoginStrategyPayload {\n  [key: string]: any;\n}\n\nconst Login = ({\n  classes,\n  userLoggedIn,\n  setErrorSnackMessage,\n}: ILoginProps) => {\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [jwt, setJwt] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [loginStrategy, setLoginStrategy] = useState<ILoginDetails>({\n    loginStrategy: loginStrategyType.unknown,\n    redirect: \"\",\n  });\n  const [loginSending, setLoginSending] = useState<boolean>(false);\n  const [loadingFetchConfiguration, setLoadingFetchConfiguration] =\n    useState<boolean>(true);\n\n  const loginStrategyEndpoints: LoginStrategyRoutes = {\n    form: \"/reporter/minioServer/api/v1/login\",\n    \"service-account\": \"/reporter/minioServer/api/v1/login/operator\",\n  };\n  const loginStrategyPayload: LoginStrategyPayload = {\n    form: { accessKey, secretKey },\n    \"service-account\": { jwt },\n  };\n\n  const fetchConfiguration = () => {\n    setLoadingFetchConfiguration(true);\n  };\n\n  const formSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoginSending(true);\n    api\n      .invoke(\n        \"POST\",\n        loginStrategyEndpoints[loginStrategy.loginStrategy] || \"/reporter/minioServer/api/v1/login\",\n        loginStrategyPayload[loginStrategy.loginStrategy]\n      )\n      .then(() => {\n        // We set the state in redux\n        userLoggedIn(true);\n        if (loginStrategy.loginStrategy === loginStrategyType.form) {\n          localStorage.setItem(\"userLoggedIn\", encodeFileName(accessKey));\n        }\n        let targetPath = \"/\";\n        if (\n          localStorage.getItem(\"redirect-path\") &&\n          localStorage.getItem(\"redirect-path\") !== \"\"\n        ) {\n          targetPath = `${localStorage.getItem(\"redirect-path\")}`;\n          localStorage.setItem(\"redirect-path\", \"\");\n        }\n        history.push(targetPath);\n      })\n      .catch((err) => {\n        setLoginSending(false);\n        setErrorSnackMessage(err);\n      });\n  };\n\n  useEffect(() => {\n    if (loadingFetchConfiguration) {\n      api\n        .invoke(\"GET\", \"/reporter/minioServer/api/v1/login\")\n        .then((loginDetails: ILoginDetails) => {\n          setLoginStrategy(loginDetails);\n          setLoadingFetchConfiguration(false);\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setErrorSnackMessage(err);\n          setLoadingFetchConfiguration(false);\n        });\n    }\n  }, [loadingFetchConfiguration, setErrorSnackMessage]);\n\n  let loginComponent = null;\n\n  switch (loginStrategy.loginStrategy) {\n    case loginStrategyType.form: {\n      loginComponent = (\n        <React.Fragment>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            className={classes.headerTitle}\n          >\n            Console Login\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={formSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <LoginField\n                  fullWidth\n                  id=\"accessKey\"\n                  className={classes.inputField}\n                  value={accessKey}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setAccessKey(e.target.value)\n                  }\n                  placeholder={\"Enter Username\"}\n                  name=\"accessKey\"\n                  autoComplete=\"username\"\n                  disabled={loginSending}\n                  variant={\"outlined\"}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <UsersIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <LoginField\n                  fullWidth\n                  className={classes.inputField}\n                  value={secretKey}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setSecretKey(e.target.value)\n                  }\n                  name=\"secretKey\"\n                  type=\"password\"\n                  id=\"secretKey\"\n                  autoComplete=\"current-password\"\n                  disabled={loginSending}\n                  placeholder={\"Enter Password\"}\n                  variant={\"outlined\"}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.submitContainer}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                disabled={secretKey === \"\" || accessKey === \"\" || loginSending}\n              >\n                Login\n              </Button>\n            </Grid>\n            <Grid item xs={12} className={classes.linearPredef}>\n              {loginSending && <LinearProgress />}\n            </Grid>\n          </form>\n        </React.Fragment>\n      );\n      break;\n    }\n    case loginStrategyType.redirect: {\n      loginComponent = (\n        <React.Fragment>\n          <Button\n            component={\"a\"}\n            href={loginStrategy.redirect}\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Login with SSO\n          </Button>\n        </React.Fragment>\n      );\n      break;\n    }\n    case loginStrategyType.serviceAccount: {\n      loginComponent = (\n        <React.Fragment>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            className={classes.headerTitle}\n          >\n            Operator Login\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={formSubmit}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} className={classes.jwtInput}>\n                <LoginField\n                  required\n                  className={classes.inputField}\n                  fullWidth\n                  id=\"jwt\"\n                  value={jwt}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    setJwt(e.target.value)\n                  }\n                  name=\"jwt\"\n                  autoComplete=\"off\"\n                  disabled={loginSending}\n                  placeholder={\"Enter JWT\"}\n                  variant={\"outlined\"}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Grid item xs={12} className={classes.submitContainer}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                disabled={jwt === \"\" || loginSending}\n              >\n                Login\n              </Button>\n            </Grid>\n            <Grid item xs={12} className={classes.linearPredef}>\n              {loginSending && <LinearProgress />}\n            </Grid>\n          </form>\n        </React.Fragment>\n      );\n      break;\n    }\n    default:\n      loginComponent = (\n        <div className={classes.loaderAlignment}>\n          {loadingFetchConfiguration ? (\n            <CircularProgress className={classes.loadingLoginStrategy} />\n          ) : (\n            <React.Fragment>\n              <div>\n                <p>An error has occurred, the backend cannot be reached.</p>\n              </div>\n              <div>\n                <Button\n                  onClick={() => {\n                    fetchConfiguration();\n                  }}\n                  endIcon={<RefreshIcon />}\n                  color={\"primary\"}\n                  variant=\"outlined\"\n                  className={classes.retryButton}\n                >\n                  Retry\n                </Button>\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n      );\n  }\n\n  const consoleText =\n    loginStrategy.loginStrategy === loginStrategyType.serviceAccount\n      ? \"Operator\"\n      : \"Console\";\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.loginPage}>\n        <MainError />\n        <div className={classes.shadowBox}>\n          <Grid container className={classes.loginContainer}>\n            <Grid item className=\"consoleTextBanner\">\n              <div className=\"left-items\">\n                <div className=\"text-line1\">Welcome to</div>\n                <div className=\"text-line2\">{consoleText}</div>\n                <div className=\"logoLine\">\n                  <VersionIcon /> MinIO {consoleText}\n                </div>\n              </div>\n            </Grid>\n            <Grid item className=\"right-items\">\n              {loginComponent}\n            </Grid>\n          </Grid>\n        </div>\n      </Paper>\n    </React.Fragment>\n  );\n};\n\nexport default connector(withStyles(styles)(Login));\n"],"sourceRoot":""}