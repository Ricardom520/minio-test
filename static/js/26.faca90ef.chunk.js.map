{"version":3,"sources":["screens/Console/Common/PageHeader/PageHeader.tsx","screens/Console/Common/FormComponents/InputBoxWrapper/InputBoxWrapper.tsx","screens/Console/Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper.tsx","../node_modules/_@babel_runtime@7.18.6@@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/_@mui_system@5.8.6@@mui/system/esm/createBox.js","../node_modules/_@mui_material@5.8.6@@mui/material/Box/Box.js","../node_modules/_@mui_material@5.8.6@@mui/material/internal/switchBaseClasses.js","../node_modules/_@mui_material@5.8.6@@mui/material/internal/SwitchBase.js","screens/Console/Common/FormComponents/SelectWrapper/SelectWrapper.tsx","screens/Console/Common/FormComponents/PredefinedList/PredefinedList.tsx","../node_modules/_lodash@4.17.21@lodash/debounce.js","../node_modules/_lodash@4.17.21@lodash/toNumber.js","screens/Console/Common/FormComponents/RadioGroupSelector/RadioGroupSelector.tsx","../node_modules/_lodash@4.17.21@lodash/now.js","../node_modules/_lodash@4.17.21@lodash/_baseTrim.js","../node_modules/_lodash@4.17.21@lodash/_trimmedEndIndex.js","screens/Console/NotificationEndpoints/utils.ts","screens/Console/Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper.tsx","screens/Console/Common/FormComponents/CSVMultiSelector/CSVMultiSelector.tsx","screens/Console/NotificationEndpoints/ConfTargetGeneric.tsx","screens/Console/NotificationEndpoints/CustomForms/ConfPostgres.tsx","screens/Console/NotificationEndpoints/CustomForms/ConfMySql.tsx","screens/Console/NotificationEndpoints/AddNotificationEndpoint.tsx"],"names":["connector","connect","state","sidebarOpen","system","operatorMode","withStyles","theme","createStyles","headerContainer","width","minHeight","display","backgroundColor","left","boxShadow","label","justifyContent","alignItems","labelStyle","color","fontSize","fontWeight","marginLeft","marginTop","rightMenu","textAlign","logo","fill","palette","primary","main","classes","actions","container","className","direction","xs","sm","md","item","style","height","variant","inputStyles","makeStyles","inputFieldStyles","InputField","props","InputProps","fieldBasic","tooltipHelper","textBoxContainer","flexGrow","position","textBoxWithIcon","paddingRight","errorState","top","right","overlayAction","maxWidth","maxHeight","onChange","value","id","name","type","autoComplete","disabled","multiline","tooltip","index","error","required","placeholder","min","max","overlayIcon","overlayObject","extraInputProps","noLabelMinWidth","inputProps","Fragment","errorInField","inputBoxContainer","htmlFor","noMinWidthLabel","inputLabel","tooltipContainer","title","placement","fullWidth","helperText","inputRebase","onClick","size","disableFocusRipple","disableRipple","disableTouchRipple","StyledSwitch","root","padding","margin","switchBase","transform","common","white","opacity","border","thumb","track","borderRadius","transition","transitions","create","checked","focusVisible","Switch","seeMore","spacing","paper","overflow","flexDirection","paddingTop","addSideBar","tableToolbar","paddingLeft","wrapCell","whiteSpace","wordWrap","minTableHeader","noFound","tableContainer","stickyHeader","actionsTitle","alignSelf","tableBlock","filterField","divContainer","marginBottom","indicatorLabelOn","indicatorLabel","fieldDescription","actionsTray","switchOnly","description","indicatorLabels","switchComponent","clsx","length","component","switchContainer","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_excluded","Box","options","defaultTheme","defaultClassName","generateClassName","styleFunctionSx","defaultStyleFunctionSx","BoxRoot","styled","React","inProps","ref","useTheme","_extendSxProp","extendSxProp","other","_objectWithoutPropertiesLoose","_jsx","_extends","as","createBox","createTheme","ClassNameGenerator","generate","getSwitchBaseUtilityClass","slot","generateUtilityClass","generateUtilityClasses","SwitchBaseRoot","ButtonBase","ownerState","edge","marginRight","SwitchBaseInput","cursor","zIndex","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","inputRef","onBlur","onFocus","readOnly","tabIndex","useControlled","controlled","default","Boolean","setCheckedState","muiFormControl","useFormControl","hasLabelFor","slots","capitalize","input","composeClasses","useUtilityClasses","_jsxs","centerRipple","focusRipple","role","undefined","event","children","nativeEvent","defaultPrevented","newChecked","target","SelectStyled","lineHeight","borderColor","InputBase","fieldContainer","map","option","predefinedList","content","multiLine","prefinedContainer","predefinedTitle","innerContentMultiline","innerContent","isObject","require","now","toNumber","nativeMax","Math","nativeMin","module","exports","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","invokeFunc","time","args","thisArg","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","valueOf","isBinary","test","slice","radioStyles","radioIcons","RadioButton","radioSelectedIcon","radioUnselectedIcon","radioBoxContainer","optionLabel","checkedOption","selectorOptions","currentSelection","disableOptions","displayInColumn","row","selectorOption","control","Date","trimmedEndIndex","reTrimStart","string","replace","reWhitespace","charAt","notifyPostgres","notifyMysql","notifyKafka","notifyAmqp","notifyMqtt","notifyRedis","notifyNats","notifyElasticsearch","notifyWebhooks","notifyNsq","notificationTransform","notificationElements","element","service_name","service","account_id","status","servicesList","actionTrigger","targetTitle","commonFields","removeEmptyFields","formFields","filter","field","notificationEndpointsFields","cssOutlinedInput","rootContainer","borderWidth","rows","InputLabelProps","shrink","notchedOutline","inputWithBorder","overflowY","labelContainer","elements","commonPlaceholder","withBorder","useState","currentElements","setCurrentElements","bottomList","createRef","useEffect","elementsSplit","split","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeElement","persist","updatedElement","get","debounce","elementsString","trim","join","inputs","InputBoxWrapper","toString","AddIcon","elementsUp","cpList","addEmptyLine","Grid","InputLabel","Tooltip","HelpIcon","valueDef","key","defaults","defValue","storedConfig","find","formFieldStyles","formFieldRow","minWidth","background","flex","modalBasic","fields","defaultVals","valueHolder","setValueHolder","fieldsElements","defValList","values","forEach","stateInsert","setValueElement","valuesDup","fieldDefinition","FormSwitchWrapper","CommentBoxWrapper","fieldBox","useConnectionString","setUseConnectionString","connectionString","setConnectionString","host","setHostname","dbName","setDbName","port","setPort","user","setUser","password","setPassword","sslMode","setSslMode","table","setTable","format","setFormat","queueDir","setQueueDir","queueLimit","setQueueLimit","comment","setComment","configToString","useCallback","strValue","cs","kv","keys","valueIndexes","indexOf","sort","n1","n2","kvFields","Map","j","substr","set","parseConnectionString","configureString","SelectWrapper","PredefinedList","RadioGroupSelector","useDsnString","setUseDsnString","dsnString","setDsnString","configToDsnString","m","regex","exec","lastIndex","parseDsnString","mapDispatchToProps","serverNeedsRestart","setErrorSnackMessage","settingsCommon","strongText","keyName","buttonContainer","lambdaFormIndicator","customTitle","lambdaNotif","lambdaNotifIcon","lambdaNotifTitle","fontFamily","mainCont","backTo","match","saveAndRefresh","valuesArr","setValueArr","saving","setSaving","params","payload","key_values","api","invoke","then","history","catch","srvComponent","onValueChange","newValue","ConfTargetGeneric","targetElement","PageHeader","noValidate","onSubmit","preventDefault","backButton","src","logoButton","alt","settingsButtonContainer","Button"],"mappings":"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","file":"static/js/26.faca90ef.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Typography from \"@mui/material/Typography\";\nimport { AppState } from \"../../../../store\";\nimport { connect } from \"react-redux\";\nimport OperatorLogo from \"../../../../icons/OperatorLogo\";\nimport ConsoleLogo from \"../../../../icons/ConsoleLogo\";\nimport { Box } from \"@mui/material\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    headerContainer: {\n      // position: \"absolute\",\n      width: \"100%\",\n      minHeight: 79,\n      display: \"flex\",\n      backgroundColor: \"#fff\",\n      left: 0,\n      boxShadow: \"rgba(0,0,0,.08) 0 3px 10px\",\n    },\n    label: {\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    labelStyle: {\n      color: \"#000\",\n      fontSize: 18,\n      fontWeight: 700,\n      marginLeft: 34,\n      marginTop: 8,\n    },\n    rightMenu: {\n      textAlign: \"right\",\n    },\n    logo: {\n      marginLeft: 34,\n      fill: theme.palette.primary.main,\n      \"& .min-icon\": {\n        width: 120,\n      },\n    },\n  });\n\ninterface IPageHeader {\n  classes: any;\n  sidebarOpen?: boolean;\n  operatorMode?: boolean;\n  label: any;\n  actions?: any;\n}\n\nconst PageHeader = ({\n  classes,\n  label,\n  actions,\n  sidebarOpen,\n  operatorMode,\n}: IPageHeader) => {\n  return (\n    <Grid\n      container\n      className={`${classes.headerContainer} page-header`}\n      direction=\"row\"\n      alignItems=\"center\"\n    >\n      <Box display={{ xs: \"block\", sm: \"block\", md: \"none\" }}>\n        <Grid item xs={12} style={{ height: 10 }}>\n          &nbsp;\n        </Grid>\n      </Box>\n      <Grid item xs={12} sm={12} md={6} className={classes.label}>\n        {!sidebarOpen && (\n          <div className={classes.logo}>\n            {operatorMode ? <OperatorLogo /> : <ConsoleLogo />}\n          </div>\n        )}\n        <Typography variant=\"h4\" className={classes.labelStyle}>\n          {label}\n        </Typography>\n      </Grid>\n      {actions && (\n        <Grid item xs={12} sm={12} md={6} className={classes.rightMenu}>\n          {actions}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nconst mapState = (state: AppState) => ({\n  sidebarOpen: state.system.sidebarOpen,\n  operatorMode: state.system.operatorMode,\n});\n\nconst connector = connect(mapState, null);\n\nexport default connector(withStyles(styles)(PageHeader));\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport {\n  Grid,\n  IconButton,\n  InputLabel,\n  TextField,\n  TextFieldProps,\n  Tooltip,\n} from \"@mui/material\";\nimport { OutlinedInputProps } from \"@mui/material/OutlinedInput\";\nimport { InputProps as StandardInputProps } from \"@mui/material/Input\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport {\n  fieldBasic,\n  inputFieldStyles,\n  tooltipHelper,\n} from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface InputBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  multiline?: boolean;\n  type?: string;\n  tooltip?: string;\n  autoComplete?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n  min?: string;\n  max?: string;\n  overlayIcon?: any;\n  overlayAction?: () => void;\n  overlayObject?: any;\n  extraInputProps?: StandardInputProps[\"inputProps\"];\n  noLabelMinWidth?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    textBoxWithIcon: {\n      position: \"relative\",\n      paddingRight: 25,\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    overlayAction: {\n      position: \"absolute\",\n      right: 5,\n      top: 6,\n      \"& svg\": {\n        maxWidth: 15,\n        maxHeight: 15,\n      },\n      \"&.withLabel\": {\n        top: 5,\n      },\n    },\n  });\n\nconst inputStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    ...inputFieldStyles,\n  })\n);\n\nfunction InputField(props: TextFieldProps) {\n  const classes = inputStyles();\n\n  return (\n    <TextField\n      InputProps={{ classes } as Partial<OutlinedInputProps>}\n      {...props}\n    />\n  );\n}\n\nconst InputBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  type = \"text\",\n  autoComplete = \"off\",\n  disabled = false,\n  multiline = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  min,\n  max,\n  overlayIcon = null,\n  overlayObject = null,\n  extraInputProps = {},\n  overlayAction,\n  noLabelMinWidth = false,\n  classes,\n}: InputBoxProps) => {\n  let inputProps: any = { \"data-index\": index, ...extraInputProps };\n\n  if (type === \"number\" && min) {\n    inputProps[\"min\"] = min;\n  }\n\n  if (type === \"number\" && max) {\n    inputProps[\"max\"] = max;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid\n        container\n        className={` ${\n          error !== \"\" ? classes.errorInField : classes.inputBoxContainer\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel\n            htmlFor={id}\n            className={\n              noLabelMinWidth ? classes.noMinWidthLabel : classes.inputLabel\n            }\n          >\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <InputField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            type={type}\n            multiline={multiline}\n            autoComplete={autoComplete}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            className={classes.inputRebase}\n          />\n          {overlayIcon && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              <IconButton\n                onClick={\n                  overlayAction\n                    ? () => {\n                        overlayAction();\n                      }\n                    : () => null\n                }\n                size={\"small\"}\n                disableFocusRipple={false}\n                disableRipple={false}\n                disableTouchRipple={false}\n              >\n                {overlayIcon}\n              </IconButton>\n            </div>\n          )}\n          {overlayObject && (\n            <div\n              className={`${classes.overlayAction} ${\n                label !== \"\" ? \"withLabel\" : \"\"\n              }`}\n            >\n              {overlayObject}\n            </div>\n          )}\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(InputBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { InputLabel, Switch, Tooltip, Typography } from \"@mui/material\";\nimport Grid from \"@mui/material/Grid\";\nimport { actionsTray, fieldBasic } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport clsx from \"clsx\";\n\ninterface IFormSwitch {\n  label?: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  description?: string;\n  index?: number;\n  checked: boolean;\n  switchOnly?: boolean;\n  indicatorLabels?: string[];\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    seeMore: {\n      marginTop: theme.spacing(3),\n    },\n    paper: {\n      display: \"flex\",\n      overflow: \"auto\",\n      flexDirection: \"column\",\n      paddingTop: 15,\n      boxShadow: \"none\",\n    },\n    addSideBar: {\n      width: \"320px\",\n      padding: \"20px\",\n    },\n    tableToolbar: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(0),\n    },\n    wrapCell: {\n      maxWidth: \"200px\",\n      whiteSpace: \"normal\",\n      wordWrap: \"break-word\",\n    },\n    minTableHeader: {\n      color: \"#393939\",\n      \"& tr\": {\n        \"& th\": {\n          fontWeight: \"bold\",\n        },\n      },\n    },\n    noFound: {\n      textAlign: \"center\",\n      padding: \"10px 0\",\n    },\n    tableContainer: {\n      maxHeight: 200,\n    },\n    stickyHeader: {\n      backgroundColor: \"#fff\",\n    },\n    actionsTitle: {\n      fontWeight: 600,\n      color: \"#081C42\",\n      fontSize: 16,\n      alignSelf: \"center\",\n    },\n    tableBlock: {\n      marginTop: 15,\n    },\n    filterField: {\n      width: 375,\n      fontWeight: 600,\n      \"& .input\": {\n        \"&::placeholder\": {\n          fontWeight: 600,\n          color: \"#081C42\",\n        },\n      },\n    },\n    divContainer: {\n      marginBottom: 20,\n    },\n    indicatorLabelOn: {\n      fontWeight: \"bold\",\n      color: \"#081C42 !important\",\n    },\n    indicatorLabel: {\n      fontSize: 12,\n      color: \"#E2E2E2\",\n      margin: \"0 8px 0 10px\",\n    },\n    fieldDescription: {\n      marginTop: 4,\n      color: \"#999999\",\n    },\n    tooltip: {\n      fontSize: 16,\n    },\n    ...actionsTray,\n    ...fieldBasic,\n  });\n\nconst StyledSwitch = withStyles((theme) => ({\n  root: {\n    width: 50,\n    height: 24,\n    padding: 0,\n    margin: 0,\n  },\n  switchBase: {\n    padding: 1,\n    \"&$checked\": {\n      transform: \"translateX(24px)\",\n      color: theme.palette.common.white,\n      \"& + $track\": {\n        backgroundColor: \"#4CCB92\",\n        boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n        opacity: 1,\n        border: \"none\",\n      },\n    },\n    \"&$focusVisible $thumb\": {\n      color: \"#4CCB92\",\n      border: \"6px solid #fff\",\n    },\n  },\n  thumb: {\n    width: 22,\n    height: 22,\n    backgroundColor: \"#FAFAFA\",\n    border: \"2px solid #FFFFFF\",\n    marginLeft: 1,\n  },\n  track: {\n    borderRadius: 24 / 2,\n    backgroundColor: \"#E2E2E2\",\n    boxShadow: \"inset 0px 1px 4px rgba(0,0,0,0.1)\",\n    opacity: 1,\n    transition: theme.transitions.create([\"background-color\", \"border\"]),\n  },\n  checked: {},\n  focusVisible: {},\n}))(Switch);\n\nconst FormSwitchWrapper = ({\n  label = \"\",\n  onChange,\n  value,\n  id,\n  name,\n  checked = false,\n  disabled = false,\n  switchOnly = false,\n  tooltip = \"\",\n  description = \"\",\n  classes,\n  indicatorLabels,\n}: IFormSwitch) => {\n  const switchComponent = (\n    <React.Fragment>\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: !checked,\n          })}\n        >\n          {indicatorLabels && indicatorLabels.length > 1\n            ? indicatorLabels[1]\n            : \"OFF\"}\n        </span>\n      )}\n      <StyledSwitch\n        checked={checked}\n        onChange={onChange}\n        color=\"primary\"\n        name={name}\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\n        disabled={disabled}\n        disableRipple\n        disableFocusRipple\n        disableTouchRipple\n        value={value}\n      />\n      {!switchOnly && (\n        <span\n          className={clsx(classes.indicatorLabel, {\n            [classes.indicatorLabelOn]: checked,\n          })}\n        >\n          {indicatorLabels ? indicatorLabels[0] : \"ON\"}\n        </span>\n      )}\n    </React.Fragment>\n  );\n\n  if (switchOnly) {\n    return switchComponent;\n  }\n\n  return (\n    <div className={classes.divContainer}>\n      <Grid container alignItems={\"center\"}>\n        <Grid item xs>\n          <Grid container>\n            <Grid item xs={12} sm={4} md={3}>\n              {label !== \"\" && (\n                <InputLabel htmlFor={id} className={classes.inputLabel}>\n                  <span>{label}</span>\n                  {tooltip !== \"\" && (\n                    <div className={classes.tooltipContainer}>\n                      <Tooltip title={tooltip} placement=\"top-start\">\n                        <div className={classes.tooltip}>\n                          <HelpIcon />\n                        </div>\n                      </Tooltip>\n                    </div>\n                  )}\n                </InputLabel>\n              )}\n            </Grid>\n            <Grid item xs={12} sm textAlign={\"left\"}>\n              {description !== \"\" && (\n                <Typography component=\"p\" className={classes.fieldDescription}>\n                  {description}\n                </Typography>\n              )}\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid\n          item\n          xs={12}\n          sm={2}\n          textAlign={\"right\"}\n          className={classes.switchContainer}\n        >\n          {switchComponent}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(FormSwitchWrapper);\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport defaultStyleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName,\n    styleFunctionSx = defaultStyleFunctionSx\n  } = options;\n  const BoxRoot = styled('div')(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n\n    const _extendSxProp = extendSxProp(inProps),\n          {\n      className,\n      component = 'div'\n    } = _extendSxProp,\n          other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"checked\", \"checkedIcon\", \"className\", \"defaultChecked\", \"disabled\", \"disableFocusRipple\", \"edge\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport ButtonBase from '../ButtonBase';\nimport { getSwitchBaseUtilityClass } from './switchBaseClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\n\nconst SwitchBaseRoot = styled(ButtonBase)(({\n  ownerState\n}) => _extends({\n  padding: 9,\n  borderRadius: '50%'\n}, ownerState.edge === 'start' && {\n  marginLeft: ownerState.size === 'small' ? -3 : -12\n}, ownerState.edge === 'end' && {\n  marginRight: ownerState.size === 'small' ? -3 : -12\n}));\nconst SwitchBaseInput = styled('input')({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n/**\n * @ignore - internal component.\n */\n\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required,\n    tabIndex,\n    type,\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  let disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n\n  const ownerState = _extends({}, props, {\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, _extends({\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor && id,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type\n    }, type === 'checkbox' && value === undefined ? {} : {\n      value\n    }, inputProps)), checked ? checkedIcon : icon]\n  }));\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  InputBase,\n  Tooltip,\n  SelectChangeEvent,\n} from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface selectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface SelectProps {\n  options: selectorTypes[];\n  value: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  onChange: (e: SelectChangeEvent<string>) => void;\n  disabled?: boolean;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n  });\n\nconst SelectStyled = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      height: 38,\n      lineHeight: 1,\n      \"label + &\": {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      height: 38,\n      position: \"relative\",\n      color: \"#07193E\",\n      fontSize: 13,\n      fontWeight: 600,\n      padding: \"8px 20px 10px 10px\",\n      border: \"#e5e5e5 1px solid\",\n      borderRadius: 4,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        borderColor: \"#393939\",\n      },\n      \"&:focus\": {\n        backgroundColor: \"#fff\",\n      },\n    },\n  })\n)(InputBase);\n\nconst SelectWrapper = ({\n  classes,\n  id,\n  name,\n  onChange,\n  options,\n  label,\n  tooltip = \"\",\n  value,\n  disabled = false,\n}: SelectProps) => {\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>{label}</span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n        <FormControl fullWidth>\n          <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            input={<SelectStyled />}\n            disabled={disabled}\n          >\n            {options.map((option) => (\n              <MenuItem\n                value={option.value}\n                key={`select-${name}-${option.label}`}\n              >\n                {option.label}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(SelectWrapper);\n","import React, { Fragment } from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { predefinedList } from \"../common/styleLibrary\";\n\ninterface IPredefinedList {\n  classes: any;\n  label?: string;\n  content: any;\n  multiLine?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...predefinedList,\n  });\n\nconst PredefinedList = ({\n  classes,\n  label = \"\",\n  content,\n  multiLine = false,\n}: IPredefinedList) => {\n  return (\n    <Fragment>\n      <Grid className={classes.prefinedContainer}>\n        {label !== \"\" && (\n          <Grid item xs={12} className={classes.predefinedTitle}>\n            {label}\n          </Grid>\n        )}\n        <Grid item xs={12} className={classes.predefinedList}>\n          <Grid\n            item\n            xs={12}\n            className={\n              multiLine ? classes.innerContentMultiline : classes.innerContent\n            }\n          >\n            {content}\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default withStyles(styles)(PredefinedList);\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport Grid from \"@mui/material/Grid\";\nimport RadioGroup from \"@mui/material/RadioGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Radio, { RadioProps } from \"@mui/material/Radio\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport makeStyles from \"@mui/styles/makeStyles\";\nimport { fieldBasic, radioIcons, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\nexport interface SelectorTypes {\n  label: string;\n  value: string;\n}\n\ninterface RadioGroupProps {\n  selectorOptions: SelectorTypes[];\n  currentSelection: string;\n  label: string;\n  id: string;\n  name: string;\n  tooltip?: string;\n  disableOptions?: boolean;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  classes: any;\n  displayInColumn?: boolean;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    radioBoxContainer: {},\n    optionLabel: {\n      \"&.Mui-disabled\": {\n        \"& .MuiFormControlLabel-label\": {\n          color: \"#9c9c9c\",\n        },\n      },\n      \"&:last-child\": {\n        marginRight: 0,\n      },\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n      },\n    },\n    checkedOption: {\n      \"& .MuiFormControlLabel-label\": {\n        fontSize: 12,\n        color: \"#07193E\",\n        fontWeight: 700,\n      },\n    },\n  });\n\nconst radioStyles = makeStyles({\n  root: {\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n  ...radioIcons,\n});\n\nconst RadioButton = (props: RadioProps) => {\n  const classes = radioStyles();\n\n  return (\n    <Radio\n      className={classes.root}\n      disableRipple\n      color=\"default\"\n      checkedIcon={<span className={classes.radioSelectedIcon} />}\n      icon={<span className={classes.radioUnselectedIcon} />}\n      {...props}\n    />\n  );\n};\n\nexport const RadioGroupSelector = ({\n  selectorOptions = [],\n  currentSelection,\n  label,\n  id,\n  name,\n  onChange,\n  tooltip = \"\",\n  disableOptions = false,\n  classes,\n  displayInColumn = false,\n}: RadioGroupProps) => {\n  return (\n    <Grid container alignItems={\"center\"}>\n      <Grid item xs>\n        <InputLabel htmlFor={id} className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n      </Grid>\n      <Grid item xs>\n        <RadioGroup\n          aria-label={id}\n          id={id}\n          name={name}\n          value={currentSelection}\n          onChange={onChange}\n          row={!displayInColumn}\n          style={{ display: \"block\", textAlign: \"right\" }}\n        >\n          {selectorOptions.map((selectorOption) => {\n            return (\n              <FormControlLabel\n                key={`rd-${name}-${selectorOption.value}`}\n                value={selectorOption.value}\n                control={<RadioButton />}\n                label={selectorOption.label}\n                disabled={disableOptions}\n                className={clsx(classes.optionLabel, {\n                  [classes.checkedOption]:\n                    selectorOption.value === currentSelection,\n                })}\n              />\n            );\n          })}\n        </RadioGroup>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(RadioGroupSelector);\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport { NotificationEndpointItem } from \"./types\";\n\nimport { IElementValue } from \"../Configurations/types\";\n\nexport const notifyPostgres = \"notify_postgres\";\nexport const notifyMysql = \"notify_mysql\";\nexport const notifyKafka = \"notify_kafka\";\nexport const notifyAmqp = \"notify_amqp\";\nexport const notifyMqtt = \"notify_mqtt\";\nexport const notifyRedis = \"notify_redis\";\nexport const notifyNats = \"notify_nats\";\nexport const notifyElasticsearch = \"notify_elasticsearch\";\nexport const notifyWebhooks = \"notify_webhook\";\nexport const notifyNsq = \"notify_nsq\";\n\nexport const notificationTransform = (\n  notificationElements: NotificationEndpointItem[]\n) => {\n  return notificationElements.map((element) => {\n    return {\n      service_name: `${element.service}:${element.account_id}`,\n      status: element.status,\n    };\n  });\n};\n\nexport const servicesList = [\n  {\n    actionTrigger: notifyPostgres,\n    targetTitle: \"Postgres SQL\",\n    logo: \"/postgres-logo.svg\",\n  },\n  {\n    actionTrigger: notifyKafka,\n    targetTitle: \"Kafka\",\n    logo: \"/kafka-logo.svg\",\n  },\n  {\n    actionTrigger: notifyAmqp,\n    targetTitle: \"AMQP\",\n    logo: \"/amqp-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMqtt,\n    targetTitle: \"MQTT\",\n    logo: \"/mqtt-logo.svg\",\n  },\n  {\n    actionTrigger: notifyRedis,\n    targetTitle: \"Redis\",\n    logo: \"/redis-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNats,\n    targetTitle: \"NATS\",\n    logo: \"/nats-logo.svg\",\n  },\n  {\n    actionTrigger: notifyMysql,\n    targetTitle: \"Mysql\",\n    logo: \"/mysql-logo.svg\",\n  },\n  {\n    actionTrigger: notifyElasticsearch,\n    targetTitle: \"Elastic Search\",\n    logo: \"/elasticsearch-logo.svg\",\n  },\n  {\n    actionTrigger: notifyWebhooks,\n    targetTitle: \"Webhook\",\n    logo: \"/webhooks-logo.svg\",\n  },\n  {\n    actionTrigger: notifyNsq,\n    targetTitle: \"NSQ\",\n    logo: \"/nsq-logo.svg\",\n  },\n];\n\nconst commonFields = [\n  {\n    name: \"queue-dir\",\n    label: \"Queue Directory\",\n    required: true,\n\n    tooltip: \"staging dir for undelivered messages e.g. '/home/events'\",\n    type: \"string\",\n    placeholder: \"Enter Queue Directory\",\n  },\n  {\n    name: \"queue-limit\",\n    label: \"Queue Limit\",\n    required: false,\n\n    tooltip: \"maximum limit for undelivered messages, defaults to '10000'\",\n    type: \"number\",\n    placeholder: \"Enter Queue Limit\",\n  },\n  {\n    name: \"comment\",\n    label: \"Comment\",\n    required: false,\n    type: \"comment\",\n    placeholder: \"Enter Comment\",\n  },\n];\n\nexport const removeEmptyFields = (formFields: IElementValue[]) => {\n  const nonEmptyFields = formFields.filter((field) => field.value !== \"\");\n\n  return nonEmptyFields;\n};\n\nexport const notificationEndpointsFields: any = {\n  [notifyKafka]: [\n    {\n      name: \"brokers\",\n      label: \"Brokers\",\n      required: true,\n\n      tooltip: \"Comma separated list of Kafka broker addresses\",\n      type: \"string\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      label: \"Topic\",\n      tooltip: \"Kafka topic used for bucket notifications\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"sasl_username\",\n      label: \"SASL Username\",\n      tooltip: \"Username for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Username\",\n    },\n    {\n      name: \"sasl_password\",\n      label: \"SASL Password\",\n      tooltip: \"Password for SASL/PLAIN or SASL/SCRAM authentication\",\n      type: \"string\",\n      placeholder: \"Enter SASL Password\",\n    },\n    {\n      name: \"sasl_mechanism\",\n      label: \"SASL Mechanism\",\n      tooltip: \"SASL authentication mechanism, default 'PLAIN'\",\n      type: \"string\",\n    },\n    {\n      name: \"tls_client_auth\",\n      label: \"TLS Client Auth\",\n      tooltip:\n        \"Client Auth determines the Kafka server's policy for TLS client auth\",\n      type: \"string\",\n      placeholder: \"Enter TLS Client Auth\",\n    },\n    {\n      name: \"sasl\",\n      label: \"SASL\",\n      tooltip: \"Set to 'on' to enable SASL authentication\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS skip verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"client_tls_cert\",\n      label: \"client TLS cert\",\n      tooltip: \"Path to client certificate for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Cert\",\n    },\n    {\n      name: \"client_tls_key\",\n      label: \"client TLS key\",\n      tooltip: \"Path to client key for mTLS auth\",\n      type: \"path\",\n      placeholder: \"Enter TLS Client Key\",\n    },\n    {\n      name: \"version\",\n      label: \"Version\",\n      tooltip: \"Specify the version of the Kafka cluster e.g '2.2.0'\",\n      type: \"string\",\n      placeholder: \"Enter Kafka Version\",\n    },\n    ...commonFields,\n  ],\n  [notifyAmqp]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"AMQP server endpoint e.g. `amqp://myuser:mypassword@localhost:5672`\",\n      type: \"url\",\n    },\n    {\n      name: \"exchange\",\n      label: \"Exchange\",\n      tooltip: \"Name of the AMQP exchange\",\n      type: \"string\",\n      placeholder: \"Enter Exchange\",\n    },\n    {\n      name: \"exchange_type\",\n      label: \"Exchange Type\",\n      tooltip: \"AMQP exchange type\",\n      type: \"string\",\n      placeholder: \"Enter Exchange Type\",\n    },\n    {\n      name: \"routing_key\",\n      label: \"Routing Key\",\n      tooltip: \"Routing key for publishing\",\n      type: \"string\",\n      placeholder: \"Enter Routing Key\",\n    },\n    {\n      name: \"mandatory\",\n      label: \"Mandatory\",\n      tooltip:\n        \"Quietly ignore undelivered messages when set to 'off', default is 'on'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"durable\",\n      label: \"Durable\",\n      tooltip:\n        \"Persist queue across broker restarts when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"no_wait\",\n      label: \"No Wait\",\n      tooltip:\n        \"Non-blocking message delivery when set to 'on', default is 'off'\",\n      type: \"on|off\",\n    },\n    {\n      name: \"internal\",\n      label: \"Internal\",\n      tooltip:\n        \"Set to 'on' for exchange to be not used directly by publishers, but only when bound to other exchanges\",\n      type: \"on|off\",\n    },\n    {\n      name: \"auto_deleted\",\n      label: \"Auto Deleted\",\n      tooltip:\n        \"Auto delete queue when set to 'on', when there are no consumers\",\n      type: \"on|off\",\n    },\n    {\n      name: \"delivery_mode\",\n      label: \"Delivery Mode\",\n      tooltip: \"Set to '1' for non-persistent or '2' for persistent queue\",\n      type: \"number\",\n      placeholder: \"Enter Delivery Mode\",\n    },\n    ...commonFields,\n  ],\n  [notifyRedis]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"Redis server's address. For example: `localhost:6379`\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"key\",\n      required: true,\n      label: \"Key\",\n      tooltip: \"Redis key to store/update events, key is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Key\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"Redis server password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    ...commonFields,\n  ],\n  [notifyMqtt]: [\n    {\n      name: \"broker\",\n      required: true,\n      label: \"Broker\",\n      tooltip: \"MQTT server endpoint e.g. `tcp://localhost:1883`\",\n      type: \"uri\",\n      placeholder: \"Enter Brokers\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"name of the MQTT topic to publish\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"MQTT username\",\n      type: \"string\",\n      placeholder: \"Enter Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"MQTT password\",\n      type: \"string\",\n      placeholder: \"Enter Password\",\n    },\n    {\n      name: \"qos\",\n      label: \"QOS\",\n      tooltip: \"Set the quality of service priority, defaults to '0'\",\n      type: \"number\",\n      placeholder: \"Enter QOS\",\n    },\n    {\n      name: \"keep_alive_interval\",\n      label: \"Keep Alive Interval\",\n      tooltip: \"Keep-alive interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Keep Alive Internal\",\n    },\n    {\n      name: \"reconnect_interval\",\n      label: \"Reconnect Interval\",\n      tooltip: \"Reconnect interval for MQTT connections in s,m,h,d\",\n      type: \"duration\",\n      placeholder: \"Enter Reconnect Interval\",\n    },\n    ...commonFields,\n  ],\n  [notifyNats]: [\n    {\n      name: \"address\",\n      required: true,\n      label: \"Address\",\n      tooltip: \"NATS server address e.g. '0.0.0.0:4222'\",\n      type: \"address\",\n      placeholder: \"Enter Address\",\n    },\n    {\n      name: \"subject\",\n      required: true,\n      label: \"Subject\",\n      tooltip: \"NATS subscription subject\",\n      type: \"string\",\n      placeholder: \"Enter NATS Subject\",\n    },\n    {\n      name: \"username\",\n      label: \"Username\",\n      tooltip: \"NATS username\",\n      type: \"string\",\n      placeholder: \"Enter NATS Username\",\n    },\n    {\n      name: \"password\",\n      label: \"Password\",\n      tooltip: \"NATS password\",\n      type: \"string\",\n      placeholder: \"Enter NATS password\",\n    },\n    {\n      name: \"token\",\n      label: \"Token\",\n      tooltip: \"NATS token\",\n      type: \"string\",\n      placeholder: \"Enter NATS token\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"Set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'Trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    {\n      name: \"ping_interval\",\n      label: \"Ping Interval\",\n      tooltip: \"Client ping commands interval in s,m,h,d. Disabled by default\",\n      type: \"duration\",\n      placeholder: \"Enter Ping Interval\",\n    },\n    {\n      name: \"streaming\",\n      label: \"Streaming\",\n      tooltip: \"Set to 'on', to use streaming NATS server\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_async\",\n      label: \"Streaming async\",\n      tooltip: \"Set to 'on', to enable asynchronous publish\",\n      type: \"on|off\",\n    },\n    {\n      name: \"streaming_max_pub_acks_in_flight\",\n      label: \"Streaming max publish ACKS in flight\",\n      tooltip: \"Number of messages to publish without waiting for ACKs\",\n      type: \"number\",\n      placeholder: \"Enter Streaming in flight value\",\n    },\n    {\n      name: \"streaming_cluster_id\",\n      label: \"Streaming Cluster ID\",\n      tooltip: \"Unique ID for NATS streaming cluster\",\n      type: \"string\",\n      placeholder: \"Enter Streaming Cluster ID\",\n    },\n    {\n      name: \"cert_authority\",\n      label: \"Cert Authority\",\n      tooltip: \"Path to certificate chain of the target NATS server\",\n      type: \"string\",\n      placeholder: \"Enter Cert Authority\",\n    },\n    {\n      name: \"client_cert\",\n      label: \"Client Cert\",\n      tooltip: \"Client cert for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Cert\",\n    },\n    {\n      name: \"client_key\",\n      label: \"Client Key\",\n      tooltip: \"Client cert key for NATS mTLS auth\",\n      type: \"string\",\n      placeholder: \"Enter Client Key\",\n    },\n    ...commonFields,\n  ],\n  [notifyElasticsearch]: [\n    {\n      name: \"url\",\n      required: true,\n      label: \"URL\",\n      tooltip:\n        \"Elasticsearch server's address, with optional authentication info\",\n      type: \"url\",\n      placeholder: \"Enter URL\",\n    },\n    {\n      name: \"index\",\n      required: true,\n      label: \"Index\",\n      tooltip:\n        \"Elasticsearch index to store/update events, index is auto-created\",\n      type: \"string\",\n      placeholder: \"Enter Index\",\n    },\n    {\n      name: \"format\",\n      required: true,\n      label: \"Format\",\n      tooltip:\n        \"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\",\n      type: \"enum\",\n      placeholder: \"Enter Format\",\n    },\n    ...commonFields,\n  ],\n  [notifyWebhooks]: [\n    {\n      name: \"endpoint\",\n      required: true,\n      label: \"Endpoint\",\n      tooltip:\n        \"webhook server endpoint e.g. http://localhost:8080/minio/events\",\n      type: \"url\",\n      placeholder: \"Enter Endpoint\",\n    },\n    {\n      name: \"auth_token\",\n      label: \"Auth Token\",\n      tooltip: \"opaque string or JWT authorization token\",\n      type: \"string\",\n      placeholder: \"Enter auth_token\",\n    },\n    ...commonFields,\n  ],\n  [notifyNsq]: [\n    {\n      name: \"nsqd_address\",\n      required: true,\n      label: \"NSQD Address\",\n      tooltip: \"NSQ server address e.g. '127.0.0.1:4150'\",\n      type: \"address\",\n      placeholder: \"Enter nsqd_address\",\n    },\n    {\n      name: \"topic\",\n      required: true,\n      label: \"Topic\",\n      tooltip: \"NSQ topic\",\n      type: \"string\",\n      placeholder: \"Enter Topic\",\n    },\n    {\n      name: \"tls\",\n      label: \"TLS\",\n      tooltip: \"set to 'on' to enable TLS\",\n      type: \"on|off\",\n    },\n    {\n      name: \"tls_skip_verify\",\n      label: \"TLS Skip Verify\",\n      tooltip:\n        'trust server TLS without verification, defaults to \"on\" (verify)',\n      type: \"on|off\",\n    },\n    ...commonFields,\n  ],\n};\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React from \"react\";\nimport { Grid, InputLabel, TextField, Tooltip } from \"@mui/material\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\n\ninterface CommentBoxProps {\n  label: string;\n  classes: any;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string | boolean;\n  id: string;\n  name: string;\n  disabled?: boolean;\n  tooltip?: string;\n  index?: number;\n  error?: string;\n  required?: boolean;\n  placeholder?: string;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputLabel: {\n      ...fieldBasic.inputLabel,\n      marginBottom: 16,\n      fontSize: 14,\n    },\n    textBoxContainer: {\n      flexGrow: 1,\n      position: \"relative\",\n    },\n    errorState: {\n      color: \"#b53b4b\",\n      fontSize: 14,\n      position: \"absolute\",\n      top: 7,\n      right: 7,\n    },\n    cssOutlinedInput: {\n      borderColor: \"#EAEAEA\",\n      padding: 16,\n    },\n    rootContainer: {\n      \"& .MuiOutlinedInput-inputMultiline\": {\n        ...fieldBasic.inputLabel,\n        fontSize: 13,\n        minHeight: 150,\n      },\n      \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n        borderColor: \"#07193E\",\n        borderWidth: 1,\n      },\n      \"& textarea\": {\n        color: \"#07193E\",\n        fontSize: 13,\n        fontWeight: 600,\n        \"&:placeholder\": {\n          color: \"#393939\",\n          opacity: 1,\n        },\n      },\n    },\n  });\n\nconst CommentBoxWrapper = ({\n  label,\n  onChange,\n  value,\n  id,\n  name,\n  disabled = false,\n  tooltip = \"\",\n  index = 0,\n  error = \"\",\n  required = false,\n  placeholder = \"\",\n  classes,\n}: CommentBoxProps) => {\n  let inputProps: any = { \"data-index\": index };\n\n  return (\n    <React.Fragment>\n      <Grid\n        item\n        xs={12}\n        className={`${classes.fieldContainer} ${\n          error !== \"\" ? classes.errorInField : \"\"\n        }`}\n      >\n        {label !== \"\" && (\n          <InputLabel htmlFor={id} className={classes.inputLabel}>\n            <span>\n              {label}\n              {required ? \"*\" : \"\"}\n            </span>\n            {tooltip !== \"\" && (\n              <div className={classes.tooltipContainer}>\n                <Tooltip title={tooltip} placement=\"top-start\">\n                  <div className={classes.tooltip}>\n                    <HelpIcon />\n                  </div>\n                </Tooltip>\n              </div>\n            )}\n          </InputLabel>\n        )}\n\n        <div className={classes.textBoxContainer}>\n          <TextField\n            id={id}\n            name={name}\n            fullWidth\n            value={value}\n            disabled={disabled}\n            onChange={onChange}\n            multiline\n            rows={5}\n            inputProps={inputProps}\n            error={error !== \"\"}\n            helperText={error}\n            placeholder={placeholder}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            InputProps={{\n              classes: {\n                notchedOutline: classes.cssOutlinedInput,\n                root: classes.rootContainer,\n              },\n            }}\n            variant=\"outlined\"\n          />\n        </div>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default withStyles(styles)(CommentBoxWrapper);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  useState,\n  useEffect,\n  createRef,\n  useLayoutEffect,\n  ChangeEvent,\n  useRef,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { InputLabel, Tooltip } from \"@mui/material\";\nimport { fieldBasic, tooltipHelper } from \"../common/styleLibrary\";\nimport HelpIcon from \"../../../../../icons/HelpIcon\";\nimport InputBoxWrapper from \"../InputBoxWrapper/InputBoxWrapper\";\nimport AddIcon from \"../../../../../icons/AddIcon\";\n\ninterface ICSVMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  commonPlaceholder?: string;\n  classes: any;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...fieldBasic,\n    ...tooltipHelper,\n    inputWithBorder: {\n      border: \"1px solid #EAEAEA\",\n      padding: 15,\n      height: 150,\n      overflowY: \"auto\",\n      position: \"relative\",\n      marginTop: 15,\n    },\n    labelContainer: {\n      display: \"flex\",\n    },\n  });\n\nconst CSVMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  commonPlaceholder = \"\",\n  onChange,\n  withBorder = false,\n  classes,\n}: ICSVMultiSelector) => {\n  const [currentElements, setCurrentElements] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentElements.length === 1 &&\n      currentElements[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\",\");\n      elementsSplit.push(\"\");\n\n      setCurrentElements(elementsSplit);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [elements, currentElements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    if (currentElements.length > 1) {\n      const refScroll = bottomList.current;\n      if (refScroll) {\n        refScroll.scrollIntoView(false);\n      }\n    }\n  }, [currentElements, bottomList]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentElements]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = (elementsUp: string[]) => {\n    if (elementsUp[elementsUp.length - 1].trim() !== \"\") {\n      const cpList = [...elementsUp];\n      cpList.push(\"\");\n      setCurrentElements(cpList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeElement = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentElements];\n    const index = get(e.target, \"dataset.index\", 0);\n    updatedElement[index] = e.target.value;\n\n    setCurrentElements(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    const elementsString = currentElements\n      .filter((element) => element.trim() !== \"\")\n      .join(\",\");\n\n    onChange(elementsString);\n  }, 500);\n\n  const inputs = currentElements.map((element, index) => {\n    return (\n      <InputBoxWrapper\n        id={`${name}-${index.toString()}`}\n        label={\"\"}\n        classes={classes}\n        name={`${name}-${index.toString()}`}\n        value={currentElements[index]}\n        onChange={onChangeElement}\n        index={index}\n        key={`csv-${name}-${index.toString()}`}\n        placeholder={commonPlaceholder}\n        overlayIcon={index === currentElements.length - 1 ? <AddIcon /> : null}\n        overlayAction={() => {\n          addEmptyLine(currentElements);\n        }}\n      />\n    );\n  });\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} className={classes.fieldContainer}>\n        <InputLabel className={classes.inputLabel}>\n          <span>{label}</span>\n          {tooltip !== \"\" && (\n            <div className={classes.tooltipContainer}>\n              <Tooltip title={tooltip} placement=\"top-start\">\n                <div className={classes.tooltip}>\n                  <HelpIcon />\n                </div>\n              </Tooltip>\n            </div>\n          )}\n        </InputLabel>\n        <Grid\n          item\n          xs={12}\n          className={`${withBorder ? classes.inputWithBorder : \"\"}`}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\nexport default withStyles(styles)(CSVMultiSelector);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport { IElementValue, KVField } from \"../Configurations/types\";\nimport {\n  fieldBasic,\n  formFieldStyles,\n  modalBasic,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport InputBoxWrapper from \"../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport CSVMultiSelector from \"../Common/FormComponents/CSVMultiSelector/CSVMultiSelector\";\nimport CommentBoxWrapper from \"../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\n\ninterface IConfGenericProps {\n  onChange: (newValue: IElementValue[]) => void;\n  fields: KVField[];\n  defaultVals?: IElementValue[];\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...formFieldStyles,\n    formFieldRow: {\n      ...formFieldStyles.formFieldRow,\n    },\n    inputBoxContainer: {\n      marginBottom: 7,\n      \"& .MuiInputLabel-root\": {\n        minWidth: 200,\n        \"& svg\": {\n          width: 16,\n          height: 16,\n        },\n      },\n      \"& div[class|='InputBoxWrapper-textBoxContainer']\": {\n        display: \"flex\",\n      },\n    },\n    overlayAction: {\n      top: 0,\n      right: 0,\n      position: \"relative\",\n      marginLeft: 10,\n      display: \"flex\",\n      alignItems: \"center\",\n      \"& button\": {\n        background: \"#EAEAEA\",\n      },\n    },\n    fieldContainer: {\n      \"& .MuiInputLabel-root\": {\n        flex: 1,\n        minWidth: 200,\n      },\n      \"& div[class|='CommentBoxWrapper-textBoxContainer']\": {\n        flexGrow: 1,\n        width: \"100%\",\n      },\n    },\n    tooltipContainer: {\n      ...fieldBasic.tooltipContainer,\n      \"& svg\": {\n        width: 16,\n        height: 16,\n      },\n    },\n\n    ...modalBasic,\n  });\n\n// Function to get defined values,\n//we make this because the backed sometimes don't return all the keys when there is an initial configuration\nexport const valueDef = (\n  key: string,\n  type: string,\n  defaults: IElementValue[]\n) => {\n  let defValue = type === \"on|off\" ? \"false\" : \"\";\n\n  if (defaults.length > 0) {\n    const storedConfig = defaults.find((element) => element.key === key);\n\n    if (storedConfig) {\n      defValue = storedConfig.value;\n    }\n  }\n\n  return defValue;\n};\n\nconst ConfTargetGeneric = ({\n  onChange,\n  fields,\n  defaultVals,\n  classes,\n}: IConfGenericProps) => {\n  const [valueHolder, setValueHolder] = useState<IElementValue[]>([]);\n  const fieldsElements = !fields ? [] : fields;\n  const defValList = !defaultVals ? [] : defaultVals;\n\n  // Effect to create all the values to hold\n  useEffect(() => {\n    const values: IElementValue[] = [];\n    fields.forEach((field) => {\n      const stateInsert: IElementValue = {\n        key: field.name,\n        value: valueDef(field.name, field.type, defValList),\n      };\n      values.push(stateInsert);\n    });\n\n    setValueHolder(values);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fields, defaultVals]);\n\n  useEffect(() => {\n    onChange(valueHolder);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [valueHolder]);\n\n  const setValueElement = (key: string, value: string, index: number) => {\n    const valuesDup = [...valueHolder];\n    valuesDup[index] = { key, value };\n\n    setValueHolder(valuesDup);\n  };\n\n  const fieldDefinition = (field: KVField, item: number) => {\n    switch (field.type) {\n      case \"on|off\":\n        const value = valueHolder[item] ? valueHolder[item].value : \"false\";\n\n        return (\n          <FormSwitchWrapper\n            classes={classes}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              const value = e.target.checked ? \"true\" : \"false\";\n              setValueElement(field.name, value, item);\n            }}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            value={\"switch_on\"}\n            tooltip={field.tooltip}\n            checked={value === \"true\"}\n          />\n        );\n      case \"csv\":\n        return (\n          <CSVMultiSelector\n            classes={classes}\n            elements={valueHolder[item] ? valueHolder[item].value : \"\"}\n            label={field.label}\n            name={field.name}\n            onChange={(value: string) =>\n              setValueElement(field.name, value, item)\n            }\n            tooltip={field.tooltip}\n            commonPlaceholder={field.placeholder}\n            withBorder={true}\n          />\n        );\n      case \"comment\":\n        return (\n          <CommentBoxWrapper\n            classes={classes}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            placeholder={field.placeholder}\n          />\n        );\n      default:\n        return (\n          <InputBoxWrapper\n            classes={classes}\n            id={field.name}\n            name={field.name}\n            label={field.label}\n            tooltip={field.tooltip}\n            value={valueHolder[item] ? valueHolder[item].value : \"\"}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setValueElement(field.name, e.target.value, item)\n            }\n            multiline={!!field.multiline}\n            placeholder={field.placeholder}\n          />\n        );\n    }\n  };\n\n  return (\n    <Grid container>\n      <Grid xs={12} item className={classes.fieldBox}>\n        {fieldsElements.map((field, item) => (\n          <Grid item xs={12} key={field.name} className={classes.formFieldRow}>\n            {fieldDefinition(field, item)}\n          </Grid>\n        ))}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfTargetGeneric);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport SelectWrapper from \"../../Common/FormComponents/SelectWrapper/SelectWrapper\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface IConfPostgresProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst ConfPostgres = ({ onChange, classes }: IConfPostgresProps) => {\n  //Local States\n  const [useConnectionString, setUseConnectionString] =\n    useState<boolean>(false);\n  const [connectionString, setConnectionString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [sslMode, setSslMode] = useState<string>(\" \");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // connection_string*  (string)             Postgres server connection-string e.g. \"host=localhost port=5432 dbname=minio_events user=postgres password=password sslmode=disable\"\n\n  //  \"host=localhost\n  // port=5432\n  //dbname=minio_events\n  //user=postgres\n  //password=password\n  //sslmode=disable\"\n\n  // table*              (string)             DB table name to store/update events, table is auto-created\n  // format*             (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir           (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit         (number)             maximum limit for undelivered messages, defaults to '10000'\n  // comment             (sentence)           optionally add a comment to this setting\n\n  const KvSeparator = \"=\";\n  const parseConnectionString = (\n    input: string,\n    keys: string[]\n  ): Map<string, string> => {\n    let valueIndexes: number[] = [];\n\n    for (const key of keys) {\n      const i = input.indexOf(key + KvSeparator);\n      if (i === -1) {\n        continue;\n      }\n      valueIndexes.push(i);\n    }\n    valueIndexes.sort((n1, n2) => n1 - n2);\n\n    let kvFields = new Map<string, string>();\n    let fields: string[] = new Array<string>(valueIndexes.length);\n    for (let i = 0; i < valueIndexes.length; i++) {\n      const j = i + 1;\n      if (j < valueIndexes.length) {\n        fields[i] = input.substr(\n          valueIndexes[i],\n          valueIndexes[j] - valueIndexes[i]\n        );\n      } else {\n        fields[i] = input.substr(valueIndexes[i]);\n      }\n    }\n\n    for (let field of fields) {\n      if (field === undefined) {\n        continue;\n      }\n      const key = field.substr(0, field.indexOf(\"=\"));\n      const value = field.substr(field.indexOf(\"=\") + 1).trim();\n      kvFields.set(key, value);\n    }\n    return kvFields;\n  };\n\n  const configToString = useCallback((): string => {\n    let strValue = \"\";\n    if (host !== \"\") {\n      strValue = `${strValue} host=${host}`;\n    }\n    if (dbName !== \"\") {\n      strValue = `${strValue} dbname=${dbName}`;\n    }\n    if (user !== \"\") {\n      strValue = `${strValue} user=${user}`;\n    }\n    if (password !== \"\") {\n      strValue = `${strValue} password=${password}`;\n    }\n    if (port !== \"\") {\n      strValue = `${strValue} port=${port}`;\n    }\n    if (sslMode !== \" \") {\n      strValue = `${strValue} sslmode=${sslMode}`;\n    }\n\n    strValue = `${strValue} `;\n\n    return strValue.trim();\n  }, [host, dbName, user, password, port, sslMode]);\n\n  useEffect(() => {\n    if (connectionString !== \"\") {\n      const formValues = [\n        { key: \"connection_string\", value: connectionString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [\n    connectionString,\n    table,\n    format,\n    queueDir,\n    queueLimit,\n    comment,\n    onChange,\n  ]);\n\n  useEffect(() => {\n    const cs = configToString();\n    setConnectionString(cs);\n  }, [\n    user,\n    dbName,\n    password,\n    port,\n    sslMode,\n    host,\n    setConnectionString,\n    configToString,\n  ]);\n\n  useEffect(() => {\n    if (useConnectionString) {\n      // build connection_string\n      const cs = configToString();\n      setConnectionString(cs);\n\n      return;\n    }\n    // parse connection_string\n    const kv = parseConnectionString(connectionString, [\n      \"host\",\n      \"port\",\n      \"dbname\",\n      \"user\",\n      \"password\",\n      \"sslmode\",\n    ]);\n    setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n    setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n    setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n    setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n    setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    setSslMode(kv.get(\"sslmode\") ? kv.get(\"sslmode\") + \"\" : \" \");\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [useConnectionString]);\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          label={\"Manually Configure String\"}\n          checked={useConnectionString}\n          id=\"manualString\"\n          name=\"manualString\"\n          onChange={(e) => {\n            setUseConnectionString(e.target.checked);\n          }}\n          value={\"manualString\"}\n        />\n      </Grid>\n      {useConnectionString ? (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"connection-string\"\n              name=\"connection_string\"\n              label=\"Connection String\"\n              value={connectionString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setConnectionString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Grid item xs={12} className={classes.configureString}>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <SelectWrapper\n                  value={sslMode}\n                  label=\"\"\n                  id=\"sslmode\"\n                  name=\"sslmode\"\n                  onChange={(e): void => {\n                    if (e.target.value !== undefined) {\n                      setSslMode(e.target.value + \"\");\n                    }\n                  }}\n                  options={[\n                    { label: \"Enter SSL Mode\", value: \" \" },\n                    { label: \"Require\", value: \"require\" },\n                    { label: \"Disable\", value: \"disable\" },\n                    { label: \"Verify CA\", value: \"verify-ca\" },\n                    { label: \"Verify Full\", value: \"verify-full\" },\n                  ]}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  type=\"password\"\n                  placeholder=\"Enter Password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <PredefinedList\n            label={\"Connection String\"}\n            content={connectionString}\n          />\n          <Grid item xs={12}>\n            <br />\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder={\"Enter Table Name\"}\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <RadioGroupSelector\n          currentSelection={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Directory\"\n          value={queueDir}\n          tooltip=\"staging dir for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter Comment\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfPostgres);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport Grid from \"@mui/material/Grid\";\nimport InputBoxWrapper from \"../../Common/FormComponents/InputBoxWrapper/InputBoxWrapper\";\nimport RadioGroupSelector from \"../../Common/FormComponents/RadioGroupSelector/RadioGroupSelector\";\nimport { IElementValue } from \"../../Configurations/types\";\nimport { modalBasic } from \"../../Common/FormComponents/common/styleLibrary\";\nimport CommentBoxWrapper from \"../../Common/FormComponents/CommentBoxWrapper/CommentBoxWrapper\";\nimport FormSwitchWrapper from \"../../Common/FormComponents/FormSwitchWrapper/FormSwitchWrapper\";\nimport PredefinedList from \"../../Common/FormComponents/PredefinedList/PredefinedList\";\n\ninterface IConfMySqlProps {\n  onChange: (newValue: IElementValue[]) => void;\n  classes: any;\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n  });\n\nconst ConfMySql = ({ onChange, classes }: IConfMySqlProps) => {\n  //Local States\n  const [useDsnString, setUseDsnString] = useState<boolean>(false);\n  const [dsnString, setDsnString] = useState<string>(\"\");\n  const [host, setHostname] = useState<string>(\"\");\n  const [dbName, setDbName] = useState<string>(\"\");\n  const [port, setPort] = useState<string>(\"\");\n  const [user, setUser] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n\n  const [table, setTable] = useState<string>(\"\");\n  const [format, setFormat] = useState<string>(\"namespace\");\n  const [queueDir, setQueueDir] = useState<string>(\"\");\n  const [queueLimit, setQueueLimit] = useState<string>(\"\");\n  const [comment, setComment] = useState<string>(\"\");\n\n  // dsn_string*  (string)             MySQL data-source-name connection string e.g. \"<user>:<password>@tcp(<host>:<port>)/<database>\"\n  // table*       (string)             DB table name to store/update events, table is auto-created\n  // format*      (namespace*|access)  'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\n  // queue_dir    (path)               staging dir for undelivered messages e.g. '/home/events'\n  // queue_limit  (number)             maximum limit for undelivered messages, defaults to '100000'\n  // comment      (sentence)           optionally add a comment to this setting\n\n  const parseDsnString = (\n    input: string,\n    keys: string[]\n  ): Map<string, string> => {\n    let kvFields: Map<string, string> = new Map();\n    const regex = /(.*?):(.*?)@tcp\\((.*?):(.*?)\\)\\/(.*?)$/gm;\n    let m;\n\n    while ((m = regex.exec(input)) !== null) {\n      // This is necessary to avoid infinite loops with zero-width matches\n      if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n      }\n\n      kvFields.set(\"user\", m[1]);\n      kvFields.set(\"password\", m[2]);\n      kvFields.set(\"host\", m[3]);\n      kvFields.set(\"port\", m[4]);\n      kvFields.set(\"dbname\", m[5]);\n    }\n\n    return kvFields;\n  };\n\n  const configToDsnString = useCallback((): string => {\n    return `${user}:${password}@tcp(${host}:${port})/${dbName}`;\n  }, [user, password, host, port, dbName]);\n\n  useEffect(() => {\n    if (dsnString !== \"\") {\n      const formValues = [\n        { key: \"dsn_string\", value: dsnString },\n        { key: \"table\", value: table },\n        { key: \"format\", value: format },\n        { key: \"queue_dir\", value: queueDir },\n        { key: \"queue_limit\", value: queueLimit },\n        { key: \"comment\", value: comment },\n      ];\n\n      onChange(formValues);\n    }\n  }, [dsnString, table, format, queueDir, queueLimit, comment, onChange]);\n\n  useEffect(() => {\n    const cs = configToDsnString();\n    setDsnString(cs);\n  }, [user, dbName, password, port, host, setDsnString, configToDsnString]);\n\n  const switcherChangeEvt = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked) {\n      // build dsn_string\n      const cs = configToDsnString();\n      setDsnString(cs);\n    } else {\n      // parse dsn_string\n      const kv = parseDsnString(dsnString, [\n        \"host\",\n        \"port\",\n        \"dbname\",\n        \"user\",\n        \"password\",\n      ]);\n      setHostname(kv.get(\"host\") ? kv.get(\"host\") + \"\" : \"\");\n      setPort(kv.get(\"port\") ? kv.get(\"port\") + \"\" : \"\");\n      setDbName(kv.get(\"dbname\") ? kv.get(\"dbname\") + \"\" : \"\");\n      setUser(kv.get(\"user\") ? kv.get(\"user\") + \"\" : \"\");\n      setPassword(kv.get(\"password\") ? kv.get(\"password\") + \"\" : \"\");\n    }\n\n    setUseDsnString(event.target.checked);\n  };\n\n  return (\n    <Grid container>\n      <Grid item xs={12}>\n        <FormSwitchWrapper\n          label={\"Enter DNS String\"}\n          checked={useDsnString}\n          id=\"checkedB\"\n          name=\"checkedB\"\n          onChange={switcherChangeEvt}\n          value={\"dnsString\"}\n        />\n      </Grid>\n      {useDsnString ? (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <InputBoxWrapper\n              id=\"dsn-string\"\n              name=\"dsn_string\"\n              label=\"DSN String\"\n              value={dsnString}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setDsnString(e.target.value);\n              }}\n            />\n          </Grid>\n        </React.Fragment>\n      ) : (\n        <React.Fragment>\n          <Grid item xs={12}>\n            <Grid item xs={12} className={classes.configureString}>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"host\"\n                  name=\"host\"\n                  label=\"\"\n                  placeholder=\"Enter Host\"\n                  value={host}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setHostname(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"db-name\"\n                  name=\"db-name\"\n                  label=\"\"\n                  placeholder=\"Enter DB Name\"\n                  value={dbName}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setDbName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"port\"\n                  name=\"port\"\n                  label=\"\"\n                  placeholder=\"Enter Port\"\n                  value={port}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPort(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"user\"\n                  name=\"user\"\n                  label=\"\"\n                  placeholder=\"Enter User\"\n                  value={user}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setUser(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <InputBoxWrapper\n                  id=\"password\"\n                  name=\"password\"\n                  label=\"\"\n                  placeholder=\"Enter Password\"\n                  type=\"password\"\n                  value={password}\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <PredefinedList label={\"Connection String\"} content={dsnString} />\n          <Grid item xs={12}>\n            <br />\n          </Grid>\n        </React.Fragment>\n      )}\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"table\"\n          name=\"table\"\n          label=\"Table\"\n          placeholder=\"Enter Table Name\"\n          value={table}\n          tooltip=\"DB table name to store/update events, table is auto-created\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTable(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <RadioGroupSelector\n          currentSelection={format}\n          id=\"format\"\n          name=\"format\"\n          label=\"Format\"\n          onChange={(e) => {\n            setFormat(e.target.value);\n          }}\n          tooltip=\"'namespace' reflects current bucket/object list and 'access' reflects a journal of object operations, defaults to 'namespace'\"\n          selectorOptions={[\n            { label: \"Namespace\", value: \"namespace\" },\n            { label: \"Access\", value: \"access\" },\n          ]}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"queue-dir\"\n          name=\"queue_dir\"\n          label=\"Queue Dir\"\n          placeholder=\"Enter Queue Dir\"\n          value={queueDir}\n          tooltip=\"staging dir for undelivered messages e.g. '/home/events'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueDir(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <InputBoxWrapper\n          id=\"queue-limit\"\n          name=\"queue_limit\"\n          label=\"Queue Limit\"\n          placeholder=\"Enter Queue Limit\"\n          type=\"number\"\n          value={queueLimit}\n          tooltip=\"maximum limit for undelivered messages, defaults to '10000'\"\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setQueueLimit(e.target.value);\n          }}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <CommentBoxWrapper\n          id=\"comment\"\n          name=\"comment\"\n          label=\"Comment\"\n          placeholder=\"Enter Comment\"\n          value={comment}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setComment(e.target.value);\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default withStyles(styles)(ConfMySql);\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport get from \"lodash/get\";\nimport Grid from \"@mui/material/Grid\";\nimport { Theme } from \"@mui/material/styles\";\nimport createStyles from \"@mui/styles/createStyles\";\nimport withStyles from \"@mui/styles/withStyles\";\nimport { Button } from \"@mui/material\";\nimport ConfPostgres from \"./CustomForms/ConfPostgres\";\nimport api from \"../../../common/api\";\nimport { serverNeedsRestart, setErrorSnackMessage } from \"../../../actions\";\nimport {\n  notificationEndpointsFields,\n  notifyMysql,\n  notifyPostgres,\n  removeEmptyFields,\n} from \"./utils\";\nimport {\n  modalBasic,\n  settingsCommon,\n} from \"../Common/FormComponents/common/styleLibrary\";\nimport { servicesList } from \"./utils\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport ConfMySql from \"./CustomForms/ConfMySql\";\nimport ConfTargetGeneric from \"./ConfTargetGeneric\";\nimport { IElementValue } from \"../Configurations/types\";\nimport PageHeader from \"../Common/PageHeader/PageHeader\";\nimport { BackSettingsIcon } from \"../../../icons\";\nimport history from \"../../../history\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    ...modalBasic,\n    ...settingsCommon,\n    strongText: {\n      fontWeight: 700,\n    },\n    keyName: {\n      marginLeft: 5,\n    },\n    buttonContainer: {\n      textAlign: \"right\",\n    },\n    lambdaFormIndicator: {\n      display: \"flex\",\n      marginBottom: 40,\n    },\n    customTitle: {\n      ...settingsCommon.customTitle,\n      marginTop: 0,\n    },\n    lambdaNotif: {\n      background:\n        \"linear-gradient(90deg, rgba(249,249,250,1) 0%, rgba(250,250,251,1) 68%, rgba(254,254,254,1) 100%)\",\n      border: \"#E5E5E5 1px solid\",\n      borderRadius: 5,\n      height: 80,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"start\",\n      marginBottom: 16,\n      marginRight: 8,\n      cursor: \"pointer\",\n      padding: 0,\n      overflow: \"hidden\",\n    },\n    lambdaNotifIcon: {\n      backgroundColor: \"#FEFEFE\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: 80,\n      height: 80,\n\n      \"& img\": {\n        maxWidth: 46,\n        maxHeight: 46,\n      },\n    },\n    lambdaNotifTitle: {\n      color: \"#07193E\",\n      fontSize: 16,\n      fontFamily: \"Lato,sans-serif\",\n      paddingLeft: 18,\n    },\n    mainCont: {\n      maxWidth: 1180,\n      paddingLeft: 38,\n      paddingRight: 38,\n    },\n    backTo: {\n      margin: \"20px 0px 0\",\n    },\n  });\n\ninterface IAddNotificationEndpointProps {\n  match: any;\n  saveAndRefresh: any;\n  serverNeedsRestart: typeof serverNeedsRestart;\n  setErrorSnackMessage: typeof setErrorSnackMessage;\n  classes: any;\n}\n\nconst AddNotificationEndpoint = ({\n  match,\n  saveAndRefresh,\n  serverNeedsRestart,\n  classes,\n  setErrorSnackMessage,\n}: IAddNotificationEndpointProps) => {\n  //Local States\n  const [valuesArr, setValueArr] = useState<IElementValue[]>([]);\n  const [saving, setSaving] = useState<boolean>(false);\n  const service = match.params[\"service\"];\n  //Effects\n\n  useEffect(() => {\n    if (saving) {\n      const payload = {\n        key_values: removeEmptyFields(valuesArr),\n      };\n      api\n        .invoke(\"PUT\", `/api/v1/configs/${service}`, payload)\n        .then(() => {\n          setSaving(false);\n          serverNeedsRestart(true);\n          history.push(\"/notification-endpoints\");\n        })\n        .catch((err: ErrorResponseHandler) => {\n          setSaving(false);\n          setErrorSnackMessage(err);\n        });\n    }\n  }, [\n    saving,\n    serverNeedsRestart,\n    service,\n    valuesArr,\n    saveAndRefresh,\n    setErrorSnackMessage,\n  ]);\n\n  //Fetch Actions\n  const submitForm = (event: React.FormEvent) => {\n    event.preventDefault();\n    setSaving(true);\n  };\n\n  const onValueChange = useCallback(\n    (newValue) => {\n      setValueArr(newValue);\n    },\n    [setValueArr]\n  );\n\n  let srvComponent;\n  switch (service) {\n    case notifyPostgres: {\n      srvComponent = <ConfPostgres onChange={onValueChange} />;\n      break;\n    }\n    case notifyMysql: {\n      srvComponent = <ConfMySql onChange={onValueChange} />;\n      break;\n    }\n    default: {\n      const fields = get(notificationEndpointsFields, service, []);\n\n      srvComponent = (\n        <ConfTargetGeneric fields={fields} onChange={onValueChange} />\n      );\n    }\n  }\n\n  const targetElement = servicesList.find(\n    (element) => element.actionTrigger === service\n  );\n\n  return (\n    <Fragment>\n      <PageHeader label=\"Notification Endpoints\" />\n      <form noValidate onSubmit={submitForm}>\n        <Grid container className={classes.mainCont}>\n          <Grid item xs={12} className={classes.backTo}>\n            <button\n              onClick={() => {\n                history.push(\"/notification-endpoints/add\");\n              }}\n              className={classes.backButton}\n            >\n              <BackSettingsIcon />\n              Back To Supported Services\n            </button>\n          </Grid>\n\n          {service !== \"\" && (\n            <Fragment>\n              <Grid item xs={12}>\n                {targetElement && (\n                  <div\n                    key={`icon-${targetElement.targetTitle}`}\n                    className={classes.lambdaNotif}\n                  >\n                    <div className={classes.lambdaNotifIcon}>\n                      <img\n                        src={targetElement.logo}\n                        className={classes.logoButton}\n                        alt={targetElement.targetTitle}\n                      />\n                    </div>\n\n                    <div className={classes.lambdaNotifTitle}>\n                      <b>\n                        {targetElement ? targetElement.targetTitle : \"\"}\n                        Notification Endpoint\n                      </b>\n                    </div>\n                  </div>\n                )}\n              </Grid>\n              <Grid item xs={12}>\n                {srvComponent}\n              </Grid>\n              <Grid item xs={12} className={classes.settingsButtonContainer}>\n                <Button\n                  type=\"submit\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  disabled={saving}\n                >\n                  Save Notification Target\n                </Button>\n              </Grid>\n            </Fragment>\n          )}\n        </Grid>\n      </form>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = {\n  serverNeedsRestart,\n  setErrorSnackMessage,\n};\n\nconst connector = connect(null, mapDispatchToProps);\n\nexport default connector(withStyles(styles)(AddNotificationEndpoint));\n"],"sourceRoot":""}